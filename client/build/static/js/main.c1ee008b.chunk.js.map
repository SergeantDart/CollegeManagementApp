{"version":3,"sources":["components/NavItems.js","components/Nav.js","components/Header.js","high_order_components/Layout.js","actions/userActions.js","components/FormField.js","screens/SignIn.js","screens/SignOut.js","actions/studentActions.js","actions/facultyActions.js","actions/studyGroupActions.js","actions/studyYearActions.js","actions/coursesActions.js","actions/markActions.js","actions/presenceSheetActions.js","screens/AboutStudent.js","actions/professorActions.js","actions/departmentActions.js","screens/AboutProfessor.js","screens/AboutStudyGroup.js","actions/subjectActions.js","components/Presence.js","screens/AddPresenceSheet.js","components/Mark.js","actions/examActions.js","screens/AboutCourse.js","Firebase.js","actions/newsActions.js","screens/AboutNews.js","screens/AboutExam.js","screens/AboutSubject.js","screens/AboutDepartment.js","actions/otherActions.js","components/Student.js","screens/StudentsList.js","components/Professor.js","screens/ProfessorsList.js","components/Subject.js","screens/SubjectsList.js","components/StudyGroup.js","screens/StudyGroupsList.js","components/News.js","screens/NewsList.js","components/Course.js","screens/CoursesList.js","components/Exam.js","screens/ExamsList.js","components/Department.js","screens/DepartmentsList.js","screens/AddStudent.js","screens/AddProfessor.js","screens/AddStudyGroup.js","screens/AddCourse.js","components/Uploader.js","screens/AddNews.js","screens/AddExam.js","screens/AddSubject.js","screens/AddDepartment.js","screens/Profile.js","screens/StudentOverview.js","screens/ProfessorOverview.js","actions/documentActions.js","screens/SendDocument.js","components/Document.js","screens/DocumentsList.js","components/ChatMessage.js","screens/Chat.js","components/NewsSlider.js","components/Statistics.js","screens/Dashboard.js","permissionsConfig.js","high_order_components/Auth.js","screens/NotFound.js","Routes.js","reducers/reducers.js","reducers/userReducers.js","reducers/studentReducers.js","reducers/professorReducers.js","reducers/facultyReducers.js","reducers/studyGroupReducers.js","reducers/studyYearReducers.js","reducers/departmentReducers.js","reducers/courseReducers.js","reducers/subjectsReducers.js","reducers/presenceSheetReducers.js","reducers/markReducers.js","reducers/newsReducers.js","reducers/examReducers.js","reducers/documentReducers.js","reducers/otherReducers.js","index.js"],"names":["NavItems","state","items","class","icon","faHome","text","link","restricted","faSignInAlt","excluded","faIdCard","permissions","faUserGraduate","faUsers","faChalkboardTeacher","faUniversity","faChalkboard","faFileAlt","faBook","faNewspaper","faFileUpload","faFileDownload","faComments","faUserAlt","generateNavItem","item","index","className","to","onClick","props","onHideNav","id","validateNavItemPermissions","includes","users","login","user","userRole","renderNavItems","map","isAuth","this","Component","connect","Nav","showNav","navStyle","background","maxWidth","Header","setState","name","style","color","padding","cursor","src","pathname","fromDashboard","Layout","children","loginUser","userEmail","userPassword","type","payload","axios","post","then","response","data","catch","error","console","log","updateUser","dispatch","logoutUser","history","get","setTimeout","push","FormField","formData","changeHandle","renderErrorMessage","errorMessage","isValid","validation","validationMessage","formTemplate","element","config","label","value","onChange","event","isBlurred","onBlur","defaultValue","disabled","options","renderFormField","SignIn","isLoading","placeholder","required","email","minLength","updateForm","formResponse","newFormData","newElement","target","validateData","trim","message","test","fetchSubmitButton","submitHandle","preventDefault","dataToSubmit","isFormValid","key","document","body","click","registerError","fetchError","nextProps","logInMessage","Logout","getStudents","offset","limit","studentsData","getFilteredStudents","keyword","getStudentByEmail","student","addStudent","updateStudent","deleteStudent","delete","getFaculties","getStudyGroups","studyGroupsData","getFilteredStudyGroups","addStudyGroup","studyGroup","updateStudyGroup","studyGroupId","getStudyYears","addCourse","course","getCourses","coursesData","getFilteredCourses","getCoursesByProfessorEmail","courses","getCoursesByStudentEmail","updateCourse","courseId","getStudentMarksByStudyYear","studentId","studyYearId","updateMark","markId","mark","getPresencesByPresenceSheet","presenceSheetId","presencesData","getStudentPresencesByCourseId","presenceSheets","addPresenceSheet","presenceSheet","updatePresence","presence","AboutStudent","edit","loading","marks","presences","studyYears","isMarksListLoaded","isPresenceListLoaded","selectedStudyYear","selectedCourse","studentFirstName","studentLastName","studentEmail","studentDob","date","studentAddress","studentPhone","studentIsTaxed","facultyId","length","renderButton","editHandlle","saveHandle","cancelHandle","gotToStudyGroupHandle","renderGoToStudyGroupButton","renderError","tempFormData","Object","keys","moment","format","renderCourses","coursesList","courseName","Professor","professorFirstName","professorLastName","changeMarksHandle","renderMarks","Course","Subject","subjectId","subjectName","isGraded","theoryMarkScore","practicalMarkScore","renderMarksCatalog","studyYear","studyYearOrder","changePresencesHandle","renderPresences","PresenceSheet","presenceSheetDate","presenceStatus","renderPresencesReport","match","params","getStudyGroupsMatched","faculties","facultiesList","studyGroups","studyGroupsList","studyYearsList","students","facultyOptions","studyGroupOptions","studyYearOptions","faculty","facultyName","updatedStudent","window","location","reload","marksList","presencesList","getProfessors","professorsData","getFilteredProfessors","getProfessorByEmail","professor","addProfessor","updateProfessor","deleteProfessor","getDepartments","departmentsData","getFilteredDepartments","addDepartment","department","updateDepartment","departmentId","AboutProfessor","professorEmail","professorDob","professorAddress","professorPhone","professorSalary","professorId","departments","departmentsList","professors","departmentOptions","departmentName","updatedProfessor","AboutStudyGroup","studyGroupDescription","renderStudents","studentsList","getCoursesByStudyGroup","getStudyGroup","updatedStudyGroup","getSubjects","subjectsData","getFilteredSubjects","updateSubject","subject","addSubject","Presence","renderPresenceStatusOptions","presenceId","renderOptions","updatedPresence","alert","Student","AddPresenceSheet","isPresenceSheetDone","isPresencesListLoaded","valid","presenceSheetRemarks","renderPresencesList","renderSubmitButton","renderCompleteButton","addPresenceSheetHandle","Mark","notGreaterThan","subjectTheoryMarks","subjectPracticalMarks","Swal","fire","title","result","isConfirmed","getExams","examsData","getFilteredExams","getExamsByProfessorEmail","getExamsByStudentEmail","addExam","exam","updateExam","examId","deleteExam","AboutCourse","isExamProgrammed","isAddPresenceSheetSelected","courseTime","courseDescription","dateParts","split","indexOf","renderAddPresenceSheetButton","presenceSheetHandle","temp","renderPresenceSheet","presenceSheetsList","updateMarkHandle","renderMarksInformation","programmExamHandle","renderProgrammExamButton","renderExamInformation","examDate","renderShowSubjectPageButton","getPresenceSheetsByCourseId","getCourse","professorsList","subjects","subjectsList","exams","subjectOptions","professorOptions","updatedCourse","updatedMark","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","addNews","news","getNews","newsData","getFilteredNews","deleteNews","AboutNews","imageURL","isLoaded","getImageURL","storage","ref","child","newsPicturePath","getDownloadURL","url","updatedAt","newsAuthorName","newsTitle","dangerouslySetInnerHTML","__html","newsText","AboutExam","examDescription","examIsOnline","renderSubjectInformation","subjectCreditScore","courseOptions","updatedExam","AboutSubject","subjectDescription","subjectIsOptional","parseInt","updatedSubject","AboutDepartment","departmentDescription","renderProfessors","getProfessorsByDepartmentId","updatedDepartment","countEsentials","subjectsCount","professorsCount","studentsCount","facultiesCount","studyGroupsCount","coursesCount","newsCount","examsCount","departmentsCount","documentsCount","aboutStudent","Faculty","StudyYear","StudentsList","labels","loaded","dummy","navButtons","renderLabels","renderAddStudentButton","renderNavButtons","loadPrev","loadNext","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","renderFindButton","others","counts","deletedStudent","filteredStudentsList","faSearch","aboutProfessor","Department","ProfessorsList","renderAddProfessorButton","deletedProfessor","filteredProfessorsList","deleteSubjectHandle","deleteSubject","SubjectsList","renderSubjects","renderAddSubjectButton","deletedSubject","filteredSubjectsList","StudyGroup","deleteStudyGroupHandle","StudyGroupList","renderStudyGroups","renderAddStudyGroupButton","renderFindMyStudyGroupButton","redirectToMyStudyGroupHandle","isNaN","deletedStudyGroup","filteredStudyGroupsList","News","picturePath","fileName","aboutNewsHandle","newsId","deleteNewsHandle","NewsList","renderNews","newsList","renderAddNewsButton","deletedNews","filteredNewsList","deleteCourseHandle","deleteCourse","CoursesList","customList","renderAddCourseButton","loadAllCoursesHandle","loadProfessorCoursesHandle","loadStudentCoursesHandle","renderProfessorCoursesButton","renderStudentCoursesButton","filteredCoursesList","deletedCourse","keywordFilteredCoursesList","Exam","aboutExam","ExamsList","renderExams","examsList","renderAddExamButton","loadAllExamsHandle","loadProfessorExamsHandle","loadStudentExamsHandle","renderProfessorExamsButton","filteredExamsList","deletedExam","keywordFilteredExamsList","deleteDepartmentHandle","deleteDepartment","DepartmentsList","renderDepartments","renderAddDepartmentButton","deletedDepartment","filteredDepartmentsList","AddStudent","AddProfessor","AddStudyGroup","lastStudyGroupId","AddCourse","Uploader","isUploading","progress","fileUrl","uploadStartHandle","uploadErrorHandle","uploadSuccessHandle","referencedStoragePath","storeFileName","progressHandle","accept","acceptedFormat","randomizeFilename","storageRef","onUploadStart","onUploadError","onUploadSuccess","onProgress","AddNews","editorState","EditorState","createEmpty","content","editorStateHandle","contentState","getCurrentContent","html","stateToHTML","onSubmit","wrapperClassName","editorClassName","onEditorStateChange","AddExam","find","AddSubject","AddDepartment","Profile","userPasswordConfirm","passwordConfirm","userId","userInfo","updatedUser","StudentOverview","ProfessorOverview","getDocuments","documentsData","getFilteredDocuments","sendDocument","documentTitle","documentDescription","documentStoragePath","deleteDocument","documentId","SendDocument","documents","Document","documentPath","getDocumentURL","openDocumentHandle","createElement","href","download","hidden","User","DocumentsList","renderDocuments","documentsList","deletedDocument","filteredDocumentsList","ChatMessage","userName","currentUserId","useRef","messagesReference","firestore","collection","messagesQuery","orderBy","limitToLast","useCollectionData","idField","messages","useState","formValue","setFormValue","add","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","NewsSlider","settings","dots","infinite","arrows","speed","slidesToShow","slidesToScroll","callback","renderSliderOptions","asyncRequests","Promise","resolve","all","Statistics","done","generateContainers","containers","container","path","marginBottom","display","margin","fontSize","Dashboard","start","amount","roles","permissionsConfig","component","exact","SignOut","StudyGroupsList","Chat","Auth","WantedComponent","requiresAuth","AuthCheck","currentRoute","route","k","forEach","permission","NotFound","Routes","Login","StudentList","rootReducer","combineReducers","action","generatedStudyGroups","deletedPresenceSheet","updatedNews","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","reducers","getElementById"],"mappings":"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","file":"static/js/main.c1ee008b.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {connect} from \"react-redux\";\r\nimport {faChalkboardTeacher, faUserGraduate, faBook, faUniversity, faHome, faSignInAlt, faUsers, faFileAlt, faUserAlt, faComments, faChalkboard, faNewspaper, faFileUpload, faFileDownload, faIdCard} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass NavItems extends Component {\r\n\r\n    state = {\r\n        items: [\r\n            {\r\n                class: \"nav_item\",\r\n                icon: faHome,\r\n                text: \"Home\",\r\n                link: \"/\",\r\n                restricted: false\r\n            },\r\n            {\r\n                class: \"nav_item\",\r\n                icon: faSignInAlt,\r\n                text: \"Login\",\r\n                link: \"/login\",\r\n                restricted: false,\r\n                excluded: true\r\n            },\r\n            {\r\n                class: \"nav_item\",\r\n                icon: faIdCard,\r\n                text: \"Student overview\",\r\n                link: \"/student-overview\",\r\n                restricted: true,\r\n                permissions: [\"student\"]\r\n            },\r\n            {\r\n                class: \"nav_item\",\r\n                icon: faIdCard,\r\n                text: \"Professor overview\",\r\n                link: \"/professor-overview\",\r\n                restricted: true,\r\n                permissions: [\"professor\"]\r\n            },\r\n            {\r\n                class: \"nav_item\",\r\n                icon: faUserGraduate,\r\n                text: \"Students\",\r\n                link: \"/students-list\",\r\n                restricted: true,\r\n                permissions: [\"admin\", \"professor\", \"student\"]\r\n            },\r\n            {\r\n                class: \"nav_item\",\r\n                icon: faUsers,\r\n                text: \"Study groups\",\r\n                link: \"/studygroups-list\",\r\n                restricted: true,\r\n                permissions: [\"admin\", \"professor\", \"student\"]\r\n            },\r\n            {\r\n                class: \"nav_item\",\r\n                icon: faChalkboardTeacher,\r\n                text: \"Professors\",\r\n                link: \"/professors-list\",\r\n                restricted: true,\r\n                permissions: [\"admin\", \"professor\"]\r\n            },\r\n            {\r\n                class: \"nav_item\",\r\n                icon: faUniversity,\r\n                text: \"Departments\",\r\n                link: \"/departments-list\",\r\n                restricted: true,\r\n                permissions: [\"admin\", \"professor\"]\r\n            },\r\n            {\r\n                class: \"nav_item\",\r\n                icon: faChalkboard,\r\n                text: \"Courses\",\r\n                link: \"/courses-list\",\r\n                restricted: true,\r\n                permissions: [\"admin\", \"professor\", \"student\"]\r\n            },\r\n            {\r\n                class: \"nav_item\",\r\n                icon: faFileAlt,\r\n                text: \"Exams\",\r\n                link: \"/exams-list\",\r\n                restricted: true,\r\n                permissions: [\"admin\", \"professor\", \"student\"]\r\n            },\r\n            {\r\n                class: \"nav_item\",\r\n                icon: faBook,\r\n                text: \"Subjects\",\r\n                link: \"/subjects-list\",\r\n                restricted: true,\r\n                permissions: [\"admin\", \"student\", \"professor\"]\r\n            },\r\n            {\r\n                class: \"nav_item\",\r\n                icon: faNewspaper,\r\n                text: \"News\",\r\n                link: \"/news-list\",\r\n                restricted: true,\r\n                permissions: [\"admin\"]\r\n            },\r\n            {\r\n                class: \"nav_item\",\r\n                icon: faFileUpload,\r\n                text: \"Send docs\",\r\n                link: \"/send-document\",\r\n                restricted: true,\r\n                permissions: [\"professor\", \"student\"]\r\n            },\r\n            {\r\n                class: \"nav_item\",\r\n                icon: faFileDownload,\r\n                text: \"Received docs\",\r\n                link: \"/documents-list\",\r\n                restricted: true,\r\n                permissions: [\"admin\"]\r\n            },\r\n            {\r\n                class: \"nav_item\",\r\n                icon: faComments,\r\n                text: \"Chat\",\r\n                link: \"/chat\",\r\n                restricted: true,\r\n                permissions: [\"admin\", \"student\", \"professor\"]\r\n            },\r\n            {\r\n                class: \"nav_item\",\r\n                icon: faUserAlt,\r\n                text: \"Profile\",\r\n                link: \"/profile\",\r\n                restricted: true,\r\n                permissions: [\"admin\", \"student\", \"professor\"]\r\n            },\r\n            {\r\n                class: \"nav_item\",\r\n                icon: faSignInAlt,\r\n                text: \"Logout\",\r\n                link: \"/logout\",\r\n                restricted: true,\r\n                permissions: [\"admin\", \"student\", \"professor\"]\r\n            }\r\n        ]   \r\n    }\r\n\r\n    generateNavItem = (item, index) => {\r\n        return (\r\n            <div key={index} className={item.class}>\r\n                <Link to={item.link} onClick={this.props.onHideNav}>\r\n                    <FontAwesomeIcon id=\"nav_icon\" icon={item.icon}/>\r\n                    <span id=\"nav_text\"></span>{item.text}\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    validateNavItemPermissions = (item, index) => {\r\n        if(item.permissions.includes(this.props.users.login.user.userRole)) {\r\n            return this.generateNavItem(item, index);\r\n        }else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderNavItems = (items) => {\r\n        return this.props.users.login ?\r\n        items.map((item, index) => {\r\n            if(this.props.users.login.isAuth) {\r\n                return !item.excluded ?\r\n                           item.permissions ?\r\n                                this.validateNavItemPermissions(item, index)\r\n                                :\r\n                                this.generateNavItem(item, index)\r\n                           :\r\n                           null;\r\n            }else {\r\n                return !item.restricted ?\r\n                           this.generateNavItem(item, index)\r\n                           :\r\n                           null;\r\n            }\r\n        })\r\n        :\r\n        null\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            \r\n                {this.renderNavItems(this.state.items)}\r\n\r\n             </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        users: state.users\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavItems);","import React from \"react\";\r\nimport {SideNav} from \"react-simple-sidenav\";\r\nimport NavItems from \"../components/NavItems\";\r\n\r\nconst Nav = (props) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <SideNav\r\n                showNav={props.showNav}\r\n                onHideNav={props.onHideNav}\r\n                navStyle={{\r\n                    background: \"yellow\",\r\n                    maxWidth: \"300px\"\r\n                }}>\r\n\r\n                    <NavItems onHideNav={props.onHideNav}/>   \r\n            </SideNav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React , {Component} from \"react\";\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Nav from \"./Nav\";\r\n\r\nclass Header extends Component {\r\n\r\n    state = {\r\n        showNav: false\r\n    };\r\n\r\n    onHideNav = () => {\r\n        this.setState({showNav: false});\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <header>\r\n\r\n                <div className=\"sidenav_bars\">\r\n                    <FontAwesome name=\"bars\"\r\n                        onClick={() => this.setState({showNav: true})}\r\n                        style={{\r\n                            color: \"#ffffff\",\r\n                            padding: \"10px\",\r\n                            cursor: \"pointer\"\r\n                        }}    \r\n                    />\r\n\r\n                    <span className=\"logo_container\">\r\n                        <img id=\"logo\" src=\"/images/college_logo.jpg\"/>\r\n\r\n                        <Link to={{\r\n                            pathname: \"/\",\r\n                            state: {fromDashboard: true}}}>\r\n                                    College Management App\r\n                        </Link>\r\n                    </span>\r\n    \r\n\r\n                </div>\r\n\r\n                <Nav showNav={this.state.showNav} onHideNav={this.onHideNav}/>\r\n\r\n\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"../components/Header\";\r\n\r\nconst Layout = (props) => {\r\n    \r\n    return (\r\n        <div>\r\n            <Header/>\r\n            {props.children}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Layout;","import axios from \"axios\";\r\n\r\nexport function loginUser({userEmail, userPassword}) {\r\n    const request = axios.post(\"/api/loginUser\", {userEmail, userPassword})\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n        console.log(error);\r\n    });\r\n\r\n    return {\r\n        type: \"USER_LOGIN\",\r\n        payload: request\r\n    };\r\n}\r\n\r\nexport function authUser() {\r\n    const request = axios.get(\"/api/authUser\")\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n        console.log(error);\r\n    });\r\n\r\n    return {\r\n        type: \"USER_AUTH\",\r\n        payload: request\r\n    };\r\n}\r\n\r\nexport function updateUser(id, user) {\r\n    return(dispatch) => {\r\n        axios.post(`/api/updateUser/${id}`, user)\r\n        .then(user => {\r\n            user = user.data;\r\n            dispatch({\r\n                type: \"UPDATE_USER\",\r\n                payload: user\r\n            });\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function clearUpdatedUser() {\r\n    return {\r\n        type: \"CLEAR_UPDATED_USER\",\r\n        payload: null\r\n    };\r\n}\r\n\r\nexport function logoutUser(history) {\r\n    const request = axios.get(\"/api/logoutUser\")\r\n    .then(() => {\r\n        setTimeout(() => {\r\n            history.push(\"/login\");\r\n        }, 1000);\r\n\r\n    }).catch(error => console.log(error));\r\n\r\n    return {\r\n        type: \"USER_LOGOUT\",\r\n        payload: request\r\n    };\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nconst FormField = ({formData, changeHandle, id}) => {\r\n\r\n    const renderErrorMessage = () => {\r\n        let errorMessage = null;\r\n\r\n        if(!formData.isValid && formData.validation) {\r\n            errorMessage = (\r\n                <div className=\"error\">\r\n                    {formData.validationMessage}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return errorMessage;\r\n    }\r\n\r\n\r\n    const renderFormField = () => {\r\n        let formTemplate = null;\r\n\r\n        switch(formData.element) {\r\n            case \"input\":\r\n                formTemplate = (\r\n                    <div className=\"form-group form-inline\">\r\n                        <label>\r\n                            {formData.config.label}\r\n                            <input\r\n                                {...formData.config}\r\n                                value={formData.value}\r\n                                onChange={(event) => changeHandle({event, id, isBlurred: false})}\r\n                                onBlur={(event) => changeHandle({event, id, isBlurred: true})}/>\r\n                        </label>\r\n    \r\n                        {renderErrorMessage()}\r\n                    </div>\r\n                )\r\n                break;\r\n            case \"select\":\r\n                formTemplate = (\r\n                    <div className=\"form-group form-inline\">\r\n                        <label>\r\n                            {formData.config.label}\r\n                            <select\r\n                                {...formData.config}\r\n                                value={formData.value}\r\n                                defaultValue={formData.defaultValue || \"\"}\r\n                                name={formData.config.name}\r\n                                onChange={(event) => changeHandle({event, id, isBlurred: false})}\r\n                                onBlur={(event) => changeHandle({event, id, isBlurred: true})}>\r\n                                    {!formData.defaultValue ?  <option value=\"\" disabled>Choose an option...</option> : null }\r\n                                    {formData.config.options.map((item, index) => {\r\n                                        return (\r\n                                            <option key={index} value={item.id}>{item.name}</option>\r\n                                        );\r\n                                    })}\r\n                            </select>\r\n                        </label>\r\n                    </div>\r\n                );\r\n                break;\r\n            default: \r\n                formTemplate = null;\r\n        }\r\n        \r\n        return formTemplate;\r\n    }\r\n    return (\r\n        <div>\r\n            {renderFormField()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormField;","import React, {Component} from \"react\";\r\nimport FormField from \"../components/FormField\";\r\nimport {loginUser} from \"../actions/userActions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass SignIn extends Component {\r\n\r\n    state = {\r\n        error: \"\",\r\n        isLoading: false,\r\n        formData: {\r\n            userEmail: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"email_input\",\r\n                    type: \"email\",\r\n                    placeholder: \"Enter your email...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            userPassword: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"password_input\",\r\n                    type: \"password\",\r\n                    placeholder: \"Enter your password...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            }\r\n            \r\n        }\r\n    };\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        this.setState({\r\n            isLoading: false,\r\n            error: nextProps.users.login.logInMessage ? nextProps.users.login.logInMessage : \"\"\r\n        });\r\n        if(nextProps.users.login.user) {\r\n            this.props.history.push(\"/\");\r\n        }\r\n        \r\n    }\r\n\r\n    updateForm = (formResponse) => {\r\n        let newFormData = {...this.state.formData}\r\n        let newElement = {...newFormData[formResponse.id]};\r\n\r\n        newElement.value = formResponse.event.target.value;\r\n\r\n        if(formResponse.isBlurred){\r\n            let isValid = this.validateData(newElement);\r\n            newElement.isValid = isValid[0];\r\n            newElement.validationMessage = isValid[1];\r\n            newElement.isBlurred = formResponse.isBlurred;\r\n        }\r\n\r\n        newFormData[formResponse.id] = newElement;\r\n        this.setState({\r\n            formData: newFormData\r\n        });\r\n    }\r\n\r\n    validateData = (data) => {\r\n        let error = [true, \"\"];\r\n\r\n        if(data.validation.required) {\r\n            const isValid = data.value.trim() !== \"\" ? true : false;\r\n            const message = `${!isValid ? \"This field is required !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.email) {\r\n            const isValid = /\\S+@\\S+\\.\\S+/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid email address !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        return error;\r\n    }\r\n\r\n    fetchSubmitButton = () => {\r\n        return (\r\n            this.state.isLoading \r\n            ? \r\n            <div className=\"loader\"/>\r\n            :\r\n            <div>\r\n                <button onClick={(event) => this.submitHandle(event)}>Log in</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    submitHandle = (event) => {\r\n        event.preventDefault();\r\n        let dataToSubmit = {};\r\n        let isFormValid = true;\r\n\r\n        for(let key in this.state.formData) {\r\n            dataToSubmit[key] = this.state.formData[key].value;\r\n        }\r\n\r\n        for(let key in this.state.formData) {\r\n            isFormValid = isFormValid && this.state.formData[key].isValid ? true : false;\r\n        }\r\n\r\n        if(isFormValid) {\r\n            document.body.click();\r\n            this.setState({\r\n                isLoading: true,\r\n                registerError: \"\"\r\n            });\r\n            this.props.dispatch(loginUser(dataToSubmit));\r\n                 \r\n        }\r\n    }\r\n    \r\n    fetchError = () => {\r\n        return (\r\n            this.state.error !== \"\"\r\n            ?\r\n            <div className=\"error\">\r\n                {this.state.error}\r\n            </div>\r\n            :\r\n            \"\"\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.users.login.isAuth) {\r\n            return (\r\n                <div className=\"add_container\">\r\n                    <form>\r\n    \r\n                        <h2>Log in</h2>\r\n    \r\n                        <FormField\r\n                            id={\"userEmail\"}\r\n                            formData={this.state.formData.userEmail}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n                        <FormField\r\n                            id={\"userPassword\"}\r\n                            formData={this.state.formData.userPassword}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n    \r\n                        {this.fetchSubmitButton()}\r\n                        {this.fetchError()}\r\n    \r\n                    </form>\r\n                </div>\r\n            );\r\n        }else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        users: state.users\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SignIn);","import React, {Component} from \"react\";\r\nimport {logoutUser} from \"../actions/userActions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Logout extends Component {\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.dispatch(logoutUser(this.props.history));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"logout_container\">\r\n                <h1>Sorry to see you go...</h1>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n\r\n}\r\n    \r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        users: state.users\r\n    };\r\n}\r\nexport default connect(mapStateToProps)(Logout);","import axios from \"axios\";\r\n\r\n\r\nexport function getStudents(offset=0, limit=9999) {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getStudents?offset=${offset}&limit=${limit}`)\r\n        .then(studentsData => {\r\n            studentsData = studentsData.data;\r\n            const payload = {\r\n                studentsData,\r\n                offset,\r\n                limit\r\n            };\r\n            dispatch({\r\n                type: \"STUDENTS_LIST\",\r\n                payload: payload\r\n            });\r\n\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function getFilteredStudents(keyword=\"\") {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getFilteredStudents?keyword=${keyword}`)\r\n        .then(studentsData => {\r\n            studentsData = studentsData.data;\r\n            const payload = {\r\n                studentsData,\r\n                keyword\r\n            };\r\n            dispatch({\r\n                type: \"FILTERED_STUDENTS_LIST\",\r\n                payload: payload\r\n            });\r\n\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function getStudentByEmail(email) {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getStudentByEmail/${email}`)\r\n        .then(student => {\r\n            student = student.data;\r\n            if(student) {\r\n                dispatch({\r\n                    type: \"GET_STUDENT\",\r\n                    payload: student\r\n                });\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function getStudent(id) {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getStudent/${id}`)\r\n        .then(student => {\r\n            student = student.data;\r\n            if(student) {\r\n                dispatch({\r\n                    type: \"GET_STUDENT\",\r\n                    payload: student\r\n                });\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function getStudentsByStudyGroup(studyGroupId) {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getStudentsByStudyGroup/${studyGroupId}`)\r\n        .then(students => {\r\n            students = students.data;\r\n            if(students) {\r\n                dispatch({\r\n                    type: \"STUDENTS_LIST\",\r\n                    payload: students\r\n                });\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function clearStudentsList() {\r\n    return {\r\n        type: \"CLEAR_STUDENTS_LIST\",\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport function addStudent(student) {\r\n    return(dispatch) => {\r\n        axios.post(\"/api/addStudent\", student)\r\n        .then(response => {\r\n            response = response.data;\r\n            dispatch({\r\n                type: \"ADD_STUDENT\",\r\n                payload: response\r\n            })\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\nexport function updateStudent(id, student) {\r\n    return(dispatch) => {\r\n        axios.post(`/api/updateStudent/${id}`, student)\r\n        .then(response => {\r\n            response = response.data;\r\n            dispatch({\r\n                type: \"UPDATE_STUDENT\",\r\n                payload: response\r\n            });\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\nexport function generateStudyGroups() {\r\n    return(dispatch) => {\r\n        axios.get(\"/api/generateStudyGroups\")\r\n        .then(response => {\r\n            response = response.data;\r\n            dispatch({\r\n                type: \"GENERATE_STUDY_GROUPS\",\r\n                payload: response\r\n            })\r\n        }).catch(error => {\r\n            console.log(error);\r\n        }) \r\n    }\r\n}\r\n\r\nexport function clearStudent() {\r\n    return {\r\n        type: \"CLEAR_STUDENT\",\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport function clearStudents() {\r\n    return {\r\n        type: \"CLEAR_STUDENTS_LIST\",\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport function deleteStudent(id) {\r\n    return(dispatch) => {\r\n        axios.delete(`/api/deleteStudent/${id}`)\r\n        .then(response => {\r\n            response = response.data;\r\n            dispatch({\r\n                type: \"DELETE_STUDENT\",\r\n                payload: response\r\n            })\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n}","import axios from \"axios\";\r\n\r\nexport function getFaculties() {\r\n        const request = axios.get(\"/api/getFaculties\")\r\n        .then(response => response.data)\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    \r\n        return {\r\n            type: \"FACULTIES_LIST\",\r\n            payload: request\r\n        };\r\n}\r\n\r\nexport function clearFaculties() {\r\n    return {\r\n        type: \"CLEAR_FACULTIES\",\r\n        payload: null\r\n    };\r\n}","import axios from \"axios\";\r\n\r\n\r\nexport function getStudyGroups(offset=0, limit=999999) {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getStudyGroups?offset=${offset}&limit=${limit}`)\r\n        .then(studyGroupsData => {\r\n            studyGroupsData= studyGroupsData.data;\r\n            const payload = {\r\n                studyGroupsData,\r\n                offset,\r\n                limit\r\n            };\r\n            dispatch({\r\n                type: \"STUDY_GROUPS_LIST\",\r\n                payload: payload\r\n            });\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function getFilteredStudyGroups(keyword = \"\") {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getFilteredStudyGroups?keyword=${keyword}`)\r\n        .then(studyGroupsData => {\r\n            studyGroupsData= studyGroupsData.data;\r\n            const payload = {\r\n                studyGroupsData,\r\n                keyword\r\n            };\r\n            dispatch({\r\n                type: \"FILTERED_STUDY_GROUPS_LIST\",\r\n                payload: payload\r\n            });\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function addStudyGroup(studyGroup) {\r\n    return(dispatch) => {\r\n        axios.post(\"/api/addStudyGroup\", studyGroup)\r\n        .then(response => {\r\n            response = response.data;\r\n            dispatch({\r\n                type: \"ADD_STUDY_GROUP\",\r\n                payload: response\r\n            })\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\nexport function getStudyGroup(studyGroupId) {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getStudyGroup/${studyGroupId}`)\r\n        .then(studyGroup => {\r\n            studyGroup = studyGroup.data;\r\n            dispatch({\r\n                type: \"GET_STUDY_GROUP\",\r\n                payload: studyGroup\r\n            })\r\n        }).catch(error => {\r\n            console.log(error);\r\n        }) \r\n    }\r\n}\r\n\r\nexport function updateStudyGroup(studyGroupId, studyGroup) {\r\n    return(dispatch) => {\r\n        axios.post(`/api/updateStudyGroup/${studyGroupId}`, studyGroup)\r\n        .then(studyGroup => {\r\n            studyGroup = studyGroup.data;\r\n            dispatch({\r\n                type: \"UPDATE_STUDY_GROUP\",\r\n                payload: studyGroup\r\n            })\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport function getStudyGroupsMatched(studentId) {\r\n    const request = axios.get(`/api/getStudyGroupsMatched?studentId=${studentId}`)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n        console.log(error);\r\n    });\r\n    \r\n    return {\r\n        type: \"STUDY_GROUPS_LIST\",\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function getLastStudyGroupId() {\r\n    const request = axios.get(`/api/getLastStudyGroupId`)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n        console.log(error);\r\n    });\r\n\r\n    return {\r\n        type: \"LAST_STUDY_GROUP_ID\",\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function clearLastStudyGroupId() {\r\n    return {\r\n        type: \"CLEAR_LAST_STUDY_GROUP_ID\",\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport function clearStudyGroup() {\r\n    return {\r\n        type: \"CLEAR_STUDY_GROUP\",\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport function clearStudyGroups() {\r\n    return {\r\n        type: \"CLEAR_STUDY_GROUPS\",\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport function deleteStudyGroup(id) {\r\n    return(dispatch) => {\r\n        axios.delete(`/api/deleteStudyGroup/${id}`)\r\n        .then(response => {\r\n            response = response.data;\r\n            dispatch({\r\n                type: \"DELETE_STUDY_GROUP\",\r\n                payload: response\r\n            })\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\nexport function getStudyYears() {\r\n        const request = axios.get(\"/api/getStudyYears\")\r\n        .then(response => response.data)\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    \r\n        return {\r\n            type: \"STUDY_YEARS_LIST\",\r\n            payload: request\r\n        };\r\n}","import axios from \"axios\";\r\n\r\n\r\nexport function addCourse(course) {\r\n    return(dispatch) => {\r\n        axios.post(`/api/addCourse`, course)\r\n        .then(course => {\r\n            course = course.data;\r\n            dispatch({\r\n                type: \"ADD_COURSE\",\r\n                payload: course\r\n            });\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\nexport function getCourses(offset=0, limit=9999) {\r\n       return(dispatch) => {\r\n           axios.get(`/api/getCourses?offset=${offset}&limit=${limit}`)\r\n           .then(coursesData => {\r\n               coursesData = coursesData.data;\r\n               const payload = {\r\n                   coursesData,\r\n                   offset,\r\n                   limit\r\n               };\r\n               dispatch({\r\n                   type: \"COURSES_LIST\",\r\n                   payload: payload\r\n               });\r\n           }).catch(error => {\r\n               console.log(error);\r\n           })\r\n       } \r\n}\r\n\r\nexport function getFilteredCourses(keyword = \"\") {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getFilteredCourses?keyword=${keyword}`)\r\n        .then(coursesData => {\r\n            coursesData = coursesData.data;\r\n            const payload = {\r\n                coursesData,\r\n                keyword\r\n            };\r\n            dispatch({\r\n                type: \"KEYWORD_FILTERED_COURSES_LIST\",\r\n                payload: payload\r\n            });\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    } \r\n}\r\n\r\nexport function getCoursesBySubjectId(id) {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getCoursesBySubjectId/${id}`)\r\n        .then(courses => {\r\n            courses = courses.data;\r\n            dispatch({\r\n                type: \"COURSES_LIST\",\r\n                payload: courses\r\n            });\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    } \r\n}\r\n\r\nexport function getCoursesByProfessorEmail(email) {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getCoursesByProfessorEmail/${email}`)\r\n        .then(courses => {\r\n            courses = courses.data;\r\n            dispatch({\r\n                type: \"FILTERED_COURSES_LIST\",\r\n                payload: courses\r\n            });\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    } \r\n}\r\n\r\nexport function getCoursesByStudentEmail(email) {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getCoursesByStudentEmail/${email}`)\r\n        .then(courses => {\r\n            courses = courses.data;\r\n            dispatch({\r\n                type: \"FILTERED_COURSES_LIST\",\r\n                payload: courses\r\n            });\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    } \r\n}\r\n\r\nexport function getCourse(id) {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getCourse/${id}`)\r\n        .then(course => {\r\n            course = course.data;\r\n            if(course) {\r\n                dispatch({\r\n                    type: \"GET_COURSE\",\r\n                    payload: course\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\nexport function getCoursesByStudyGroup(studyGroupId) {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getCoursesByStudyGroup/${studyGroupId}`)\r\n        .then(courses => {\r\n            courses = courses.data;\r\n            if(courses) {\r\n                dispatch({\r\n                    type: \"COURSES_LIST\",\r\n                    payload: courses\r\n                });\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function getCoursesByProfessorId(professorId) {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getCoursesByProfessorId/${professorId}`)\r\n        .then(courses => {\r\n            courses = courses.data;\r\n            if(courses) {\r\n                dispatch({\r\n                    type: \"COURSES_LIST\",\r\n                    payload: courses\r\n                });\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function getCoursesByStudentId(studentId) {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getCoursesByStudentId/${studentId}`)\r\n        .then(courses => {\r\n            courses = courses.data;\r\n            if(courses) {\r\n                dispatch({\r\n                    type: \"COURSES_LIST\",\r\n                    payload: courses\r\n                });\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function updateCourse(courseId, course) {\r\n    return(dispatch) => {\r\n        axios.post(`/api/updateCourse/${courseId}`, course)\r\n        .then(response => {\r\n            response = response.data;\r\n            dispatch({\r\n                type: \"UPDATE_COURSE\",\r\n                payload: response\r\n            });\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\nexport function deleteCourse(courseId) {\r\n    return(dispatch) => {\r\n        axios.delete(`/api/deleteCourse/${courseId}`)\r\n        .then(response => {\r\n            response = response.data;\r\n            dispatch({\r\n                type: \"DELETE_COURSE\",\r\n                payload: response\r\n            });\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\nexport function clearCoursesList() {\r\n    return {\r\n        type: \"CLEAR_COURSES_LIST\",\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport function clearCourse() {\r\n    return {\r\n        type: \"CLEAR_COURSE\",\r\n        payload: null\r\n    }\r\n}","import axios from \"axios\";\r\n\r\nexport function getMarksByCourseId(id) {\r\n        const request = axios.get(`/api/getMarks/${id}`)\r\n        .then(response => response.data)\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    \r\n        return {\r\n            type: \"MARKS_LIST\",\r\n            payload: request\r\n        };\r\n}\r\n\r\nexport function getStudentMarksByStudyYear(studentId, studyYearId) {\r\n    const request = axios.get(`/api/getStudentMarksByStudyYear/?studentId=${studentId}&studyYearId=${studyYearId}`)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n        console.log(error);\r\n    });\r\n\r\n    return {\r\n        type: \"MARKS_LIST\",\r\n        payload: request\r\n    };}\r\n\r\nexport function updateMark(markId, mark) {\r\n    return(dispatch) => {\r\n        axios.post(`/api/updateMark/${markId}`, mark)\r\n        .then(mark => {\r\n            mark = mark.data;\r\n            dispatch({\r\n                type: \"UPDATE_MARK\",\r\n                payload: mark\r\n            });\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\nexport function clearMark() {\r\n    return {\r\n        type: \"CLEAR_MARK\",\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport function clearMarks() {\r\n    return {\r\n        type: \"CLEAR_MARKS_LIST\",\r\n        payload: null\r\n    }\r\n}","import axios from \"axios\";\r\n\r\nexport function getPresencesByPresenceSheet(presenceSheetId) {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getPresencesByPresenceSheet/${presenceSheetId}`)\r\n        .then(presencesData => {\r\n            presencesData = presencesData.data;\r\n            dispatch({\r\n                type: \"PRESENCES_LIST\",\r\n                payload: presencesData\r\n            });\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\nexport function getPresenceSheetsByCourseId(courseId) {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getPresenceSheetsByCourseId/${courseId}`)\r\n        .then(presenceSheets => {\r\n            presenceSheets = presenceSheets.data;\r\n            dispatch({\r\n                type: \"PRESENCE_SHEETS_LIST\",\r\n                payload: presenceSheets\r\n            })\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\n//TODO\r\nexport function getStudentPresencesByCourseId(studentId, courseId) {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getStudentPresencesByCourseId/?studentId=${studentId}&courseId=${courseId}`)\r\n        .then(presenceSheets => {\r\n            presenceSheets = presenceSheets.data;\r\n            dispatch({\r\n                type: \"PRESENCES_LIST\",\r\n                payload: presenceSheets\r\n            })\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\nexport function addPresenceSheet(presenceSheet) {\r\n    return(dispatch) => {\r\n        axios.post(`/api/addPresenceSheet`, presenceSheet)\r\n        .then(presenceSheet => {\r\n            presenceSheet = presenceSheet.data;\r\n            dispatch({\r\n                type: \"ADD_PRESENCE_SHEET\",\r\n                payload: presenceSheet\r\n            })\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function deletePresenceSheet(id) {\r\n    return(dispatch) => {\r\n        axios.delete(`/api/deletePresenceSheet/${id}`)\r\n        .then(presenceSheet => {\r\n            presenceSheet = presenceSheet.data;\r\n            dispatch({\r\n                type: \"DELETE_PRESENCE_SHEET\",\r\n                payload: presenceSheet\r\n            });\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function updatePresence(id, presence) {\r\n    return(dispatch) => {\r\n        axios.post(`/api/updatePresence/${id}`, presence)\r\n        .then(presence => {\r\n            presence = presence.data;\r\n            dispatch({\r\n                type: \"UPDATE_PRESENCE\",\r\n                payload: presence\r\n            });\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\nexport function clearPresenceSheet() {\r\n    return {\r\n        type: \"CLEAR_PRESENCE_SHEET\",\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport function clearPresences() {\r\n    return {\r\n        type: \"CLEAR_PRESENCES\",\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport function clearPresence() {\r\n    return {\r\n        type: \"CLEAR_PRESENCE\",\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport function clearPresenceSheetsList() {\r\n    return {\r\n        type: \"CLEAR_PRESENCE_SHEETS_LIST\",\r\n        payload: null\r\n    }\r\n}","import {Component} from \"react\";\r\nimport {getStudent, updateStudent, clearStudent} from \"../actions/studentActions\";\r\nimport {getFaculties} from \"../actions/facultyActions\";\r\nimport {getStudyGroupsMatched, clearStudyGroups} from \"../actions/studyGroupActions\";\r\nimport {getStudyYears} from \"../actions/studyYearActions\";\r\nimport {connect} from \"react-redux\";\r\nimport FormField from \"../components/FormField\";\r\nimport moment from \"moment\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {clearCoursesList, getCoursesByStudentId} from \"../actions/coursesActions\";\r\nimport {getStudentMarksByStudyYear, clearMarks} from \"../actions/markActions\";\r\nimport {getStudentPresencesByCourseId, clearPresences} from \"../actions/presenceSheetActions\";\r\n\r\nclass AboutStudent extends Component {\r\n\r\n    state = {\r\n        edit: false,\r\n        loading: true,\r\n        student: null,\r\n        courses: [],\r\n        marks: [],\r\n        presences: [],\r\n        studyYears: [],\r\n        isMarksListLoaded: false,\r\n        isPresenceListLoaded: false,\r\n        selectedStudyYear: \"\",\r\n        selectedCourse: \"\",\r\n        error: \"\",\r\n        formData: {\r\n            studentFirstName: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"studentFirstName\",\r\n                    label: \"First name: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Student first name...\"\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            studentLastName: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"studentLastName\",\r\n                    label: \"Last name: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Student last name...\"\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            studentEmail: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"studentEmail\",\r\n                    label: \"Email: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Student email...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            studentDob: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"studentDob\",\r\n                    label: \"Date of birth: \",\r\n                    placeholder: \"Student date of birth...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    date: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            studentAddress: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"studentAddress\",\r\n                    label: \"Student address: \",\r\n                    placeholder: \"Student address...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            studentPhone: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"studentPhone\",\r\n                    label: \"Student phone: \",\r\n                    placeholder: \"Student phone...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            studentIsTaxed: {\r\n                element: \"select\",\r\n                value: \"\",\r\n                defaultValue: \"\",\r\n                config: {\r\n                    name: \"studentIsTaxed\",\r\n                    label: \"Student financing option: \",\r\n                    disabled: true,\r\n                    options: [\r\n                        {\r\n                            id: 0,\r\n                            name: \"taxed\"\r\n                        },\r\n                        {\r\n                            id: 1,\r\n                            name: \"budget\"\r\n                        }\r\n                    ]\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            studyGroupId: {\r\n                element: \"select\",\r\n                value: \"\",\r\n                defaultValue: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"studyGroupId\",\r\n                    label: \"Study group: \",\r\n                    options: []\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            studyYearId: {\r\n                element: \"select\",\r\n                value: \"\",\r\n                defaultValue: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"studyYearId\",\r\n                    label: \"Study year: \",\r\n                    options: []\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            facultyId: {\r\n                element: \"select\",\r\n                value: \"\",\r\n                defaultValue: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"facultyId\",\r\n                    label: \"Student faculty: \",\r\n                    options: []\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n        }\r\n    };\r\n\r\n    UNSAFE_componentWillMount() {\r\n\r\n        this.props.dispatch(clearCoursesList());\r\n        this.props.dispatch(clearStudent());\r\n        this.props.dispatch(clearStudyGroups());\r\n        this.props.dispatch(clearMarks());\r\n        this.props.dispatch(clearPresences());\r\n\r\n\r\n        this.props.dispatch(getFaculties());\r\n        this.props.dispatch(getCoursesByStudentId(this.props.match.params.id));\r\n        this.props.dispatch(getStudent(this.props.match.params.id));\r\n        this.props.dispatch(getStudyGroupsMatched(this.props.match.params.id));\r\n        this.props.dispatch(getStudyYears());\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        console.log(nextProps);\r\n        if(nextProps.faculties.facultiesList) {\r\n            if(nextProps.courses.coursesList) {\r\n                if(nextProps.studyGroups.studyGroupsList) {\r\n                    if(nextProps.studyYears.studyYearsList) {\r\n                        if(nextProps.students.student) {\r\n                            if(this.props.users.login.user.userRole == \"student\" && this.props.users.login.user.userEmail != nextProps.students.student.studentEmail) {\r\n                                this.props.history.push(\"/not-found\");\r\n                            }\r\n\r\n                            console.log(nextProps);\r\n                            let tempFormData = this.state.formData;\r\n                            let facultyOptions = [];\r\n                            let studyGroupOptions = [];\r\n                            let studyYearOptions = [];\r\n        \r\n                            nextProps.faculties.facultiesList.map((faculty) => {\r\n                                facultyOptions.push({\r\n                                    id: faculty.facultyId,\r\n                                    name: faculty.facultyName\r\n                                });\r\n                            });\r\n        \r\n                            nextProps.studyGroups.studyGroupsList.map((studyGroup) => {\r\n                                studyGroupOptions.push({\r\n                                    id: studyGroup.studyGroupId,\r\n                                    name: studyGroup.studyGroupId\r\n                                })\r\n                            })\r\n    \r\n                            nextProps.studyYears.studyYearsList.map((studyYear) => {\r\n                                studyYearOptions.push({\r\n                                    id: studyYear.studyYearId,\r\n                                    name: studyYear.studyYearOrder\r\n                                })\r\n                            })   \r\n            \r\n                            for (var key of Object.keys(tempFormData)) {\r\n                                tempFormData[key].value = nextProps.students.student[key];\r\n                                tempFormData[key].isValid = true;\r\n                            }\r\n            \r\n                            tempFormData.studentDob.value = moment(tempFormData.studentDob.value).format(\"DD/MM/YYYY\");\r\n                            tempFormData.studentIsTaxed.defaultValue = nextProps.students.student.studentIsTaxed == true ? 0 : 1;\r\n                            tempFormData.studentIsTaxed.value = nextProps.students.student.studentIsTaxed == true ? 0 : 1;\r\n            \r\n                            tempFormData.facultyId.defaultValue = nextProps.students.student.facultyId;\r\n                            tempFormData.facultyId.value = nextProps.students.student.facultyId;\r\n        \r\n                            tempFormData.studyGroupId.defaultValue = nextProps.students.student.studyGroupId;\r\n                            tempFormData.studyGroupId.value = nextProps.students.student.studyGroupId;\r\n    \r\n                                \r\n                            tempFormData.studyYearId.defaultValue = nextProps.students.student.studyYearId;\r\n                            tempFormData.studyYearId.value = nextProps.students.student.studyYearId;\r\n            \r\n                            tempFormData.facultyId.config.options = facultyOptions;\r\n                            tempFormData.studyGroupId.config.options = studyGroupOptions;\r\n                            tempFormData.studyYearId.config.options = studyYearOptions;\r\n                \r\n                \r\n                            this.setState({\r\n                                student: nextProps.students.student,\r\n                                courses: nextProps.courses.coursesList,\r\n                                studyYears: nextProps.studyYears.studyYearsList,\r\n                                formData: tempFormData,\r\n                                loading: false\r\n                            });\r\n                        }\r\n\r\n                        if(nextProps.students.updatedStudent) {\r\n                            if(nextProps.students.updatedStudent.message) {\r\n                                this.setState({\r\n                                    error: nextProps.students.updatedStudent.message\r\n                                });\r\n                            }else {\r\n                                let tempFormData = this.state.formData;\r\n                                for(var key of Object.keys(tempFormData)) {\r\n                                    tempFormData[key].config.disabled = true;\r\n                                }\r\n                                this.setState({\r\n                                    student: nextProps.students.updatedStudent,\r\n                                    loading: false,\r\n                                    edit: false,\r\n                                    formData: tempFormData\r\n                                });\r\n                                window.location.reload();\r\n                            }\r\n                        }\r\n                \r\n                        if(nextProps.marks.marksList != null) {\r\n                            console.log(nextProps);\r\n                            this.setState({\r\n                                marks: nextProps.marks.marksList,\r\n                                isMarksListLoaded: true\r\n                            })\r\n                        }\r\n                \r\n                        if(nextProps.presenceSheets.presencesList != null) {\r\n                            console.log(nextProps);\r\n                            this.setState({\r\n                                presences: nextProps.presenceSheets.presencesList,\r\n                                isPresenceListLoaded: true\r\n                            })\r\n                        }\r\n                    }    \r\n                }  \r\n            }\r\n        }      \r\n    }\r\n\r\n    updateForm = (formResponse) => {\r\n        let newFormData = {...this.state.formData}\r\n        let newElement = {...newFormData[formResponse.id]};\r\n\r\n        newElement.value = formResponse.event.target.value;\r\n\r\n        if(formResponse.isBlurred) {\r\n            let isValid = this.validateData(newElement);\r\n            newElement.isValid = isValid[0];\r\n            newElement.validationMessage = isValid[1];\r\n            newElement.isBlurred = formResponse.isBlurred;\r\n        }\r\n\r\n        newFormData[formResponse.id] = newElement;\r\n        this.setState({\r\n            formData: newFormData\r\n        });\r\n    }\r\n\r\n    validateData = (data) => {\r\n\r\n        let error = [true, \"\"];\r\n\r\n        if(data.validation.required) {\r\n            const isValid = data.value.trim() !== \"\" ? true : false;\r\n            const message = `${!isValid ? \"This field is required !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.email) {\r\n            const isValid = /\\S+@\\S+\\.\\S+/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid email address !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.minLength) {\r\n            const isValid = data.value.length >= data.validation.minLength ? true : false;\r\n            const message = `${!isValid ? `This field must be at least ${data.validation.minLength} characters long !` : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.date) {\r\n            const isValid = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid date in DD/MM/YYYY format !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        return error;\r\n    }\r\n\r\n    renderButton = () => {\r\n        return  this.state.edit === false\r\n                ?\r\n                <button onClick={() => this.editHandlle()}>EDIT</button>\r\n                :\r\n                <div>\r\n                    <button onClick={(event) => this.saveHandle(event)}>SAVE</button>\r\n                    <button onClick={(event) => this.cancelHandle()}>CANCEL</button>\r\n                </div>\r\n    }\r\n\r\n    gotToStudyGroupHandle = () => {\r\n        this.props.history.push(`/studygroup/${this.state.student.studyGroupId}`)\r\n    }\r\n\r\n    renderGoToStudyGroupButton = () => {\r\n        \r\n        return <button onClick={() => this.gotToStudyGroupHandle()}>GO TO STUDY GROUP</button>\r\n    }\r\n\r\n    renderError = () => {\r\n        return  this.state.error != \"\"\r\n                ?\r\n                <div className=\"error\">\r\n                    {this.state.error}\r\n                </div>\r\n                :\r\n                null\r\n    }\r\n\r\n    cancelHandle = () => {\r\n        let tempFormData = this.state.formData;\r\n\r\n        for (var key of Object.keys(tempFormData)) {\r\n            tempFormData[key].value = this.state.student[key];\r\n            tempFormData[key].isValid = true;\r\n            tempFormData[key].config.disabled = true;\r\n            tempFormData[key].isBlurred = false;\r\n        }\r\n\r\n        tempFormData.studentDob.value = moment(this.state.student.studentDob).format(\"DD/MM/YYYY\");\r\n        tempFormData.studentIsTaxed.defaultValue = this.state.student.studentIsTaxed == true ? 0 : 1;\r\n        tempFormData.studentIsTaxed.value = this.state.student.studentIsTaxed == true ? 0 : 1;\r\n\r\n        tempFormData.facultyId.defaultValue =this.state.student.facultyId;\r\n        tempFormData.facultyId.value = this.state.student.facultyId;\r\n\r\n        tempFormData.studyGroupId.defaultValue = this.state.student.studyGroupId;\r\n        tempFormData.studyGroupId.value = this.state.student.studyGroupId;\r\n\r\n            \r\n        tempFormData.studyYearId.defaultValue = this.state.student.studyYearId;\r\n        tempFormData.studyYearId.value = this.state.student.studyYearId;\r\n\r\n        this.setState({\r\n            formData: tempFormData,\r\n            edit: false,\r\n            error: \"\"\r\n        });\r\n    }\r\n\r\n    editHandlle = () => {\r\n        document.body.click();\r\n        let tempFormData = this.state.formData;\r\n        for(let key in tempFormData) {\r\n            tempFormData[key].config.disabled = false;\r\n        }\r\n        this.setState({\r\n            formData: tempFormData,\r\n            edit: true\r\n        });\r\n    }\r\n\r\n    saveHandle = (event) => {\r\n        event.preventDefault();\r\n        let dataToSubmit = {};\r\n        let isFormValid = true;\r\n\r\n        for(let key in this.state.formData) {\r\n            dataToSubmit[key] = this.state.formData[key].value;\r\n        }\r\n\r\n\r\n        for(let key in this.state.formData) {\r\n            isFormValid = isFormValid && this.state.formData[key].isValid ? true : false;\r\n        }\r\n\r\n        if(isFormValid) {\r\n            document.body.click();\r\n            dataToSubmit.studentDob = moment(dataToSubmit.studentDob, \"DD/MM/YYYY\");\r\n            this.props.dispatch(clearStudent());\r\n            this.props.dispatch(updateStudent(this.state.student.studentId, dataToSubmit));\r\n            this.setState({\r\n                error: \"\",\r\n                loading: true,\r\n                edit: false\r\n            });\r\n        }else {\r\n            this.setState({\r\n                error: \"Something must have happened...\"\r\n            });\r\n        }\r\n    }\r\n\r\n    renderCourses = (coursesList) => {\r\n        return coursesList.map(course => {\r\n            return (\r\n                <div className=\"student_course\">\r\n                        <Link to={{\r\n                        pathname:`/course/${course.courseId}`,\r\n                        state: {fromDashboard: true }}}>\r\n                            {`# ${course.courseName} with ${course.Professor.professorFirstName} ${course.Professor.professorLastName} `}\r\n                        </Link>\r\n                </div>\r\n\r\n            )\r\n        })\r\n    }\r\n\r\n    changeMarksHandle = (event) => {\r\n        this.setState({\r\n           selectedStudyYear: event.target.value,\r\n           isMarksListLoaded: false\r\n        });\r\n\r\n        this.props.dispatch(clearMarks());\r\n        this.props.dispatch(getStudentMarksByStudyYear(this.state.student.studentId, event.target.value));\r\n    }\r\n\r\n    renderMarks = () => {\r\n        if(this.state.isMarksListLoaded) {\r\n            if(this.state.marks.length > 0) {\r\n                return this.state.marks.map(mark => {\r\n                    return (\r\n                        <div key={mark.markId} className=\"mark\">\r\n                                <Link to={{ \r\n                                    pathname:`/subject/${mark.Course.Subject.subjectId}`,\r\n                                    state: {fromDashboard: true }}}>\r\n                                        <div className=\"left\">\r\n                                            {mark.Course.Subject.subjectName}\r\n                                        </div>\r\n                                </Link>\r\n        \r\n                                <div className=\"right\">\r\n                                    {mark.isGraded ? `${mark.theoryMarkScore + mark.practicalMarkScore} / 100` : \"NOT GRADED\"}\r\n                                </div>\r\n                        </div>\r\n                    )     \r\n                })\r\n            }else {\r\n                return (\r\n                    <div className=\"message\">\r\n                        No marks yet.\r\n                    </div>\r\n                )\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    renderMarksCatalog = () => {\r\n        return (\r\n            <div>\r\n                <h2>Marks catalog: </h2>\r\n\r\n                <select\r\n                value={this.state.selectedStudyYear}\r\n                defaultValue=\"\"\r\n                name=\"marks_catalog\"\r\n                onChange={(event) => this.changeMarksHandle(event)}>\r\n\r\n                    <option value=\"\" disabled>Select wanted study year catalog...</option>\r\n                    {this.state.studyYears.map(studyYear => {\r\n                        return (\r\n                            <option key={studyYear.studyYearId} value={studyYear.studyYearId}>\r\n                                {studyYear.studyYearOrder}\r\n                            </option>\r\n                        )\r\n                    })}\r\n                </select>\r\n\r\n                {this.renderMarks()}\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n    changePresencesHandle = (event) => {\r\n        this.setState({\r\n            selectedCourse: event.target.value,\r\n            isPresenceListLoaded: false\r\n         });\r\n \r\n         this.props.dispatch(clearPresences());\r\n         this.props.dispatch(getStudentPresencesByCourseId(this.state.student.studentId, event.target.value));\r\n    }\r\n\r\n    renderPresences = () => {\r\n        if(this.state.isPresenceListLoaded) {\r\n            if(this.state.presences.length > 0) {\r\n                return this.state.presences.map(presence => {\r\n                    return (\r\n                        <div className=\"presence_container\">\r\n                            <div className=\"left\">\r\n                                {`${moment(presence.PresenceSheet.presenceSheetDate).format(\"DD/MM/YYYY\")}`}\r\n                            </div>\r\n                            <div className=\"right\">\r\n                                {`${presence.presenceStatus ? `PRESENT` : `ABSENT`}`}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    )\r\n                })\r\n            } else {\r\n                return (\r\n                    <div className=\"message\">\r\n                        No presences yet.\r\n                    </div>\r\n                )\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    renderPresencesReport = () => {\r\n        return (\r\n            <div>\r\n                <h2>Presences report: </h2>\r\n                <select\r\n                value={this.state.selectedCourse}\r\n                defaultValue=\"\"\r\n                name=\"presences_report\"\r\n                onChange={(event) => this.changePresencesHandle(event)}>\r\n\r\n                    <option value=\"\" disabled>Select wanted course for presences report...</option>\r\n                    {this.state.courses.map(course => {\r\n                        return (\r\n                            <option key={course.courseId} value={course.courseId}>\r\n                                {course.courseName}\r\n                            </option>\r\n                        )\r\n                    })}\r\n                </select>\r\n\r\n                {this.renderPresences()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        if(!this.state.loading && this.state.student) {\r\n            return (\r\n                <div>\r\n                    <div className=\"about_container\">\r\n                        <div className=\"about_left_container\">\r\n                            <FormField\r\n                                id={\"studentFirstName\"}\r\n                                formData={this.state.formData.studentFirstName}\r\n                                changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n                            <FormField\r\n                                id={\"studentLastName\"}\r\n                                formData={this.state.formData.studentLastName}\r\n                                changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                            <FormField\r\n                                id={\"studentEmail\"}\r\n                                formData={this.state.formData.studentEmail}\r\n                                changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                            <FormField\r\n                                id={\"studentDob\"}\r\n                                formData={this.state.formData.studentDob}\r\n                                changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                            <FormField\r\n                                id={\"studentAddress\"}\r\n                                formData={this.state.formData.studentAddress}\r\n                                changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                            <FormField\r\n                                id={\"studentPhone\"}\r\n                                formData={this.state.formData.studentPhone}\r\n                                changeHandle={(formResponse) => this.updateForm(formResponse)}/>             \r\n                                \r\n                            <FormField\r\n                                id={\"studentIsTaxed\"}\r\n                                formData={this.state.formData.studentIsTaxed}\r\n                                changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n                            <FormField\r\n                                id={\"studyGroupId\"}\r\n                                formData={this.state.formData.studyGroupId}\r\n                                changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                            <FormField\r\n                                id={\"studyYearId\"}\r\n                                formData={this.state.formData.studyYearId}\r\n                                changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n                            \r\n                            <FormField\r\n                                id={\"facultyId\"}\r\n                                formData={this.state.formData.facultyId}\r\n                                changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                            {this.props.users.login.user.userRole == \"admin\" ? this.renderButton() : null}\r\n\r\n                            {this.renderGoToStudyGroupButton()}\r\n\r\n                            {this.renderError()}\r\n\r\n                        </div>\r\n\r\n                        <div className=\"about_right_container\">\r\n                            <h2>Courses: </h2>\r\n                            {this.renderCourses(this.state.courses)}\r\n                            \r\n                            {this.renderMarksCatalog()}\r\n                            \r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"presences_report\">\r\n                            {this.renderPresencesReport()}\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n            )\r\n        }else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        students: state.students,\r\n        faculties: state.faculties,\r\n        studyGroups: state.studyGroups,\r\n        courses: state.courses,\r\n        studyYears: state.studyYears,\r\n        marks: state.marks,\r\n        presenceSheets: state.presenceSheets\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(AboutStudent);","import axios from \"axios\";\r\n\r\nexport function getProfessors(offset=0, limit=9999) {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getProfessors?offset=${offset}&limit=${limit}`)\r\n        .then(professorsData => {\r\n            professorsData= professorsData.data;\r\n            const payload = {\r\n                professorsData,\r\n                offset,\r\n                limit\r\n            };\r\n            dispatch({\r\n                type: \"PROFESSORS_LIST\",\r\n                payload: payload\r\n            });\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function getFilteredProfessors(keyword=\"\") {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getFilteredProfessors?keyword=${keyword}`)\r\n        .then(professorsData => {\r\n            professorsData = professorsData.data;\r\n            const payload = {\r\n                professorsData,\r\n                keyword\r\n            };\r\n            dispatch({\r\n                type: \"FILTERED_PROFESSORS_LIST\",\r\n                payload: payload\r\n            });\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function getProfessorsByDepartmentId(departmentId) {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getProfessorsByDepartmentId/${departmentId}`)\r\n        .then(professors => {\r\n            professors = professors.data;\r\n            if(professors) {\r\n                dispatch({\r\n                    type: \"PROFESSORS_LIST\",\r\n                    payload: professors\r\n                });\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function getProfessorByEmail(email) {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getProfessorByEmail/${email}`)\r\n        .then(professor => {\r\n            professor = professor.data;\r\n            if(professor) {\r\n                dispatch({\r\n                    type: \"GET_PROFESSOR\",\r\n                    payload: professor\r\n                });\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\nexport function getProfessor(id) {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getProfessor/${id}`)\r\n        .then(professor => {\r\n            professor = professor.data;\r\n            if(professor) {\r\n                dispatch({\r\n                    type: \"GET_PROFESSOR\",\r\n                    payload: professor\r\n                });\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function addProfessor(professor) {\r\n    return(dispatch) => {\r\n        axios.post(\"/api/addProfessor\", professor)\r\n        .then(response => {\r\n            response = response.data;\r\n            dispatch({\r\n                type: \"ADD_PROFESSOR\",\r\n                payload: response\r\n            })\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\nexport function updateProfessor(id, professor) {\r\n    return(dispatch) => {\r\n        axios.post(`/api/updateProfessor/${id}`, professor)\r\n        .then(response => {\r\n            response = response.data;\r\n            dispatch({\r\n                type: \"UPDATE_PROFESSOR\",\r\n                payload: response\r\n            });\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\nexport function clearProfessor() {\r\n    return {\r\n        type: \"CLEAR_PROFESSOR\",\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport function clearProfessors() {\r\n    return {\r\n        type: \"CLEAR_PROFESSORS\",\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport function deleteProfessor(id) {\r\n    return(dispatch) => {\r\n        axios.delete(`/api/deleteProfessor/${id}`)\r\n        .then(response => {\r\n            response = response.data;\r\n            dispatch({\r\n                type: \"DELETE_PROFESSOR\",\r\n                payload: response\r\n            })\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n}","import axios from \"axios\";\r\n\r\n\r\nexport function getDepartments(offset=0, limit=9999) {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getDepartments?offset=${offset}&limit=${limit}`)\r\n        .then(departmentsData => {\r\n            departmentsData = departmentsData.data;\r\n            const payload = {\r\n                departmentsData,\r\n                offset,\r\n                limit\r\n            };\r\n            dispatch({\r\n                type: \"DEPARTMENTS_LIST\",\r\n                payload: payload\r\n            });\r\n\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function getFilteredDepartments(keyword = \"\") {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getFilteredDepartments?keyword=${keyword}`)\r\n        .then(departmentsData => {\r\n            departmentsData = departmentsData.data;\r\n            const payload = {\r\n                departmentsData,\r\n                keyword\r\n            };\r\n            dispatch({\r\n                type: \"FILTERED_DEPARTMENTS_LIST\",\r\n                payload: payload\r\n            });\r\n\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function getDepartment(departmentId) {\r\n    const request = axios.get(`/api/getDepartment/${departmentId}`)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n        console.log(error);\r\n    });\r\n\r\n    return {\r\n        type: \"GET_DEPARTMENT\",\r\n        payload: request\r\n    }\r\n}\r\n\r\n\r\nexport function addDepartment(department) {\r\n    const request = axios.post(`/api/addDepartment`, department)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n        console.log(error);\r\n    });\r\n    return {\r\n        type: \"ADD_DEPARTMENT\",\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function updateDepartment(departmentId, department) {\r\n    const request = axios.post(`/api/updateDepartment/${departmentId}`, department)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n        console.log(error);\r\n    });\r\n    return {\r\n        type: \"UPDATE_DEPARTMENT\",\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function deleteDepartment(departmentId) {\r\n    const request = axios.delete(`/api/deleteDepartment/${departmentId}`)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n        console.log(error);\r\n    });\r\n    return {\r\n        type: \"DELETE_DEPARTMENT\",\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function clearDepartment() {\r\n    return {\r\n        type: \"CLEAR_DEPARTMENT\",\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport function clearDepartments() {\r\n    return {\r\n        type: \"CLEAR_DEPARTMENTS_LIST\",\r\n        payload: null\r\n    }\r\n}","import {Component, useRef} from \"react\";\r\nimport {getProfessor, updateProfessor, clearProfessor} from \"../actions/professorActions\";\r\nimport {getDepartments, clearDepartments} from \"../actions/departmentActions\";\r\nimport {getCoursesByProfessorId, clearCoursesList} from \"../actions/coursesActions\";\r\nimport {connect} from \"react-redux\";\r\nimport FormField from \"../components/FormField\";\r\nimport moment from \"moment\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass AboutProfessor extends Component {\r\n\r\n    \r\n    state = {\r\n        edit: false,\r\n        loading: true,\r\n        professor: null,\r\n        courses: [],\r\n        error: \"\",\r\n        formData: {\r\n            professorFirstName: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"professorFirstName\",\r\n                    label: \"First name: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Professor first name...\",\r\n                    disabled: true\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            professorLastName: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"professorLastName\",\r\n                    label: \"Last name: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Professor last name...\",\r\n                    disabled: true\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            professorEmail: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"professorEmail\",\r\n                    label: \"Email: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Professor email...\",\r\n                    disabled: true\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            professorDob: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"professorDob\",\r\n                    label: \"Date of birth: \",\r\n                    placeholder: \"Professor date of birth...\",\r\n                    disabled: true\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    date: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            professorAddress: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"professorAddress\",\r\n                    label: \"Professor address: \",\r\n                    placeholder: \"Professor address...\",\r\n                    disabled: true\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            professorPhone: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"professorPhone\",\r\n                    label: \"Professor phone: \",\r\n                    placeholder: \"Professor phone...\",\r\n                    disabled: true\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            professorSalary: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"professorSalary\",\r\n                    label: \"Professor salary: \",\r\n                    placeholder: \"Professor salary...\",\r\n                    disabled: true\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            departmentId: {\r\n                element: \"select\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"departmentId\",\r\n                    label: \"Department: \",\r\n                    options: [],\r\n                    disabled: true\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            }\r\n        }\r\n    };\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.dispatch(clearDepartments());\r\n        this.props.dispatch(clearCoursesList());\r\n        this.props.dispatch(clearProfessor());\r\n\r\n        this.props.dispatch(getDepartments());\r\n        this.props.dispatch(getCoursesByProfessorId(this.props.match.params.id));\r\n        this.props.dispatch(getProfessor(this.props.match.params.id));\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        if(nextProps.departments.departmentsList) {\r\n            if(nextProps.courses.coursesList) {\r\n                if(nextProps.professors.professor) {\r\n                    if(this.props.users.login.user.userRole == \"professor\" && this.props.users.login.user.userEmail != nextProps.professors.professor.professorEmail) {\r\n                        this.props.history.push(\"/not-found\");\r\n                    }\r\n\r\n                    let tempFormData = this.state.formData;\r\n                    let departmentOptions = [];\r\n    \r\n                    nextProps.departments.departmentsList.departmentsData.map((department) => {\r\n                        departmentOptions.push({\r\n                            id: department.departmentId,\r\n                            name: department.departmentName\r\n                        });\r\n                    });\r\n    \r\n                    for (var key of Object.keys(tempFormData)) {\r\n                        tempFormData[key].value = nextProps.professors.professor[key];\r\n                        tempFormData[key].isValid = true;\r\n                    }\r\n    \r\n                    tempFormData.professorDob.value = moment(tempFormData.professorDob.value).format(\"DD/MM/YYYY\");\r\n                    \r\n    \r\n                    tempFormData.departmentId.defaultValue = nextProps.professors.professor.departmentId;\r\n                    tempFormData.departmentId.value = nextProps.professors.professor.departmentId;\r\n    \r\n    \r\n                    tempFormData.departmentId.config.options = departmentOptions;\r\n        \r\n                    console.log(tempFormData);\r\n        \r\n                    this.setState({\r\n                        professor: nextProps.professors.professor,\r\n                        courses: nextProps.courses.coursesList,\r\n                        formData: tempFormData,\r\n                        loading: false\r\n                    }); \r\n                }\r\n\r\n                if(nextProps.professors.updatedProfessor) {\r\n                    if(nextProps.professors.updatedProfessor.message) {\r\n                        this.setState({\r\n                            error: nextProps.professors.updatedProfessor.message\r\n                        });\r\n                    }else {\r\n                        let tempFormData = this.state.formData;\r\n                        for(var key of Object.keys(tempFormData)) {\r\n                            tempFormData[key].config.disabled = true;\r\n                        }\r\n                        this.setState({\r\n                            professor: nextProps.professors.updatedProfessor,\r\n                            loading: false,\r\n                            edit: false,\r\n                            formData: tempFormData\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }     \r\n    }\r\n\r\n    updateForm = (formResponse) => {\r\n        let newFormData = {...this.state.formData}\r\n        let newElement = {...newFormData[formResponse.id]};\r\n\r\n        newElement.value = formResponse.event.target.value;\r\n\r\n        if(formResponse.isBlurred) {\r\n            let isValid = this.validateData(newElement);\r\n            newElement.isValid = isValid[0];\r\n            newElement.validationMessage = isValid[1];\r\n            newElement.isBlurred = formResponse.isBlurred;\r\n        }\r\n\r\n        newFormData[formResponse.id] = newElement;\r\n        this.setState({\r\n            formData: newFormData\r\n        });\r\n    }\r\n\r\n    validateData = (data) => {\r\n\r\n        let error = [true, \"\"];\r\n\r\n        if(data.validation.required) {\r\n            const isValid = data.value.trim() !== \"\" ? true : false;\r\n            const message = `${!isValid ? \"This field is required !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.email) {\r\n            const isValid = /\\S+@\\S+\\.\\S+/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid email address !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.minLength) {\r\n            const isValid = data.value.length >= data.validation.minLength ? true : false;\r\n            const message = `${!isValid ? `This field must be at least ${data.validation.minLength} characters long !` : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.date) {\r\n            const isValid = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid date in DD/MM/YYYY format !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        return error;\r\n    }\r\n\r\n    renderButton = () => {\r\n\r\n        return  this.state.edit === false\r\n                ?\r\n                <button onClick={() => this.editHandlle()}>EDIT</button>\r\n                :\r\n                <div>\r\n                    <button onClick={(event) => this.saveHandle(event)}>SAVE</button>\r\n                    <button onClick={(event) => this.cancelHandle(event)}>CANCEL</button>\r\n\r\n                </div>\r\n    }\r\n\r\n    renderError = () => {\r\n        return  this.state.error != \"\"\r\n                ?\r\n                <div className=\"error\">\r\n                    {this.state.error}\r\n                </div>\r\n                :\r\n                null\r\n    }\r\n\r\n    cancelHandle = () => {\r\n        let tempFormData = this.state.formData;\r\n\r\n        for (var key of Object.keys(tempFormData)) {\r\n            tempFormData[key].value = this.state.professor[key];\r\n            tempFormData[key].isValid = true;\r\n            tempFormData[key].config.disabled = true;\r\n            tempFormData[key].isBlurred = false;\r\n        }\r\n\r\n        \r\n        tempFormData.professorDob.value = moment(this.state.professor.professorDob).format(\"DD/MM/YYYY\");\r\n\r\n        this.setState({\r\n            formData: tempFormData,\r\n            edit: false,\r\n            error: \"\"\r\n        });\r\n    }\r\n\r\n    editHandlle = () => {\r\n        document.body.click();\r\n        let tempFormData = this.state.formData;\r\n        for(let key in tempFormData) {\r\n            tempFormData[key].config.disabled = false;\r\n        }\r\n        this.setState({\r\n            formData: tempFormData,\r\n            edit: true\r\n        });\r\n    }\r\n\r\n    saveHandle = (event) => {\r\n        event.preventDefault();\r\n        let dataToSubmit = {};\r\n        let isFormValid = true;\r\n\r\n        for(let key in this.state.formData) {\r\n            dataToSubmit[key] = this.state.formData[key].value;\r\n        }\r\n\r\n\r\n        for(let key in this.state.formData) {\r\n            isFormValid = isFormValid && this.state.formData[key].isValid ? true : false;\r\n        }\r\n\r\n        if(isFormValid) {\r\n            document.body.click();\r\n            dataToSubmit.professorDob = moment(dataToSubmit.professorDob, \"DD/MM/YYYY\");\r\n            this.props.dispatch(clearProfessor());\r\n            this.props.dispatch(updateProfessor(this.state.professor.professorId, dataToSubmit));\r\n            this.setState({\r\n                error: \"\",\r\n                loading: true,\r\n                edit: false\r\n            });\r\n        }else {\r\n            this.setState({\r\n                error: \"Something must have happened...\"\r\n            });\r\n        }\r\n    }\r\n\r\n    renderCourses = (coursesList) => {\r\n        if(coursesList.length > 0) {\r\n            return coursesList.map(course => {\r\n                return (\r\n                    <Link to={{\r\n                        pathname:`/course/${course.courseId}`,\r\n                        state: {fromDashboard: true }}}>\r\n                            <div className=\"professor_course\">\r\n                                {`# ${course.courseName}, for study group no. ${course.studyGroupId} `}\r\n                            </div>\r\n                        </Link>\r\n                )\r\n            });\r\n        } else {\r\n            return <div className=\"message\">No courses assigned to this professor yet.</div>\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        if(!this.state.loading && this.state.professor) {\r\n            return (\r\n                <div className=\"about_container\">\r\n                    <div className=\"about_left_container\">\r\n                        <FormField\r\n                            id={\"professorFirstName\"}\r\n                            formData={this.state.formData.professorFirstName}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n                        <FormField\r\n                            id={\"professorLastName\"}\r\n                            formData={this.state.formData.professorLastName}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"professorEmail\"}\r\n                            formData={this.state.formData.professorEmail}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"professorDob\"}\r\n                            formData={this.state.formData.professorDob}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"professorAddress\"}\r\n                            formData={this.state.formData.professorAddress}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"professorPhone\"}\r\n                            formData={this.state.formData.professorPhone}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>             \r\n                            \r\n                        <FormField\r\n                            id={\"professorSalary\"}\r\n                            formData={this.state.formData.professorSalary}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n                        <FormField\r\n                            id={\"departmentId\"}\r\n                            formData={this.state.formData.departmentId}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n\r\n                        {this.props.users.login.user.userRole == \"admin\" ? this.renderButton() : null}\r\n                        {this.renderError()}\r\n\r\n                    </div>\r\n                    <div className=\"about_right_container\">\r\n                         <h2>Courses: </h2>\r\n                         {this.renderCourses(this.state.courses)}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        professors: state.professors,\r\n        departments: state.departments,\r\n        courses: state.courses\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(AboutProfessor);","import {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getFaculties} from \"../actions/facultyActions\";\r\nimport {getStudyYears} from \"../actions/studyYearActions\";\r\nimport {getStudyGroup, updateStudyGroup, clearStudyGroup} from \"../actions/studyGroupActions\";\r\nimport FormField from \"../components/FormField\";\r\nimport {getStudentsByStudyGroup, clearStudentsList} from \"../actions/studentActions\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {clearCoursesList, getCoursesByStudyGroup} from \"../actions/coursesActions\";\r\n\r\nclass AboutStudyGroup extends Component {\r\n\r\n    state = {\r\n        edit: false,\r\n        loading: false,\r\n        studyGroup: null,\r\n        students: [],\r\n        courses: [],\r\n        error: \"\",\r\n        formData: {\r\n            studyGroupId: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"studyGroupId\",\r\n                    label: \"Study group no.: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Study group number...\"\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            studyGroupDescription: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"studyGroupDescription\",\r\n                    label: \"Description: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Study group description...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            facultyId: {\r\n                element: \"select\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"facultyId\",\r\n                    label: \"Faculty: \",\r\n                    options: []\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            studyYearId: {\r\n                element: \"select\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"studyYearId\",\r\n                    label: \"Study year: \",\r\n                    options: []\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            }\r\n        }\r\n    };\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.dispatch(clearStudentsList());\r\n        this.props.dispatch(clearCoursesList());\r\n        this.props.dispatch(clearStudyGroup());\r\n\r\n        this.props.dispatch(getFaculties());\r\n        this.props.dispatch(getStudyYears());\r\n        this.props.dispatch(getStudentsByStudyGroup(this.props.match.params.id));\r\n        this.props.dispatch(getCoursesByStudyGroup(this.props.match.params.id));\r\n        this.props.dispatch(getStudyGroup(this.props.match.params.id));\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        if(nextProps.faculties.facultiesList) {\r\n            if(nextProps.studyYears.studyYearsList) {\r\n                if(nextProps.students.studentsList) {\r\n                    if(nextProps.courses.coursesList) {\r\n                        if(nextProps.studyGroups.studyGroup) {\r\n\r\n                            console.log(nextProps);\r\n                            \r\n                            let tempFormData = this.state.formData;\r\n                            let facultyOptions = [];\r\n                            let studyYearOptions = [];\r\n    \r\n                            nextProps.faculties.facultiesList.map((faculty) => {\r\n                                facultyOptions.push({\r\n                                    id: faculty.facultyId,\r\n                                    name: faculty.facultyName\r\n                                });\r\n                            });\r\n    \r\n                            nextProps.studyYears.studyYearsList.map((studyYear) => {\r\n                                studyYearOptions.push({\r\n                                    id: studyYear.studyYearId,\r\n                                    name: studyYear.studyYearOrder\r\n                                })\r\n                            })   \r\n            \r\n                            for (var key of Object.keys(tempFormData)) {\r\n                                tempFormData[key].value = nextProps.studyGroups.studyGroup[key];\r\n                                tempFormData[key].isValid = true;\r\n                            }\r\n            \r\n            \r\n                            tempFormData.facultyId.defaultValue = nextProps.studyGroups.studyGroup.facultyId;\r\n                            tempFormData.facultyId.value = nextProps.studyGroups.studyGroup.facultyId;\r\n\r\n                            tempFormData.studyYearId.defaultValue = nextProps.studyGroups.studyGroup.studyYearId;\r\n                            tempFormData.studyYearId.value = nextProps.studyGroups.studyGroup.studyYearId;\r\n    \r\n                            tempFormData.facultyId.config.options = facultyOptions;\r\n                            tempFormData.studyYearId.config.options = studyYearOptions;\r\n                \r\n                \r\n                            this.setState({\r\n                                studyGroup: nextProps.studyGroups.studyGroup,\r\n                                students: nextProps.students.studentsList,\r\n                                courses: nextProps.courses.coursesList,\r\n                                formData: tempFormData,\r\n                                loading: false\r\n                            });\r\n                        }\r\n                        if(nextProps.studyGroups.updatedStudyGroup) {\r\n                            if(nextProps.studyGroups.updatedStudyGroup.message) {\r\n                                this.setState({\r\n                                    error: nextProps.studyGroups.updatedStudyGroup.message\r\n                                });\r\n                            }else {\r\n                                let tempFormData = this.state.formData;\r\n                                for(var key of Object.keys(tempFormData)) {\r\n                                    tempFormData[key].config.disabled = true;\r\n                                }\r\n                                this.setState({\r\n                                    studyGroup: nextProps.studyGroups.updatedStudyGroup,\r\n                                    loading: false,\r\n                                    edit: false,\r\n                                    formData: tempFormData\r\n                                });\r\n                            }\r\n                        }\r\n                    } \r\n                }  \r\n            }\r\n        }\r\n    }\r\n\r\n    updateForm = (formResponse) => {\r\n        let newFormData = {...this.state.formData}\r\n        let newElement = {...newFormData[formResponse.id]};\r\n\r\n        newElement.value = formResponse.event.target.value;\r\n\r\n        if(formResponse.isBlurred) {\r\n            let isValid = this.validateData(newElement);\r\n            newElement.isValid = isValid[0];\r\n            newElement.validationMessage = isValid[1];\r\n            newElement.isBlurred = formResponse.isBlurred;\r\n        }\r\n\r\n        newFormData[formResponse.id] = newElement;\r\n        this.setState({\r\n            formData: newFormData\r\n        });\r\n    }\r\n\r\n    validateData = (data) => {\r\n\r\n        let error = [true, \"\"];\r\n\r\n        if(data.validation.required) {\r\n            const isValid = data.value.trim() !== \"\" ? true : false;\r\n            const message = `${!isValid ? \"This field is required !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.email) {\r\n            const isValid = /\\S+@\\S+\\.\\S+/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid email address !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.minLength) {\r\n            const isValid = data.value.length >= data.validation.minLength ? true : false;\r\n            const message = `${!isValid ? `This field must be at least ${data.validation.minLength} characters long !` : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.date) {\r\n            const isValid = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid date in DD/MM/YYYY format !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        return error;\r\n    }\r\n\r\n    renderButton = () => {\r\n        return  this.state.edit === false\r\n                ?\r\n                <button onClick={() => this.editHandlle()}>EDIT</button>\r\n                :\r\n                <div>\r\n                    <button onClick={(event) => this.saveHandle(event)}>SAVE</button>\r\n                    <button onClick={(event) => this.cancelHandle(event)}>CANCEL</button>\r\n                </div>\r\n    }\r\n\r\n    renderError = () => {\r\n        return  this.state.error != \"\"\r\n                ?\r\n                <div className=\"error\">\r\n                    {this.state.error}\r\n                </div>\r\n                :\r\n                null\r\n    }\r\n\r\n    editHandlle = () => {\r\n        let tempFormData = this.state.formData;\r\n        for(let key in tempFormData) {\r\n            if(key != \"studyGroupId\") {\r\n                tempFormData[key].config.disabled = false;\r\n            }\r\n        }\r\n        this.setState({\r\n            formData: tempFormData,\r\n            edit: true\r\n        });\r\n    }\r\n\r\n    cancelHandle = () => {\r\n        let tempFormData = this.state.formData;\r\n\r\n        for (var key of Object.keys(tempFormData)) {\r\n            tempFormData[key].value = this.state.studyGroup[key];\r\n            tempFormData[key].isValid = true;\r\n            tempFormData[key].config.disabled = true;\r\n            tempFormData[key].isBlurred = false;\r\n        }\r\n            \r\n        tempFormData.studyYearId.defaultValue = this.state.studyGroup.studyYearId;\r\n        tempFormData.studyYearId.value = this.state.studyGroup.studyYearId;\r\n\r\n        tempFormData.facultyId.defaultValue = this.state.studyGroup.facultyId;\r\n        tempFormData.facultyId.value = this.state.studyGroup.facultyId;\r\n\r\n        this.setState({\r\n            formData: tempFormData,\r\n            edit: false,\r\n            error: \"\"\r\n        });\r\n    }\r\n\r\n    saveHandle = (event) => {\r\n        event.preventDefault();\r\n        let dataToSubmit = {};\r\n        let isFormValid = true;\r\n\r\n        for(let key in this.state.formData) {\r\n            dataToSubmit[key] = this.state.formData[key].value;\r\n        }\r\n\r\n\r\n        for(let key in this.state.formData) {\r\n            isFormValid = isFormValid && this.state.formData[key].isValid ? true : false;\r\n        }\r\n\r\n        if(isFormValid) {\r\n            document.body.click();\r\n            this.props.dispatch(clearStudyGroup());\r\n            this.props.dispatch(updateStudyGroup(this.state.studyGroup.studyGroupId, dataToSubmit));\r\n            this.setState({\r\n                error: \"\",\r\n                loading: true,\r\n                edit: false\r\n            });\r\n        }else {\r\n            this.setState({\r\n                error: \"Something must have happened...\"\r\n            });\r\n        }\r\n    }\r\n\r\n    renderStudents = (studentsList) => {\r\n        if(studentsList.length > 0) {\r\n            return studentsList.map(student => {\r\n                return (\r\n                    <div className=\"studygroup_student\">\r\n                        {this.props.users.login.user.userRole != \"student\" ?\r\n                        <Link to={{ \r\n                            pathname:`/student/${student.studentId}`,\r\n                            state: {fromDashboard: true }}}>\r\n                        {`--- ${student.studentFirstName} ${student.studentLastName}`}\r\n                        </Link>\r\n                        :\r\n                        <div>\r\n                            {`--- ${student.studentFirstName} ${student.studentLastName}`}\r\n                        </div>\r\n                        }\r\n                    </div>\r\n    \r\n                )\r\n            });\r\n        } else {\r\n            return <div className=\"message\">No students in this study group yet.</div>\r\n        }\r\n\r\n    }\r\n\r\n    renderCourses = (coursesList) => {\r\n        if(coursesList.length > 0) {\r\n            return coursesList.map(course => {\r\n                return (\r\n                    <div className=\"studygroup_course\">\r\n                            <Link to={{\r\n                            pathname:`/course/${course.courseId}`,\r\n                            state: {fromDashboard: true }}}>\r\n                                    {`# ${course.courseName} with ${course.Professor.professorFirstName} ${course.Professor.professorLastName} `}\r\n                            </Link>\r\n                    </div>\r\n    \r\n                )\r\n            });\r\n        }else {\r\n            return <div className=\"message\">This study group was not assigned courses yet.</div>\r\n        }     \r\n    }\r\n\r\n\r\n    render() {\r\n        if(!this.state.loading && this.state.studyGroup) {\r\n            return (\r\n                <div className=\"about_container\">\r\n                    <div className=\"about_left_container\">\r\n                        <FormField\r\n                            id={\"studyGroupId\"}\r\n                            formData={this.state.formData.studyGroupId}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n                        <FormField\r\n                            id={\"studyGroupDescription\"}\r\n                            formData={this.state.formData.studyGroupDescription}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"facultyId\"}\r\n                            formData={this.state.formData.facultyId}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"studyYearId\"}\r\n                            formData={this.state.formData.studyYearId}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        {this.props.users.login.user.userRole == \"admin\" ? this.renderButton() : null}\r\n                        {this.renderError()}\r\n\r\n                    </div>\r\n                    <div className=\"about_right_container\">\r\n                         <h2>Students: </h2>\r\n                         {this.renderStudents(this.state.students)}\r\n                    </div>\r\n\r\n                    <div className=\"more\">\r\n                        <h2>Courses: </h2>\r\n                        {this.renderCourses(this.state.courses)}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            )\r\n        }else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        studyGroups: state.studyGroups,\r\n        students: state.students,\r\n        faculties: state.faculties,\r\n        studyYears: state.studyYears,\r\n        courses: state.courses\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AboutStudyGroup);","import axios from \"axios\";\r\n\r\n\r\nexport function getSubjects(offset=0, limit=999999) {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getSubjects?offset=${offset}&limit=${limit}`)\r\n        .then(subjectsData => {\r\n            subjectsData = subjectsData.data;\r\n            const payload = {\r\n                subjectsData,\r\n                offset,\r\n                limit\r\n            };\r\n            dispatch({\r\n                type: \"SUBJECTS_LIST\",\r\n                payload: payload\r\n            });\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function getFilteredSubjects(keyword=\"\") {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getFilteredSubjects?keyword=${keyword}`)\r\n        .then(subjectsData => {\r\n            subjectsData = subjectsData.data;\r\n            const payload = {\r\n                subjectsData,\r\n                keyword\r\n            };\r\n            dispatch({\r\n                type: \"FILTERED_SUBJECTS_LIST\",\r\n                payload: payload\r\n            });\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function getSubject(subjectId) {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getSubject/${subjectId}`)\r\n        .then(subject => {\r\n            subject = subject.data;\r\n            dispatch({\r\n                type: \"GET_SUBJECT\",\r\n                payload: subject\r\n            })\r\n        }).catch(error => {\r\n            console.log(error);\r\n        }) \r\n    }\r\n}\r\n\r\nexport function getSubjectByExamId(examId) {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getSubjectByExamId/${examId}`)\r\n        .then(subject => {\r\n            subject = subject.data;\r\n            dispatch({\r\n                type: \"GET_SUBJECT\",\r\n                payload: subject\r\n            });\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\nexport function updateSubject(subjectId, subject) {\r\n    return(dispatch) => {\r\n        axios.post(`/api/updateSubject/${subjectId}`, subject)\r\n        .then(subject => {\r\n            subject = subject.data;\r\n            dispatch({\r\n                type: \"UPDATE_SUBJECT\",\r\n                payload: subject\r\n            })\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\nexport function addSubject(subject) {\r\n    return(dispatch) => {\r\n        axios.post(\"/api/addSubject\", subject)\r\n        .then(response => {\r\n            response = response.data;\r\n            dispatch({\r\n                type: \"ADD_SUBJECT\",\r\n                payload: response\r\n            })\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\nexport function deleteSubject(subjectId) {\r\n    const request = axios.delete(`/api/deleteSubject/${subjectId}`)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n        console.log(error);\r\n    });\r\n    return {\r\n        type: \"DELETE_SUBJECT\",\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function clearSubject() {\r\n    return {\r\n        type: \"CLEAR_SUBJECT\",\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport function clearSubjects() {\r\n    return {\r\n        type: \"CLEAR_SUBJECTS\",\r\n        payload: null\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import {Component} from \"react\";\r\nimport {useRef} from \"react\";\r\nimport {updatePresence, clearPresence} from \"../actions/presenceSheetActions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Presence extends Component {\r\n\r\n    state = {\r\n        presenceStatus: null,\r\n        disabled: false,\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.presenceSheets.updatedPresence != null) {\r\n            if(nextProps.presenceSheets.updatedPresence.message) {\r\n                window.alert(nextProps.presenceSheets.updatedPresence.message)\r\n            }else {\r\n                this.setState({\r\n                    disabled: true,\r\n                })\r\n            }\r\n            this.props.dispatch(clearPresence());\r\n        }\r\n    }\r\n    renderPresenceStatusOptions = () => {\r\n        return <select\r\n                value={this.state.presenceStatus}\r\n                defaultValue={this.props.presence.presenceStatus || \"\"}\r\n                disabled={this.state.disabled}\r\n                name=\"presence_status\"\r\n                onChange={(event) => this.changeHandle(event)}>\r\n\r\n                    <option value=\"\" disabled>Choose an option...</option>\r\n                    <option key={0} value={true}>{\"Present\"}</option>\r\n                    <option key={1} value={false}>{\"Absent\"}</option>\r\n\r\n            </select>\r\n    }\r\n\r\n    saveHandle = (presenceId, presence) => {\r\n        this.props.presence.presenceStatus = this.state.presenceStatus;\r\n        this.setState({\r\n            disabled: true\r\n        })\r\n        this.props.dispatch(updatePresence(presenceId, presence))\r\n\r\n    }\r\n    renderOptions = () => {\r\n        return (\r\n            <div>\r\n                <div className=\"edit\" onClick={() => this.saveHandle(this.props.presence.presenceId, this.props.presence)}>\r\n                    SAVE\r\n                </div>\r\n            </div>   \r\n        )\r\n    }\r\n\r\n    changeHandle = (event) => {\r\n        this.setState({\r\n            presenceStatus: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div key={this.props.presence.presenceId} className=\"presence_container\">\r\n    \r\n                <h3>\r\n                    {`${this.props.presence.Student.studentFirstName} ${this.props.presence.Student.studentLastName}`}\r\n                </h3>\r\n\r\n                {this.renderPresenceStatusOptions()}\r\n    \r\n                {this.renderOptions()}  \r\n    \r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        presenceSheets: state.presenceSheets,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Presence);","import React, {Component} from \"react\";\r\nimport FormField from \"../components/FormField\";\r\nimport {connect} from \"react-redux\";\r\nimport {addPresenceSheet, clearPresenceSheet, getPresencesByPresenceSheet, clearPresences} from \"../actions/presenceSheetActions\";\r\nimport moment from \"moment\";\r\nimport Presence from \"../components/Presence\";\r\n\r\nclass AddPresenceSheet extends Component {\r\n\r\n    state = {\r\n        isPresenceSheetDone: false,\r\n        isPresencesListLoaded: false,\r\n        presenceSheet: {},\r\n        presences: [],\r\n        error: \"\",\r\n        loading: false,\r\n        formData: {\r\n            presenceSheetDate: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"presence_sheet_date\",\r\n                    label: \"Presence sheet date: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Enter date format DD/MM/YYYY...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    date: true\r\n                },\r\n                valid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            presenceSheetRemarks: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"presence_sheet_remarks\",\r\n                    label: \"Remarks: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Remarks...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            }\r\n            \r\n        }\r\n    };\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.dispatch(clearPresenceSheet());\r\n        this.props.dispatch(clearPresences());\r\n        this.setState({\r\n            isPresenceSheetDone: false,\r\n            isPresencesListLoaded: false\r\n        })\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        if(nextProps.presenceSheets.presenceSheet) {\r\n            this.setState({\r\n                presenceSheet: nextProps.presenceSheets.presenceSheet,\r\n                isPresenceSheetDone: true,\r\n                loading: false\r\n            });\r\n            this.props.dispatch(getPresencesByPresenceSheet(this.state.presenceSheet.presenceSheetId));\r\n        }\r\n\r\n        if(nextProps.presenceSheets.presencesList) {\r\n            this.setState({\r\n                presences: nextProps.presenceSheets.presencesList,\r\n                isPresencesListLoaded: true,\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    renderPresencesList = (presences) => {\r\n        return presences.map(presence => {\r\n            return (\r\n                <Presence presence={presence}/>\r\n            );\r\n        });\r\n    }\r\n\r\n    updateForm = (formResponse) => {\r\n        let newFormData = {...this.state.formData}\r\n        let newElement = {...newFormData[formResponse.id]};\r\n\r\n        newElement.value = formResponse.event.target.value;\r\n\r\n        if(formResponse.isBlurred){\r\n            let isValid = this.validateData(newElement);\r\n            newElement.isValid = isValid[0];\r\n            newElement.validationMessage = isValid[1];\r\n            newElement.isBlurred = formResponse.isBlurred;\r\n        }\r\n\r\n        newFormData[formResponse.id] = newElement;\r\n        this.setState({\r\n            formData: newFormData\r\n        });\r\n    }\r\n\r\n    validateData = (data) => {\r\n\r\n        let error = [true, \"\"];\r\n\r\n        if(data.validation.required) {\r\n            const isValid = data.value.trim() !== \"\" ? true : false;\r\n            const message = `${!isValid ? \"This field is required !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.email) {\r\n            const isValid = /\\S+@\\S+\\.\\S+/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid email address !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.minLength) {\r\n            const isValid = data.value.length >= data.validation.minLength ? true : false;\r\n            const message = `${!isValid ? `This field must be at least ${data.validation.minLength} characters long !` : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.date) {\r\n            const isValid = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid date in DD/MM/YYYY format !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    renderSubmitButton = () => {\r\n        return (\r\n            this.state.loading \r\n            ? \r\n            <div className=\"loading\">\r\n                Loading...\r\n            </div>\r\n            :            \r\n            <div>\r\n                <button onClick={(event) => this.submitHandle(event)}>GENERATE</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    submitHandle = (event) => {\r\n        event.preventDefault();\r\n        let dataToSubmit = {};\r\n        let isFormValid = true;\r\n\r\n        for(let key in this.state.formData) {\r\n            dataToSubmit[key] = this.state.formData[key].value;\r\n        }\r\n\r\n        for(let key in this.state.formData) {\r\n            isFormValid = isFormValid && this.state.formData[key].isValid ? true : false;\r\n        }\r\n\r\n        if(isFormValid) {\r\n            dataToSubmit[\"courseId\"] = this.props.courseId;\r\n            document.body.click();\r\n            this.setState({\r\n                error: \"\",\r\n                loading: true\r\n            });\r\n            this.props.dispatch(addPresenceSheet(dataToSubmit));\r\n\r\n        }else {\r\n            this.setState({\r\n                error: \"Something must have happened...\"\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    renderCompleteButton = () => {\r\n        return <button id=\"complete_button\" onClick={() => this.props.addPresenceSheetHandle()}>COMPLETE</button>\r\n    }\r\n    \r\n    renderError = () => {\r\n        return (\r\n            this.state.error !== \"\"\r\n            ?\r\n            <div className=\"error\">\r\n                {this.state.error}\r\n            </div>\r\n            :\r\n            \"\"\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if(!this.state.loading) {\r\n            if(this.state.isPresenceSheetDone == false) {\r\n                return (\r\n                    <div className=\"add_presences_container\"> \r\n                            <h2>Presence sheet</h2>\r\n        \r\n                            <FormField\r\n                                id={\"presenceSheetDate\"}\r\n                                formData={this.state.formData.presenceSheetDate}\r\n                                changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n                            <FormField\r\n                                id={\"presenceSheetRemarks\"}\r\n                                formData={this.state.formData.presenceSheetRemarks}\r\n                                changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n    \r\n                            {this.renderSubmitButton()}\r\n                            {this.renderError()}\r\n        \r\n                    </div>\r\n                );\r\n            }else {\r\n                return (\r\n                    <div className=\"add_presences_container\">\r\n                        <div className=\"report_title\">\r\n                            {`Presence report for date - ${moment(this.state.presenceSheet.presenceSheetDate).format(\"DD/MM/YYYY\")}`}\r\n                        </div>\r\n                        {this.renderPresencesList(this.state.presences)}\r\n                        {this.renderCompleteButton()}\r\n                    </div>\r\n                )\r\n            }\r\n           \r\n        }else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        presenceSheets: state.presenceSheets\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddPresenceSheet);","import {Component} from \"react\";\r\nimport FormField from \"../components/FormField\";\r\nimport {connect} from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Mark extends Component {\r\n\r\n    state = {\r\n        mark: {},\r\n        error: \"\",\r\n        edit: false,\r\n        loading: false,\r\n        formData: {\r\n            theoryMarkScore: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"theoryMarksScore\",\r\n                    type: \"text\",\r\n                    placeholder: \"Theory score...\"\r\n                },\r\n                validation: {\r\n                    required: false,\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            practicalMarkScore: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"practicalMarksScore\",\r\n                    type: \"text\",\r\n                    placeholder: \"Practical score...\"\r\n                },\r\n                validation: {\r\n                    required: false\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            }\r\n        }\r\n    };\r\n\r\n    componentWillMount() {\r\n        console.log(this.props);\r\n        let tempFormData = this.state.formData;\r\n        for (var key of Object.keys(tempFormData)) {\r\n            tempFormData[key].value = this.props.mark[key]\r\n            tempFormData[key].isValid = true;\r\n        }\r\n\r\n        this.setState({\r\n            mark: this.props.mark,\r\n            formData: tempFormData,\r\n            loading: false\r\n        });\r\n    }\r\n\r\n    updateForm = (formResponse) => {\r\n        let newFormData = {...this.state.formData}\r\n        let newElement = {...newFormData[formResponse.id]};\r\n\r\n        newElement.value = formResponse.event.target.value;\r\n\r\n        if(formResponse.isBlurred){\r\n            let isValid = this.validateData(newElement);\r\n            newElement.isValid = isValid[0];\r\n            newElement.validationMessage = isValid[1];\r\n            newElement.isBlurred = formResponse.isBlurred;\r\n        }\r\n\r\n        newFormData[formResponse.id] = newElement;\r\n        this.setState({\r\n            formData: newFormData\r\n        });\r\n    }\r\n\r\n    validateData = (data) => {\r\n\r\n        let error = [true, \"\"];\r\n\r\n        if(data.validation.required) {\r\n            const isValid = data.value.trim() !== \"\" ? true : false;\r\n            const message = `${!isValid ? \"This field is required !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.email) {\r\n            const isValid = /\\S+@\\S+\\.\\S+/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid email address !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.minLength) {\r\n            const isValid = data.value.length >= data.validation.minLength ? true : false;\r\n            const message = `${!isValid ? `This field must be at least ${data.validation.minLength} characters long !` : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.date) {\r\n            const isValid = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid date in DD/MM/YYYY format !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.notGreaterThan) {\r\n            const isValid = data.value >= 0 && data.value <= data.validation.notGreaterThan ? true : false;\r\n            const message = `${!isValid ? `Invalid grade ! Check subject details` : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    renderButton = () => {\r\n        return  this.state.edit === false\r\n                ?\r\n                <button onClick={() => this.editHandlle()}>EDIT</button>\r\n                :\r\n                <button onClick={(event) => this.saveHandle(event)}>SAVE</button>\r\n    }\r\n\r\n    editHandlle = () => {\r\n        let tempFormData = this.state.formData;\r\n        for(let key in tempFormData) {\r\n            tempFormData[key].config.disabled = false;\r\n        }\r\n        this.setState({\r\n            formData: tempFormData,\r\n            edit: true\r\n        });\r\n    }\r\n\r\n    saveHandle = (event) => {\r\n        event.preventDefault();\r\n        let dataToSubmit = {};\r\n        let isFormValid = true;\r\n\r\n        for(let key in this.state.formData) {\r\n            dataToSubmit[key] = this.state.formData[key].value;\r\n        }\r\n\r\n        for(let key in this.state.formData) {\r\n            isFormValid = isFormValid && this.state.formData[key].isValid ? true : false;\r\n        }\r\n\r\n        if(isFormValid) {\r\n            let tempFormData = this.state.formData;\r\n            for(let key in tempFormData) {\r\n                tempFormData[key].config.disabled = true;\r\n            }\r\n            dataToSubmit[\"isGraded\"] = true;\r\n            if(dataToSubmit[\"theoryMarkScore\"] > 0 && dataToSubmit[\"theoryMarkScore\"] <= this.props.subjectTheoryMarks && dataToSubmit[\"practicalMarkScore\"] > 0 && dataToSubmit[\"practicalMarkScore\"] <= this.props.subjectPracticalMarks) {\r\n                document.body.click();\r\n                console.log(dataToSubmit)\r\n                this.setState({\r\n                    error: \"\",\r\n                    formData: tempFormData\r\n                });\r\n                this.props.updateMark(this.state.mark.markId, dataToSubmit);\r\n            } else {\r\n                Swal.fire({  \r\n                    icon: 'error',  \r\n                    title: 'Oops...',  \r\n                    text: 'Check the marks percentage in the subjects description!',  \r\n                  }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        let tempFormData = this.state.formData;\r\n                        for (var key of Object.keys(tempFormData)) {\r\n                            tempFormData[key].value = this.props.mark[key]\r\n                            tempFormData[key].isValid = true;\r\n                        }\r\n                        this.setState({\r\n                            formData: tempFormData\r\n                        });\r\n                        //window.location.reload();\r\n                    } \r\n                  })    \r\n            }\r\n\r\n            //TODO\r\n        }else {\r\n            this.setState({\r\n                error: \"Something must have happened...\"\r\n            });\r\n        }\r\n        this.setState({\r\n            edit: false\r\n        })\r\n    }\r\n    \r\n    renderError = () => {\r\n        return (\r\n            this.state.error !== \"\"\r\n            ?\r\n            <div className=\"error\">\r\n                {this.state.error}\r\n            </div>\r\n            :\r\n            \"\"\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if(!this.state.loading) {\r\n            return (\r\n                <div>\r\n                    <div className=\"mark_container\">\r\n                        <div className=\"student_name\">\r\n                        <Link to={{\r\n                            pathname:`/student/${this.state.mark.Student.studentId}`,\r\n                            state: {fromDashboard: true }}}>\r\n                                {`${this.state.mark.Student.studentFirstName} ${this.state.mark.Student.studentLastName}`}\r\n                        </Link>\r\n                        </div>\r\n                        <div className=\"mark\">\r\n                            <div className=\"theory\">\r\n                                <FormField\r\n                                    id={\"theoryMarkScore\"}\r\n                                    formData={this.state.formData.theoryMarkScore}\r\n                                    changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n                            </div>\r\n                            <div className=\"practical\">\r\n                                <FormField\r\n                                    id={\"practicalMarkScore\"}\r\n                                    formData={this.state.formData.practicalMarkScore}\r\n                                    changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n                            </div>\r\n                        </div>\r\n                            \r\n                        {this.renderButton()}\r\n                        {this.renderError()}\r\n\r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n                \r\n            );\r\n        }else {\r\n            return (\r\n                <div className=\"loading\"/>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        marks: state.marks\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Mark);","import axios from \"axios\";\r\n\r\nexport function getExams(offset=0, limit=9999, type=\"\") {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getExams?offset=${offset}&limit=${limit}`)\r\n        .then(examsData => {\r\n            examsData = examsData.data;\r\n            const payload = {\r\n                examsData,\r\n                offset,\r\n                limit,\r\n                type\r\n            };\r\n            dispatch({\r\n                type: \"EXAMS_LIST\",\r\n                payload: payload\r\n            });\r\n\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function getFilteredExams(keyword=\"\") {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getFilteredExams?keyword=${keyword}`)\r\n        .then(examsData => {\r\n            examsData = examsData.data;\r\n            const payload = {\r\n                examsData,\r\n                keyword\r\n            };\r\n            dispatch({\r\n                type: \"KEYWORD_FILTERED_EXAMS_LIST\",\r\n                payload: payload\r\n            });\r\n\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function getExam(id) {\r\n    const request = axios.get(`/api/getExam/${id}`)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n        console.log(error);\r\n    });\r\n\r\n    return {\r\n        type: \"GET_EXAM\",\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function getExamByCourseId(courseId) {\r\n    const request = axios.get(`/api/getExamByCourseId/${courseId}`)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n        console.log(error);\r\n    });\r\n\r\n    return {\r\n        type: \"GET_EXAM\",\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function getExamsByProfessorEmail(professorEmail) {\r\n    const request = axios.get(`/api/getExamsByProfessorEmail/${professorEmail}`)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n        console.log(error);\r\n    })\r\n\r\n    return {\r\n        type: \"FILTERED_EXAMS_LIST\",\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function getExamsByStudentEmail(studentEmail) {\r\n    const request = axios.get(`/api/getExamsByStudentEmail/${studentEmail}`)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n        console.log(error);\r\n    })\r\n\r\n    return {\r\n        type: \"FILTERED_EXAMS_LIST\",\r\n        payload: request\r\n    }\r\n}\r\n\r\n\r\nexport function addExam(exam) {\r\n    const request = axios.post(`/api/addExam`, exam)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n        console.log(error);\r\n    });\r\n    return {\r\n        type: \"ADD_EXAM\",\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function updateExam(examId, exam) {\r\n    const request = axios.post(`/api/updateExam/${examId}`, exam)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n        console.log(error);\r\n    });\r\n    return {\r\n        type: \"UPDATE_EXAM\",\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function deleteExam(examId) {\r\n    const request = axios.delete(`/api/deleteExam/${examId}`)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n        console.log(error);\r\n    });\r\n    return {\r\n        type: \"DELETE_EXAM\",\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function clearExam() {\r\n    return {\r\n        type: \"CLEAR_EXAM\",\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport function clearExams() {\r\n    return {\r\n        type: \"CLEAR_EXAMS_LIST\",\r\n        payload: null\r\n    }\r\n}","import {Component} from \"react\";\r\nimport {getCourse, updateCourse, clearCourse} from \"../actions/coursesActions\";\r\nimport {getProfessors, clearProfessors} from \"../actions/professorActions\";\r\nimport {getStudyGroups, clearStudyGroups} from \"../actions/studyGroupActions\";\r\nimport {getSubjects, clearSubjects} from \"../actions/subjectActions\";\r\nimport moment from \"moment\";\r\nimport {connect} from \"react-redux\";\r\nimport FormField from \"../components/FormField\";\r\nimport AddPresenceSheet from \"./AddPresenceSheet\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {clearMarks, clearMark, updateMark, getMarksByCourseId} from \"../actions/markActions\";\r\nimport {clearPresenceSheetsList, getPresenceSheetsByCourseId, getPresencesByPresenceSheet, clearPresences} from \"../actions/presenceSheetActions\";\r\nimport Mark from \"../components/Mark\";\r\nimport {clearExam, getExamByCourseId} from \"../actions/examActions\";\r\n\r\nclass AboutCourse extends Component {\r\n\r\n    state = {\r\n        isPresenceListLoaded: false,\r\n        isExamProgrammed: false,\r\n        exam: {},\r\n        presenceSheet: {},\r\n        presences: [],\r\n        marks: [],\r\n        edit: false,\r\n        isAddPresenceSheetSelected: false,\r\n        loading: true,\r\n        course: null,\r\n        error: \"\",\r\n        formData: {\r\n            courseName: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"course_name\",\r\n                    label: \"Course name: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Course name...\"\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            courseTime: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"course_time\",\r\n                    label: \"Course time: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Day of the week, HH:MM...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    courseTime: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            courseDescription: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"course_description\",\r\n                    label: \"Description: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Course description...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 8\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            studyGroupId: {\r\n                element: \"select\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"study_group_id\",\r\n                    label: \"Study group: \",\r\n                    options: []\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            subjectId: {\r\n                element: \"select\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"subject_id\",\r\n                    label: \"Subject: \",\r\n                    options: []\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            professorId: {\r\n                element: \"select\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"professor_id\",\r\n                    label: \"Professor: \",\r\n                    options: []\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            }\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        //dispatch an action to clarify if course is teached by the professor\r\n        this.props.dispatch(clearCourse());\r\n        this.props.dispatch(clearStudyGroups());\r\n        this.props.dispatch(clearSubjects());\r\n        this.props.dispatch(clearProfessors());\r\n        this.props.dispatch(clearPresenceSheetsList());\r\n        this.props.dispatch(clearPresences());\r\n        this.props.dispatch(clearMarks());\r\n        this.props.dispatch(clearExam());\r\n\r\n        this.props.dispatch(getExamByCourseId(this.props.match.params.id));\r\n        this.props.dispatch(getPresenceSheetsByCourseId(this.props.match.params.id));\r\n        this.props.dispatch(getMarksByCourseId(this.props.match.params.id));\r\n        this.props.dispatch(getCourse(this.props.match.params.id));\r\n        this.props.dispatch(getStudyGroups());\r\n        this.props.dispatch(getSubjects());\r\n        this.props.dispatch(getProfessors());\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        if(nextProps.professors.professorsList) {\r\n            if(nextProps.studyGroups.studyGroupsList) {\r\n                if(nextProps.subjects.subjectsList) {\r\n                    if(nextProps.exams.exam) {\r\n                        if(nextProps.courses.course) {\r\n\r\n                            let tempFormData = this.state.formData;\r\n                            let studyGroupOptions = [];\r\n                            let subjectOptions = [];\r\n                            let professorOptions = [];\r\n                            let exam = {};\r\n                            let isExamProgrammed = false;\r\n\r\n                            if(nextProps.exams.exam.message) {\r\n                                isExamProgrammed = false;\r\n                            }else {\r\n                                isExamProgrammed = true;\r\n                                exam = nextProps.exams.exam;\r\n\r\n                            }\r\n\r\n                            \r\n                            nextProps.studyGroups.studyGroupsList.studyGroupsData.map((studyGroup) => {\r\n                                studyGroupOptions.push({\r\n                                    id: studyGroup.studyGroupId,\r\n                                    name: studyGroup.studyGroupId\r\n                                });\r\n                            });\r\n    \r\n                            nextProps.subjects.subjectsList.subjectsData.map((subject) => {\r\n                                subjectOptions.push({\r\n                                    id: subject.subjectId,\r\n                                    name: subject.subjectName\r\n                                });\r\n                            });\r\n    \r\n                            nextProps.professors.professorsList.professorsData.map((professor) => {\r\n                                professorOptions.push({\r\n                                    id: professor.professorId,\r\n                                    name: `${professor.professorFirstName} ${professor.professorLastName}`\r\n                                });\r\n                            });\r\n    \r\n                            for(var key of Object.keys(tempFormData)) {\r\n                                tempFormData[key].value = nextProps.courses.course[key];\r\n                                tempFormData[key].isValid = true;\r\n                            }\r\n                            \r\n                            tempFormData.courseTime.value = moment(tempFormData.courseTime.value).format(\"dddd HH:mm\");\r\n    \r\n                            tempFormData.studyGroupId.config.options = studyGroupOptions;\r\n                            tempFormData.subjectId.config.options = subjectOptions;\r\n                            tempFormData.professorId.config.options = professorOptions;\r\n    \r\n                            tempFormData.studyGroupId.defaultValue = nextProps.courses.course.studyGroupId;\r\n                            tempFormData.studyGroupId.value = nextProps.courses.course.studyGroupId;\r\n    \r\n                            tempFormData.subjectId.defaultValue = nextProps.courses.course.subjectId;\r\n                            tempFormData.subjectId.value = nextProps.courses.course.subjectId;\r\n    \r\n                            tempFormData.professorId.defaultValue = nextProps.courses.course.professorId;\r\n                            tempFormData.professorId.value = nextProps.courses.course.professorId;\r\n                            \r\n                            if(nextProps.presenceSheets.presenceSheetsList) {\r\n    \r\n                                if(nextProps.marks.marksList) {\r\n    \r\n                                    console.log(nextProps)\r\n                                    this.setState({\r\n                                        presenceSheetsList: nextProps.presenceSheets.presenceSheetsList,\r\n                                        marks: nextProps.marks.marksList,\r\n                                        course: nextProps.courses.course,\r\n                                        presenceSheetsList: nextProps.presenceSheets.presenceSheetsList,\r\n                                        isExamProgrammed: isExamProgrammed,\r\n                                        exam: exam,\r\n                                        formData: tempFormData,\r\n                                        loading: false\r\n                                    });\r\n                                }\r\n                            }\r\n                        }\r\n                        if(nextProps.courses.updatedCourse) {\r\n                            console.log(nextProps.courses.updatedCourse);\r\n                            if(nextProps.courses.updatedCourse.message) {\r\n                                this.setState({\r\n                                    error: nextProps.courses.updatedCourse.message\r\n                                });\r\n                            }else {\r\n                                let tempFormData = this.state.formData;\r\n                                for(var key of Object.keys(tempFormData)) {\r\n                                    tempFormData[key].config.disabled = true;\r\n                                }\r\n                                this.setState({\r\n                                    course: nextProps.courses.updatedCourse,\r\n                                    loading: false,\r\n                                    edit: false,\r\n                                    formData: tempFormData\r\n                                });\r\n                                window.location.reload();\r\n                            }\r\n                        }\r\n                        \r\n                        if(nextProps.marks.updatedMark != null) {\r\n                            this.props.dispatch(clearMark())\r\n                        }\r\n                \r\n                        if(nextProps.presenceSheets.presencesList) {\r\n                            this.setState({\r\n                                presences: nextProps.presenceSheets.presencesList,\r\n                                isPresenceListLoaded: true\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updateForm = (formResponse) => {\r\n        let newFormData = {...this.state.formData}\r\n        let newElement = {...newFormData[formResponse.id]};\r\n\r\n        newElement.value = formResponse.event.target.value;\r\n\r\n        if(formResponse.isBlurred) {\r\n            let isValid = this.validateData(newElement);\r\n            newElement.isValid = isValid[0];\r\n            newElement.validationMessage = isValid[1];\r\n            newElement.isBlurred = formResponse.isBlurred;\r\n        }\r\n\r\n        newFormData[formResponse.id] = newElement;\r\n        this.setState({\r\n            formData: newFormData\r\n        });\r\n    }\r\n\r\n\r\n\r\n    validateData = (data) => {\r\n\r\n        let error = [true, \"\"];\r\n\r\n        if(data.validation.required) {\r\n            const isValid = data.value.trim() !== \"\" ? true : false;\r\n            const message = `${!isValid ? \"This field is required !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.email) {\r\n            const isValid = /\\S+@\\S+\\.\\S+/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid email address !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.minLength) {\r\n            const isValid = data.value.length >= data.validation.minLength ? true : false;\r\n            const message = `${!isValid ? `This field must be at least ${data.validation.minLength} characters long !` : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.date) {\r\n            const isValid = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid date in DD/MM/YYYY format !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.courseTime) {\r\n            var dateParts = data.value.split(\" \");\r\n            var validDays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\r\n\r\n            const isValidDay = (validDays.indexOf(dateParts[0]) > 0) ? true : false;\r\n            const isValidTime = /^([01]?[0-9]|2[0-3]):[0-5][0-9]$/.test(dateParts[1]);\r\n            \r\n            const isValid = isValidDay & isValidTime;\r\n            const message = `${!isValid ? \"This field must be a valid date in dddd HH:mm format !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        return error;\r\n    }\r\n\r\n\r\n    renderError = () => {\r\n        return  this.state.error != \"\"\r\n                ?\r\n                <div className=\"error\">\r\n                    {this.state.error}\r\n                </div>\r\n                :\r\n                null\r\n    }\r\n\r\n    renderButton = () => {\r\n        return  this.state.edit === false\r\n                ?\r\n                <button onClick={() => this.editHandlle()}>EDIT</button>\r\n                :\r\n                <div>\r\n                    <button onClick={(event) => this.saveHandle(event)}>SAVE</button>\r\n                    <button onClick={(event) => this.cancelHandle(event)}>CANCEL</button>\r\n                </div>\r\n    }\r\n\r\n    editHandlle = () => {\r\n        let tempFormData = this.state.formData;\r\n        for(let key in tempFormData) {\r\n            tempFormData[key].config.disabled = false;\r\n        }\r\n        this.setState({\r\n            formData: tempFormData,\r\n            edit: true\r\n        });\r\n    }\r\n\r\n    cancelHandle = () => {\r\n        let tempFormData = this.state.formData;\r\n\r\n        for (var key of Object.keys(tempFormData)) {\r\n            tempFormData[key].value = this.state.course[key];\r\n            tempFormData[key].isValid = true;\r\n            tempFormData[key].config.disabled = true;\r\n            tempFormData[key].isBlurred = false;\r\n        }\r\n\r\n        tempFormData.courseTime.value = moment(this.state.course.courseTime).format(\"dddd HH:mm\");\r\n\r\n        tempFormData.studyGroupId.defaultValue = this.state.course.studyGroupId;\r\n        tempFormData.studyGroupId.value = this.state.course.studyGroupId;\r\n\r\n        tempFormData.subjectId.defaultValue = this.state.course.subjectId;\r\n        tempFormData.subjectId.value = this.state.course.subjectId;\r\n\r\n        tempFormData.professorId.defaultValue =this.state.course.professorId;\r\n        tempFormData.professorId.value = this.state.course.professorId;\r\n\r\n\r\n        this.setState({\r\n            formData: tempFormData,\r\n            edit: false,\r\n            error: \"\"\r\n        });\r\n    }\r\n\r\n    saveHandle = (event) => {\r\n        event.preventDefault();\r\n        let dataToSubmit = {};\r\n        let isFormValid = true;\r\n\r\n        for(let key in this.state.formData) {\r\n            dataToSubmit[key] = this.state.formData[key].value;\r\n        }\r\n\r\n\r\n        for(let key in this.state.formData) {\r\n            isFormValid = isFormValid && this.state.formData[key].isValid ? true : false;\r\n        }\r\n\r\n        if(isFormValid) {\r\n            document.body.click();\r\n            let tempFormData = this.state.formData;\r\n            for(let key in tempFormData) {\r\n                tempFormData[key].config.disabled = true;\r\n            }\r\n            dataToSubmit.courseTime = moment(dataToSubmit.courseTime, \"dddd HH:mm\");\r\n            this.props.dispatch(clearCourse());\r\n            this.props.dispatch(updateCourse(this.state.course.courseId, dataToSubmit));\r\n            this.setState({\r\n                formData: tempFormData,\r\n                error: \"\",\r\n                loading: true,\r\n                edit: false\r\n            });\r\n        }else {\r\n            this.setState({\r\n                error: \"Something must have happened...\"\r\n            });\r\n        }\r\n    }\r\n\r\n    \r\n    //presence sheet integration\r\n\r\n    renderAddPresenceSheetButton = () => {\r\n        return <button onClick={() => this.addPresenceSheetHandle()}>ADD PRESENCE SHEET</button>\r\n    }\r\n\r\n    presenceSheetHandle = () => {\r\n        this.setState({\r\n            isAddPresenceSheetSelected: true\r\n        });\r\n    }\r\n    \r\n    addPresenceSheetHandle = () => {\r\n        console.log(this.state.isAddPresenceSheetSelected);\r\n        let temp;\r\n        temp = this.state.isAddPresenceSheetSelected ? false : true;\r\n        this.setState({\r\n            isAddPresenceSheetSelected: temp\r\n        });\r\n\r\n        if(this.state.isAddPresenceSheetSelected) {\r\n            window.location.reload(false);\r\n        }\r\n    }\r\n\r\n    changeHandle = (event) => {\r\n        this.setState({\r\n            presenceSheet: {\r\n                presenceSheetId: event.target.value,\r\n                isPresenceListLoaded: false\r\n            }\r\n        });\r\n\r\n        this.props.dispatch(clearPresences());\r\n        this.props.dispatch(getPresencesByPresenceSheet(event.target.value));\r\n    }\r\n\r\n    renderPresences = () => {\r\n        if(this.state.isPresenceListLoaded) {\r\n            return this.state.presences.map(presence => {\r\n                return (\r\n                    <div key={presence.presenceId} className=\"presence_row\">\r\n                        <div className=\"left\">\r\n                            <Link to={{ \r\n                                pathname:`/student/${presence.Student.studentId}`,\r\n                                state: {fromDashboard: true }}}>\r\n                                        {`${presence.Student.studentFirstName} ${presence.Student.studentLastName}`}\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"right\">\r\n                            {presence.presenceStatus ? \"PRESENT\" : \"ABSENT\"}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })\r\n        }\r\n    }\r\n\r\n    renderPresenceSheet = () => {\r\n        if(this.state.isAddPresenceSheetSelected) {\r\n            return (\r\n                <div>\r\n                    <AddPresenceSheet courseId={this.state.course.courseId} addPresenceSheetHandle={this.addPresenceSheetHandle}/>\r\n                </div>\r\n            ) \r\n        }else {\r\n            return (\r\n                <div className=\"add_presences_container\">\r\n                    <h2>Presence report</h2>\r\n                    <select\r\n                        value={this.state.presenceSheet.presenceSheetDate}\r\n                        defaultValue=\"\"\r\n                        name=\"presence_status\"\r\n                        onChange={(event) => this.changeHandle(event)}>\r\n\r\n                            <option value=\"\" disabled>Select wanted presence sheet date...</option>\r\n                            {this.state.presenceSheetsList.map(presenceSheet => {\r\n                                return (\r\n                                    <option key={presenceSheet.presenceSheetId} value={presenceSheet.presenceSheetId}>\r\n                                        {moment(presenceSheet.presenceSheetDate).format(\"DD/MM/YYYY\")}\r\n                                    </option>\r\n                                )\r\n                            })}\r\n                    </select>\r\n                    {this.renderPresences()}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    //marks integration\r\n    renderMarks = (marks) => {\r\n        return marks.map(mark => {\r\n            return <Mark mark={mark} subjectTheoryMarks={this.state.course.Subject.subjectTheoryMarks} subjectPracticalMarks={this.state.course.Subject.subjectPracticalMarks} updateMark={(markId, mark) => this.updateMarkHandle(markId, mark)}/>\r\n        });\r\n    }\r\n\r\n    updateMarkHandle = (markId, mark) => {\r\n        this.props.dispatch(updateMark(markId, mark));\r\n    }\r\n\r\n    renderMarksInformation = () => {\r\n        return this.state.marks.length > 0 ?\r\n                <div className=\"add_marks_container\">       \r\n                    <div className=\"label_t\">\r\n                        Theory\r\n                    </div>\r\n                    <div className=\"label_p\">\r\n                        Practical\r\n                    </div>\r\n                    {this.renderMarks(this.state.marks)}\r\n                </div>\r\n                :\r\n                null\r\n    }\r\n\r\n    //exam management\r\n    programmExamHandle = () => {\r\n        this.state.isExamProgrammed ?\r\n        this.setState({\r\n            error: \"Exam is already programmed !\"\r\n        })\r\n        :\r\n        this.props.history.push(`/add-exam/${this.props.match.params.id}`)\r\n    }\r\n\r\n    renderProgrammExamButton = () => {\r\n        return <button onClick={() => this.programmExamHandle()}>PROGRAMM EXAM</button>\r\n    }\r\n\r\n    renderExamInformation = () => {\r\n        return this.state.isExamProgrammed ?\r\n                <Link to={{ \r\n                    pathname:`/exam/${this.state.exam.examId}`,\r\n                    state: {fromDashboard: true }}}>\r\n                        <div className=\"exam_info\">\r\n                            {`Exam for this course is programmed on ${moment(this.state.exam.examDate).format(\"DD/MM/YYYY\")}`}\r\n                        </div>\r\n                </Link>\r\n\r\n                :\r\n                <div className=\"exam_info\">\r\n                    Exam is not programmed yet...\r\n                </div>\r\n    }\r\n\r\n    renderShowSubjectPageButton = () => {\r\n        return <button onClick={() => this.props.history.push(`/subject/${this.state.course.subjectId}`)}>VIEW SUBJECT</button>\r\n    }\r\n\r\n    render() {\r\n        if(!this.state.loading && this.state.course) {\r\n            return (\r\n                <div>\r\n                    <div id=\"course\" className=\"about_container\">\r\n                        <div className=\"about_left_container\">\r\n                        <FormField\r\n                                id={\"courseName\"}\r\n                                formData={this.state.formData.courseName}\r\n                                changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n                            <FormField\r\n                                id={\"courseTime\"}\r\n                                formData={this.state.formData.courseTime}\r\n                                changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                            <FormField\r\n                                id={\"courseDescription\"}\r\n                                formData={this.state.formData.courseDescription}\r\n                                changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                            <FormField\r\n                                id={\"studyGroupId\"}\r\n                                formData={this.state.formData.studyGroupId}\r\n                                changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                            <FormField\r\n                                id={\"subjectId\"}\r\n                                formData={this.state.formData.subjectId}\r\n                                changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                            <FormField\r\n                                id={\"professorId\"}\r\n                                formData={this.state.formData.professorId}\r\n                                changeHandle={(formResponse) => this.updateForm(formResponse)}/>             \r\n                        \r\n                            {this.props.users.login.user.userRole == \"admin\" ? this.renderButton() : null}\r\n                            {this.renderShowSubjectPageButton()}\r\n                            {this.props.users.login.user.userRole == \"admin\" || (this.props.users.login.user.userRole == \"professor\" && this.state.course.Professor.professorEmail == this.props.users.login.user.userEmail) ? this.renderAddPresenceSheetButton() : null}\r\n                            {this.props.users.login.user.userRole == \"admin\" || (this.props.users.login.user.userRole == \"professor\" && this.state.course.Professor.professorEmail == this.props.users.login.user.userEmail) ? this.renderProgrammExamButton() : null}\r\n                            {this.renderError()}\r\n\r\n\r\n                        </div>\r\n                        {this.props.users.login.user.userRole == \"admin\" || (this.props.users.login.user.userRole == \"professor\" && this.state.course.Professor.professorEmail == this.props.users.login.user.userEmail)\r\n                        ? (\r\n                            <div className=\"about_right_container\">\r\n                                <div className=\"bottom\">\r\n                                    {this.renderPresenceSheet()}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                        :  \r\n                        null}\r\n\r\n                    </div>\r\n                    \r\n                    {this.props.users.login.user.userRole == \"admin\" || (this.props.users.login.user.userRole == \"professor\" && this.state.course.Professor.professorEmail == this.props.users.login.user.userEmail) ? this.renderMarksInformation() : null}\r\n\r\n                    {this.renderExamInformation()}\r\n\r\n                </div>\r\n            )\r\n        }else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        courses: state.courses,\r\n        studyGroups: state.studyGroups,\r\n        subjects: state.subjects,\r\n        professors: state.professors,\r\n        presenceSheets: state.presenceSheets,\r\n        marks: state.marks,\r\n        exams: state.exams\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AboutCourse);","import firebase from \"firebase\";\r\n\r\nconst config = {\r\n    \r\n    apiKey: \"AIzaSyB8pRX-gU7JggbGaHB1x81ZBnpVdRlALzE\",\r\n    authDomain: \"college-management-app-57e64.firebaseapp.com\",\r\n    projectId: \"college-management-app-57e64\",\r\n    storageBucket: \"college-management-app-57e64.appspot.com\",\r\n    messagingSenderId: \"1022113297366\",\r\n    appId: \"1:1022113297366:web:35fe96a1aef66d84c26a77\",\r\n    measurementId: \"G-J091QZ5W90\"\r\n  };\r\n\r\n  firebase.initializeApp(config);\r\n  \r\n\r\n  const snapshotToArrayConversion = (snapshot) => {\r\n      let items = [];\r\n      snapshot.forEach((childSnapshot) => {\r\n          items.push({\r\n              ...childSnapshot.val(),\r\n              id: childSnapshot.key\r\n          });\r\n      });\r\n      return items;\r\n  }\r\n\r\n  export {\r\n      firebase,\r\n      snapshotToArrayConversion\r\n  };","import axios from \"axios\";\r\n\r\n\r\nexport function addNews(news) {\r\n    return(dispatch) => {\r\n        axios.post(`/api/addNews`, news)\r\n        .then(news => {\r\n            news = news.data;\r\n            dispatch({\r\n                type: \"ADD_NEWS\",\r\n                payload: news\r\n            });\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\nexport function getNews(offset=0, limit=9999) {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getNews?offset=${offset}&limit=${limit}`)\r\n        .then(newsData => {\r\n            newsData = newsData.data;\r\n            const payload = {\r\n                newsData,\r\n                offset,\r\n                limit\r\n            };\r\n            dispatch({\r\n                type: \"NEWS_LIST\",\r\n                payload: payload\r\n            });\r\n\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function getFilteredNews(keyword = \"\") {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getFilteredNews?keyword=${keyword}`)\r\n        .then(newsData => {\r\n            newsData = newsData.data;\r\n            const payload = {\r\n                newsData,\r\n                keyword\r\n            };\r\n            dispatch({\r\n                type: \"FILTERED_NEWS_LIST\",\r\n                payload: payload\r\n            });\r\n\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function getOneNews(id) {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getNews/${id}`)\r\n        .then(news => {\r\n            news = news.data;\r\n            if(news) {\r\n                dispatch({\r\n                    type: \"GET_NEWS\",\r\n                    payload: news\r\n                });\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function updateNews(id, news) {\r\n    return(dispatch) => {\r\n        axios.post(`/api/updateNews/${id}`, news)\r\n        .then(response => {\r\n            response = response.data;\r\n            dispatch({\r\n                type: \"UPDATE_NEWS\",\r\n                payload: response\r\n            });\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport function deleteNews(id) {\r\n    return(dispatch) => {\r\n        axios.delete(`/api/deleteNews/${id}`)\r\n        .then(response => {\r\n            response = response.data;\r\n            dispatch({\r\n                type: \"DELETE_NEWS\",\r\n                payload: response\r\n            })\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\nexport function clearNews() {\r\n    return {\r\n        type: \"CLEAR_NEWS\",\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport function clearNewsList() {\r\n    return {\r\n        type: \"CLEAR_NEWS_LIST\",\r\n        payload: null\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {firebase} from \"../Firebase\";\r\nimport {getOneNews, clearNews} from \"../actions/newsActions\";\r\nimport {connect} from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\n\r\nclass AboutNews extends Component {\r\n\r\n    state = {\r\n        news: null,\r\n        imageURL: \"\",\r\n        error: \"\",\r\n        isLoaded: false,\r\n    };\r\n\r\n    getImageURL = (news) => {\r\n        firebase.storage().ref(\"pictures\").child(news.newsPicturePath).getDownloadURL()\r\n        .then((url) => {\r\n            this.setState({\r\n                news: news,\r\n                imageURL: url,\r\n                isLoaded: true\r\n            })\r\n        })\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.dispatch(clearNews());\r\n        this.props.dispatch(getOneNews(this.props.match.params.id));\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.news.news) {\r\n            console.log(nextProps);\r\n            this.getImageURL(nextProps.news.news);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state);\r\n        if(this.state.isLoaded && this.state.news) {\r\n            return (\r\n                <div className=\"article_wrapper\">\r\n                    <div className=\"article_info\">\r\n                        <div>Date: <span>{moment(this.state.news.updatedAt).format(\"DD/MM/YYYY\")}</span></div>\r\n                        <div>Author: <span>{this.state.news.newsAuthorName}</span></div>\r\n                    </div>\r\n                    <div className={\"article_body\"}>\r\n                        <h1>{this.state.news.newsTitle}</h1>\r\n                        <div className=\"article_image\"\r\n                            style={{\r\n                                background: `url(\"${this.state.imageURL}\")`\r\n                            }}/>\r\n                        <div \r\n                            className=\"article_text\" \r\n                            dangerouslySetInnerHTML={{__html: this.state.news.newsText}}>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n            );\r\n        }else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n\r\n        \r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        news: state.news\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AboutNews);\r\n\r\n","import {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport FormField from \"../components/FormField\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {clearCoursesList, getCourses} from \"../actions/coursesActions\";\r\nimport {updateExam, clearExam, getExam} from \"../actions/examActions\";\r\nimport moment from \"moment\";\r\nimport {clearSubject, getSubjectByExamId} from \"../actions/subjectActions\";\r\n\r\n\r\nclass AboutExam extends Component {\r\n\r\n    state = {\r\n        edit: false,\r\n        exam: null,\r\n        subject: {},\r\n        courses: [],\r\n        error: \"\",\r\n        loading: false,\r\n        formData: {\r\n            courseId: {\r\n                element: \"select\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"course_id\",\r\n                    label: \"Course: \",\r\n                    options: []\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            examDescription: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"exam_description\",\r\n                    label: \"Exam description: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Exam description...\"\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            examDate: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"exam_date\",\r\n                    label: \"Exam date: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Exam date, DD/MM/YYYY...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    date: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            examIsOnline: {\r\n                element: \"select\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"exam_is_online\",\r\n                    label: \"Exam type: \",\r\n                    options: [\r\n                        {\r\n                            id: 0,\r\n                            name: \"online\"\r\n                        },\r\n                        {\r\n                            id: 1,\r\n                            name: \"physical\"\r\n                        }\r\n \r\n                    ]\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n        }\r\n    };\r\n\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.dispatch(clearCoursesList());\r\n        this.props.dispatch(clearExam());\r\n        this.props.dispatch(clearSubject());\r\n\r\n        this.props.dispatch(getSubjectByExamId(this.props.match.params.id));\r\n        this.props.dispatch(getCourses());\r\n        this.props.dispatch(getExam(this.props.match.params.id));\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        console.log(nextProps);\r\n        if(nextProps.courses.coursesList) {\r\n            if(nextProps.subjects.subject) {\r\n                this.setState({\r\n                    subject: nextProps.subjects.subject\r\n                });\r\n\r\n                if(nextProps.exams.exam) {\r\n                \r\n                    console.log(nextProps);\r\n                    \r\n                    let tempFormData = this.state.formData;\r\n                    let courseOptions = [];\r\n    \r\n                    nextProps.courses.coursesList.coursesData.map((course) => {\r\n                        courseOptions.push({\r\n                            id: course.courseId,\r\n                            name: `${course.courseName} - group no. ${course.studyGroupId}`\r\n                        });\r\n                    });\r\n    \r\n                    for (var key of Object.keys(tempFormData)) {\r\n                        tempFormData[key].value = nextProps.exams.exam[key];\r\n                        tempFormData[key].isValid = true;\r\n                    }\r\n    \r\n                    tempFormData.courseId.config.options = courseOptions;\r\n    \r\n                    tempFormData.courseId.defaultValue = nextProps.exams.exam.courseId;\r\n                    tempFormData.courseId.value = nextProps.exams.exam.courseId;\r\n    \r\n                    tempFormData.examIsOnline.defaultValue = nextProps.exams.exam.examIsOnline == true ? 0 : 1;\r\n                    tempFormData.examIsOnline.value = nextProps.exams.exam.examIsOnline == true ? 0 : 1;\r\n    \r\n                    tempFormData.examDate.value = moment(tempFormData.examDate.value).format(\"DD/MM/YYYY\");\r\n    \r\n                    console.log(nextProps);\r\n                    this.setState({\r\n                        exam: nextProps.exams.exam,\r\n                        formData: tempFormData,\r\n                        loading: false\r\n                    });\r\n                }\r\n            }\r\n                \r\n            if(nextProps.exams.updatedExam) {\r\n                if(nextProps.exams.updatedExam.message) {\r\n                    this.setState({\r\n                        error: nextProps.exams.updatedExam.message\r\n                    });\r\n                }else {\r\n                    let tempFormData = this.state.formData;\r\n                    for(var key of Object.keys(tempFormData)) {\r\n                        tempFormData[key].config.disabled = true;\r\n                    }\r\n                    this.setState({\r\n                        exam: nextProps.exams.updatedExam,\r\n                        loading: false,\r\n                        edit: false,\r\n                        formData: tempFormData\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updateForm = (formResponse) => {\r\n        let newFormData = {...this.state.formData}\r\n        let newElement = {...newFormData[formResponse.id]};\r\n\r\n        newElement.value = formResponse.event.target.value;\r\n\r\n        if(formResponse.isBlurred) {\r\n            let isValid = this.validateData(newElement);\r\n            newElement.isValid = isValid[0];\r\n            newElement.validationMessage = isValid[1];\r\n            newElement.isBlurred = formResponse.isBlurred;\r\n        }\r\n\r\n        newFormData[formResponse.id] = newElement;\r\n        this.setState({\r\n            formData: newFormData\r\n        });\r\n    }\r\n\r\n    validateData = (data) => {\r\n\r\n        let error = [true, \"\"];\r\n\r\n        if(data.validation.required) {\r\n            const isValid = data.value.trim() !== \"\" ? true : false;\r\n            const message = `${!isValid ? \"This field is required !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.email) {\r\n            const isValid = /\\S+@\\S+\\.\\S+/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid email address !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.minLength) {\r\n            const isValid = data.value.length >= data.validation.minLength ? true : false;\r\n            const message = `${!isValid ? `This field must be at least ${data.validation.minLength} characters long !` : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.date) {\r\n            const isValid = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid date in DD/MM/YYYY format !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        return error;\r\n    }\r\n\r\n    renderButton = () => {\r\n        return  this.state.edit === false\r\n                ?\r\n                <button onClick={() => this.editHandlle()}>EDIT</button>\r\n                :\r\n                <div>\r\n                    <button onClick={(event) => this.saveHandle(event)}>SAVE</button>\r\n                    <button onClick={(event) => this.cancelHandle(event)}>CANCEL</button>\r\n                </div>\r\n    }\r\n\r\n    renderError = () => {\r\n        return  this.state.error != \"\"\r\n                ?\r\n                <div className=\"error\">\r\n                    {this.state.error}\r\n                </div>\r\n                :\r\n                null\r\n    }\r\n\r\n    renderSubjectInformation = (subject) => {\r\n        return (\r\n            <div className=\"about_right_container\">\r\n                <h2>\r\n                    About subject\r\n                    <Link to={{ \r\n                        pathname:`/subject/${subject.subjectId}`,\r\n                        state: {fromDashboard: true }}}>\r\n                            {` ${subject.subjectName}`}\r\n                    </Link>\r\n                </h2>\r\n\r\n                <div className=\"subject_details\">\r\n                    <div className=\"left\">\r\n                        Final mark percentage: \r\n                    </div>\r\n                    <div className=\"right\">\r\n                        {`${subject.subjectTheoryMarks}%`}\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n                <div className=\"subject_details\">\r\n                    <div className=\"left\">\r\n                        Credit points: \r\n                    </div>\r\n                    <div className=\"right\">\r\n                        {subject.subjectCreditScore}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    cancelHandle = () => {\r\n        let tempFormData = this.state.formData;\r\n\r\n        for (var key of Object.keys(tempFormData)) {\r\n            tempFormData[key].value = this.state.exam[key];\r\n            tempFormData[key].isValid = true;\r\n            tempFormData[key].config.disabled = true;\r\n            tempFormData[key].isBlurred = false;\r\n        }\r\n\r\n        tempFormData.examDate.value = moment(this.state.exam.examDate).format(\"DD/MM/YYYY\");\r\n\r\n\r\n        tempFormData.courseId.defaultValue =this.state.exam.courseId;\r\n        tempFormData.courseId.value = this.state.exam.courseId;\r\n\r\n\r\n        this.setState({\r\n            formData: tempFormData,\r\n            edit: false,\r\n            error: \"\"\r\n        });\r\n    }\r\n\r\n    editHandlle = () => {\r\n        let tempFormData = this.state.formData;\r\n        for(let key in tempFormData) {\r\n            if(key != \"courseId\")\r\n            tempFormData[key].config.disabled = false;\r\n        }\r\n        this.setState({\r\n            formData: tempFormData,\r\n            edit: true\r\n        });\r\n    }\r\n\r\n    saveHandle = (event) => {\r\n        event.preventDefault();\r\n        let dataToSubmit = {};\r\n        let isFormValid = true;\r\n\r\n        for(let key in this.state.formData) {\r\n            dataToSubmit[key] = this.state.formData[key].value;\r\n        }\r\n\r\n\r\n        for(let key in this.state.formData) {\r\n            isFormValid = isFormValid && this.state.formData[key].isValid ? true : false;\r\n        }\r\n\r\n        if(isFormValid) {\r\n            document.body.click();\r\n            dataToSubmit.examDate = moment(dataToSubmit.examDate, \"DD/MM/YYYY\");\r\n            dataToSubmit.examIsOnline = dataToSubmit.examIsOnline == 0 ? true : false;\r\n            this.props.dispatch(clearExam());\r\n            this.props.dispatch(updateExam(this.state.exam.examId, dataToSubmit));\r\n            this.setState({\r\n                error: \"\",\r\n                loading: true,\r\n                edit: false\r\n            });\r\n        }else {\r\n            this.setState({\r\n                error: \"Something must have happened...\"\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(!this.state.loading && this.state.exam) {\r\n            return (\r\n                <div className=\"about_container\">\r\n                    <div className=\"about_left_container\">\r\n                        <FormField\r\n                            id={\"courseId\"}\r\n                            formData={this.state.formData.courseId}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n                        <FormField\r\n                            id={\"examDescription\"}\r\n                            formData={this.state.formData.examDescription}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"examDate\"}\r\n                            formData={this.state.formData.examDate}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"examIsOnline\"}\r\n                            formData={this.state.formData.examIsOnline}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        {this.props.users.login.user.userRole == \"admin\" ? this.renderButton() : null}\r\n                        {this.renderError()}\r\n\r\n                    </div>\r\n\r\n                    {this.renderSubjectInformation(this.state.subject)}\r\n\r\n                </div>\r\n\r\n            )\r\n        }else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        exams: state.exams,\r\n        subjects: state.subjects,\r\n        courses: state.courses\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AboutExam);","import {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport FormField from \"../components/FormField\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {clearSubject, getSubject, updateSubject} from \"../actions/subjectActions\";\r\nimport {getCoursesBySubjectId, clearCoursesList} from \"../actions/coursesActions\";\r\n\r\nclass AboutSubject extends Component {\r\n\r\n    state = {\r\n        edit: false,\r\n        subject: null,\r\n        courses: [],\r\n        error: \"\",\r\n        loading: false,\r\n        formData: {\r\n            subjectName: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"subject_name\",\r\n                    label: \"Subject name: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Subject name...\"\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            subjectTheoryMarks: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"subject_theory_marks\",\r\n                    label: \"Theory marks: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Theory marks...\"\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            subjectPracticalMarks: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"subject_practical_marks\",\r\n                    label: \"Practical marks: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Practical marks...\"\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            subjectCreditScore: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"subject_credit_score\",\r\n                    label: \"Credit score: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Credit score...\"\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            subjectDescription: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"subject_description\",\r\n                    label: \"Subject description: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Subject description...\"\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            subjectIsOptional: {\r\n                element: \"select\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"subject_is_optional\",\r\n                    label: \"Subject type: \",\r\n                    options: [\r\n                        {\r\n                            id: 0,\r\n                            name: \"Optional\"\r\n                        },\r\n                        {\r\n                            id: 1,\r\n                            name: \"Mandatory\"\r\n                        }\r\n                    ]\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n        }\r\n    };\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.dispatch(clearSubject());\r\n        this.props.dispatch(clearCoursesList());\r\n        \r\n        this.props.dispatch(getSubject(this.props.match.params.id));\r\n        this.props.dispatch(getCoursesBySubjectId(this.props.match.params.id));\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        console.log(nextProps);\r\n\r\n        if(nextProps.courses.coursesList) {\r\n            if(nextProps.subjects.subject) {\r\n\r\n            \r\n                let tempFormData = this.state.formData; \r\n    \r\n                for (var key of Object.keys(tempFormData)) {\r\n                    tempFormData[key].value = nextProps.subjects.subject[key];\r\n                    tempFormData[key].isValid = true;\r\n                }\r\n    \r\n    \r\n                tempFormData.subjectIsOptional.defaultValue = nextProps.subjects.subject.subjectIsOptional ? 0 : 1;\r\n                tempFormData.subjectIsOptional.value = nextProps.subjects.subject.subjectIsOptional ? 0 : 1;\r\n    \r\n                this.setState({\r\n                    subject: nextProps.subjects.subject,\r\n                    courses: nextProps.courses.coursesList,\r\n                    formData: tempFormData,\r\n                    loading: false\r\n                });                 \r\n                  \r\n            }\r\n\r\n            if(nextProps.subjects.updatedSubject) {\r\n                if(nextProps.subjects.updatedSubject.message) {\r\n                    this.setState({\r\n                        error: nextProps.subjects.updatedSubject.message\r\n                    });\r\n                }else {\r\n                    let tempFormData = this.state.formData;\r\n                    for(var key of Object.keys(tempFormData)) {\r\n                        tempFormData[key].config.disabled = true;\r\n                    }\r\n                    this.setState({\r\n                        subject: nextProps.subjects.updatedSubject,\r\n                        loading: false,\r\n                        edit: false,\r\n                        formData: tempFormData\r\n                    });\r\n                }\r\n            }        \r\n        }           \r\n    }\r\n\r\n    updateForm = (formResponse) => {\r\n        let newFormData = {...this.state.formData}\r\n        let newElement = {...newFormData[formResponse.id]};\r\n\r\n        newElement.value = formResponse.event.target.value;\r\n\r\n        if(formResponse.isBlurred) {\r\n            let isValid = this.validateData(newElement);\r\n            newElement.isValid = isValid[0];\r\n            newElement.validationMessage = isValid[1];\r\n            newElement.isBlurred = formResponse.isBlurred;\r\n        }\r\n\r\n        newFormData[formResponse.id] = newElement;\r\n        this.setState({\r\n            formData: newFormData\r\n        });\r\n    }\r\n\r\n    validateData = (data) => {\r\n\r\n        let error = [true, \"\"];\r\n\r\n        if(data.validation.required) {\r\n            const isValid = data.value.trim() !== \"\" ? true : false;\r\n            const message = `${!isValid ? \"This field is required !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.email) {\r\n            const isValid = /\\S+@\\S+\\.\\S+/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid email address !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.minLength) {\r\n            const isValid = data.value.length >= data.validation.minLength ? true : false;\r\n            const message = `${!isValid ? `This field must be at least ${data.validation.minLength} characters long !` : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.date) {\r\n            const isValid = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid date in DD/MM/YYYY format !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        return error;\r\n    }\r\n\r\n    renderButton = () => {\r\n        return  this.state.edit === false\r\n                ?\r\n                <button onClick={() => this.editHandlle()}>EDIT</button>\r\n                :\r\n                <div>\r\n                    <button onClick={(event) => this.saveHandle(event)}>SAVE</button>\r\n                    <button onClick={(event) => this.cancelHandle(event)}>CANCEL</button>\r\n                </div>\r\n    }\r\n\r\n    renderError = () => {\r\n        return  this.state.error != \"\"\r\n                ?\r\n                <div className=\"error\">\r\n                    {this.state.error}\r\n                </div>\r\n                :\r\n                null\r\n    }\r\n\r\n    renderCourses = (coursesList) => {\r\n        return (\r\n            <div className=\"more\">\r\n                <h2>Courses: </h2>\r\n                {coursesList.length > 0 ? coursesList.map(course => {\r\n                    return (\r\n                        <div key={course.courseId} className=\"subject_course\">\r\n                            <Link to={{\r\n                                pathname:`/course/${course.courseId}`,\r\n                                state: {fromDashboard: true }}}>\r\n                                    {`# ${course.courseName} with ${course.Professor.professorFirstName} ${course.Professor.professorLastName} - group no. ${course.studyGroupId}`}\r\n                            </Link>\r\n                        </div>\r\n                    )\r\n                })\r\n                :\r\n                <div className=\"message\">No courses yet assigned with this subject.</div>}\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    cancelHandle = () => {\r\n        let tempFormData = this.state.formData;\r\n\r\n        for (var key of Object.keys(tempFormData)) {\r\n            tempFormData[key].value = this.state.subject[key];\r\n            tempFormData[key].isValid = true;\r\n            tempFormData[key].config.disabled = true;\r\n            tempFormData[key].isBlurred = false;\r\n        }\r\n\r\n        tempFormData.subjectIsOptional.defaultValue = this.state.subject.subjectIsOptional ? 0 : 1;\r\n        tempFormData.subjectIsOptional.value = this.state.subject.subjectIsOptional ? 0 : 1;\r\n\r\n        this.setState({\r\n            formData: tempFormData,\r\n            edit: false,\r\n            error: \"\"\r\n        });\r\n    }\r\n\r\n    editHandlle = () => {\r\n        let tempFormData = this.state.formData;\r\n        for(let key in tempFormData) {\r\n            tempFormData[key].config.disabled = false;\r\n        }\r\n        this.setState({\r\n            formData: tempFormData,\r\n            edit: true\r\n        });\r\n    }\r\n\r\n    saveHandle = (event) => {\r\n        event.preventDefault();\r\n        let dataToSubmit = {};\r\n        let isFormValid = true;\r\n\r\n        for(let key in this.state.formData) {\r\n            dataToSubmit[key] = this.state.formData[key].value;\r\n        }\r\n\r\n\r\n        for(let key in this.state.formData) {\r\n            isFormValid = isFormValid && this.state.formData[key].isValid ? true : false;\r\n        }\r\n\r\n        if(parseInt(dataToSubmit.subjectTheoryMarks) + parseInt(dataToSubmit.subjectPracticalMarks) != 100) {\r\n            isFormValid = false;\r\n            this.setState({\r\n                error: \"The sum of the theory marks and practical marks must equal 100\"\r\n            });\r\n        } else {\r\n            if(isFormValid) {\r\n                document.body.click();\r\n                this.props.dispatch(clearSubject());\r\n                this.props.dispatch(updateSubject(this.state.subject.subjectId, dataToSubmit));\r\n                this.setState({\r\n                    error: \"\",\r\n                    edit: false,\r\n                    loading: true\r\n                });\r\n            }else {\r\n                this.setState({\r\n                    error: \"Something must have happened...\"\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(!this.state.loading && this.state.subject) {\r\n            return (\r\n                <div className=\"about_container\">\r\n                    <div className=\"about_left_container\">\r\n\r\n                    <FormField\r\n                            id={\"subjectName\"}\r\n                            formData={this.state.formData.subjectName}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n                        \r\n                        <FormField\r\n                            id={\"subjectDescription\"}\r\n                            formData={this.state.formData.subjectDescription}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"subjectTheoryMarks\"}\r\n                            formData={this.state.formData.subjectTheoryMarks}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"subjectPracticalMarks\"}\r\n                            formData={this.state.formData.subjectPracticalMarks}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n                        \r\n                        <FormField\r\n                            id={\"subjectCreditScore\"}\r\n                            formData={this.state.formData.subjectCreditScore}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"subjectIsOptional\"}\r\n                            formData={this.state.formData.subjectIsOptional}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n\r\n                        {this.props.users.login.user.userRole == \"admin\" ? this.renderButton() : null}\r\n                        {this.renderError()}\r\n\r\n                    </div>\r\n\r\n                    {this.renderCourses(this.state.courses)}\r\n\r\n\r\n                </div>\r\n\r\n            )\r\n        }else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        subjects: state.subjects,\r\n        courses: state.courses\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AboutSubject);","import {Component} from \"react\";\r\nimport {clearProfessors, getProfessorsByDepartmentId} from \"../actions/professorActions\";\r\nimport {getDepartment, clearDepartment, updateDepartment} from \"../actions/departmentActions\";\r\nimport {getFaculties, clearFaculties} from \"../actions/facultyActions\";\r\nimport {connect} from \"react-redux\";\r\nimport FormField from \"../components/FormField\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass AboutDepartment extends Component {\r\n\r\n    state = {\r\n        edit: false,\r\n        department: null,\r\n        professors: [],\r\n        error: \"\",\r\n        loading: false,\r\n        formData: {\r\n            departmentName: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"department_name\",\r\n                    label: \"Department name: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Department name...\"\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            departmentDescription: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"department_description\",\r\n                    label: \"Department description: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Department description...\"\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            facultyId: {\r\n                element: \"select\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"faculty_id\",\r\n                    label: \"Faculty: \",\r\n                    options: []\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            }\r\n        }\r\n    };\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.dispatch(clearFaculties());\r\n        this.props.dispatch(clearDepartment());\r\n        this.props.dispatch(clearProfessors());\r\n\r\n        this.props.dispatch(getFaculties());\r\n        this.props.dispatch(getDepartment(this.props.match.params.id));\r\n        this.props.dispatch(getProfessorsByDepartmentId(this.props.match.params.id));\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        console.log(nextProps);\r\n        if(nextProps.faculties.facultiesList) {\r\n            if(nextProps.professors.professorsList) {\r\n                if(nextProps.departments.department) {\r\n\r\n                    let tempFormData = this.state.formData;\r\n                    let facultyOptions = [];\r\n    \r\n                    nextProps.faculties.facultiesList.map((faculty) => {\r\n                        facultyOptions.push({\r\n                            id: faculty.facultyId,\r\n                            name: faculty.facultyName\r\n                        });\r\n                    });\r\n    \r\n                    for (var key of Object.keys(tempFormData)) {\r\n                        tempFormData[key].value = nextProps.departments.department[key];\r\n                        tempFormData[key].isValid = true;\r\n                    }\r\n                    \r\n                    tempFormData.facultyId.config.options = facultyOptions;\r\n\r\n                    tempFormData.facultyId.defaultValue = nextProps.departments.department.facultyId;\r\n                    tempFormData.facultyId.value = nextProps.departments.department.facultyId;\r\n        \r\n                    this.setState({\r\n                        department: nextProps.departments.department,\r\n                        professors: nextProps.professors.professorsList,\r\n                        formData: tempFormData,\r\n                        loading: false\r\n                    }); \r\n                }\r\n                if(nextProps.departments.updatedDepartment) {\r\n                    if(nextProps.departments.updatedDepartment.message) {\r\n                        this.setState({\r\n                            error: nextProps.departments.updatedDepartment.message\r\n                        });\r\n                    }else {\r\n                        let tempFormData = this.state.formData;\r\n                        for(var key of Object.keys(tempFormData)) {\r\n                            tempFormData[key].config.disabled = true;\r\n                        }\r\n                        this.setState({\r\n                            department: nextProps.departments.updatedDepartment,\r\n                            loading: false,\r\n                            edit: false,\r\n                            formData: tempFormData\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updateForm = (formResponse) => {\r\n        let newFormData = {...this.state.formData}\r\n        let newElement = {...newFormData[formResponse.id]};\r\n\r\n        newElement.value = formResponse.event.target.value;\r\n\r\n        if(formResponse.isBlurred) {\r\n            let isValid = this.validateData(newElement);\r\n            newElement.isValid = isValid[0];\r\n            newElement.validationMessage = isValid[1];\r\n            newElement.isBlurred = formResponse.isBlurred;\r\n        }\r\n\r\n        newFormData[formResponse.id] = newElement;\r\n        this.setState({\r\n            formData: newFormData\r\n        });\r\n    }\r\n\r\n    validateData = (data) => {\r\n\r\n        let error = [true, \"\"];\r\n\r\n        if(data.validation.required) {\r\n            const isValid = data.value.trim() !== \"\" ? true : false;\r\n            const message = `${!isValid ? \"This field is required !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.email) {\r\n            const isValid = /\\S+@\\S+\\.\\S+/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid email address !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.minLength) {\r\n            const isValid = data.value.length >= data.validation.minLength ? true : false;\r\n            const message = `${!isValid ? `This field must be at least ${data.validation.minLength} characters long !` : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.date) {\r\n            const isValid = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid date in DD/MM/YYYY format !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        return error;\r\n    }\r\n\r\n    renderButton = () => {\r\n        return  this.state.edit === false\r\n                ?\r\n                <button onClick={() => this.editHandlle()}>EDIT</button>\r\n                :\r\n                <div>\r\n                    <button onClick={(event) => this.saveHandle(event)}>SAVE</button>\r\n                    <button onClick={(event) => this.cancelHandle(event)}>CANCEL</button>\r\n                </div>\r\n    }\r\n\r\n    renderError = () => {\r\n        return  this.state.error != \"\"\r\n                ?\r\n                <div className=\"error\">\r\n                    {this.state.error}\r\n                </div>\r\n                :\r\n                null\r\n    }\r\n\r\n    cancelHandle = () => {\r\n        let tempFormData = this.state.formData;\r\n\r\n        for (var key of Object.keys(tempFormData)) {\r\n            tempFormData[key].value = this.state.department[key];\r\n            tempFormData[key].isValid = true;\r\n            tempFormData[key].config.disabled = true;\r\n            tempFormData[key].isBlurred = false;\r\n        }\r\n\r\n        tempFormData.facultyId.defaultValue =this.state.department.facultyId;\r\n        tempFormData.facultyId.value = this.state.department.facultyId;\r\n\r\n\r\n        this.setState({\r\n            formData: tempFormData,\r\n            edit: false,\r\n            error: \"\"\r\n        });\r\n    }\r\n\r\n    editHandlle = () => {\r\n        let tempFormData = this.state.formData;\r\n        for(let key in tempFormData) {\r\n            tempFormData[key].config.disabled = false;\r\n        }\r\n        this.setState({\r\n            formData: tempFormData,\r\n            edit: true\r\n        });\r\n    }\r\n\r\n    saveHandle = (event) => {\r\n        event.preventDefault();\r\n        let dataToSubmit = {};\r\n        let isFormValid = true;\r\n\r\n        for(let key in this.state.formData) {\r\n            dataToSubmit[key] = this.state.formData[key].value;\r\n        }\r\n\r\n\r\n        for(let key in this.state.formData) {\r\n            isFormValid = isFormValid && this.state.formData[key].isValid ? true : false;\r\n        }\r\n\r\n        if(isFormValid) {\r\n            document.body.click();\r\n            this.props.dispatch(clearDepartment());\r\n            this.props.dispatch(updateDepartment(this.state.department.departmentId, dataToSubmit));\r\n            this.setState({\r\n                error: \"\",\r\n                loading: true,\r\n                edit: false\r\n            });\r\n        }else {\r\n            this.setState({\r\n                error: \"Something must have happened...\"\r\n            });\r\n        }\r\n    }\r\n\r\n    renderProfessors = (professorsList) => {\r\n        if(professorsList.length > 0) {\r\n            return professorsList.map(professor => {\r\n                return (\r\n                    <div className=\"department_professor\">\r\n                        {this.props.users.login.user.userRole != \"professor\" ?\r\n                        <Link to={{\r\n                            pathname:`/professor/${professor.professorId}`,\r\n                            state: {fromDashboard: true }}}>\r\n                                {`# ${professor.professorFirstName} ${professor.professorLastName}`}\r\n                        </Link>\r\n                        :\r\n                        <div>\r\n                            {`# ${professor.professorFirstName} ${professor.professorLastName}`}\r\n                        </div>}\r\n                    </div>\r\n    \r\n                )\r\n            });\r\n        } else {\r\n            return (\r\n                <div className=\"message\">No professors enrolled yet in this department.</div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        if(!this.state.loading && this.state.department) {\r\n            return (\r\n                <div className=\"about_container\">\r\n                    <div className=\"about_left_container\">\r\n\r\n                        <FormField\r\n                            id={\"departmentName\"}\r\n                            formData={this.state.formData.departmentName}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n                        <FormField\r\n                            id={\"departmentDescription\"}\r\n                            formData={this.state.formData.departmentDescription}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"facultyId\"}\r\n                            formData={this.state.formData.facultyId}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n\r\n                        {this.props.users.login.user.userRole == \"admin\" ? this.renderButton() : null}\r\n                        {this.renderError()}\r\n\r\n                    </div>\r\n                    <div className=\"more\">\r\n                         <h2>Professors: </h2>\r\n                         {this.renderProfessors(this.state.professors)}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        professors: state.professors,\r\n        departments: state.departments,\r\n        faculties: state.faculties\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(AboutDepartment);","import axios from \"axios\";\r\n\r\nexport function countEsentials() {\r\n    \r\n    return(dispatch) => {\r\n        axios.get(\"/api/countSubjects\")\r\n        .then(subjectsCount => {\r\n            subjectsCount = subjectsCount.data;\r\n            axios.get(\"/api/countProfessors\")\r\n            .then(professorsCount => {\r\n                professorsCount = professorsCount.data;\r\n                axios.get(\"/api/countStudents\")\r\n                .then(studentsCount => {\r\n                    studentsCount = studentsCount.data;\r\n                    axios.get(\"/api/countFaculties\")\r\n                    .then(facultiesCount => {\r\n                        facultiesCount = facultiesCount.data;\r\n                        axios.get(\"/api/countStudyGroups\")\r\n                        .then(studyGroupsCount => {\r\n                            studyGroupsCount = studyGroupsCount.data;\r\n                            axios.get(\"/api/countCourses\")\r\n                            .then(coursesCount => {\r\n                                coursesCount = coursesCount.data;\r\n                                axios.get(\"/api/countNews\")\r\n                                .then(newsCount => {\r\n                                    newsCount = newsCount.data;\r\n                                    axios.get(\"/api/countExams\")\r\n                                    .then(examsCount => {\r\n                                        examsCount = examsCount.data;\r\n                                        axios.get(\"/api/countDepartments\")\r\n                                        .then(departmentsCount => {\r\n                                            departmentsCount = departmentsCount.data;\r\n                                            axios.get(\"/api/countDocuments\")\r\n                                            .then(documentsCount => {\r\n                                                documentsCount = documentsCount.data;\r\n                                                dispatch({\r\n                                                    type: \"COUNT_ESENTIALS\",\r\n                                                    payload: {\r\n                                                        subjectsCount,\r\n                                                        professorsCount,\r\n                                                        studentsCount,\r\n                                                        facultiesCount,\r\n                                                        studyGroupsCount,\r\n                                                        coursesCount,\r\n                                                        examsCount,\r\n                                                        newsCount,\r\n                                                        departmentsCount,\r\n                                                        documentsCount\r\n                                                    }\r\n                                                });\r\n                                            }).catch(error => console.log(error));\r\n                                        }).catch(error => console.log(error));\r\n                                    }).catch(error => console.log(error));\r\n                                }).catch(error => console.log(error));\r\n                            }).catch(error => console.log(error));\r\n                        }).catch(error => console.log(error));\r\n                    }).catch(error => console.log(error));\r\n                }).catch(error => console.log(error));\r\n            }).catch(error => console.log(error));\r\n        }).catch(error => console.log(error)\r\n    )}\r\n}\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Student = ({student, type, aboutStudent, deleteStudent, userRole}) => {\r\n\r\n    let className = \"\";\r\n    if(type == \"info\") {\r\n        className = \"student_column_info\";\r\n    }else {\r\n        className = \"student_column_label\";\r\n    }\r\n\r\n    const renderOptions = () => {\r\n        if(userRole != \"student\") {\r\n            if(className == \"student_column_label\") {\r\n                return (\r\n                    <div className={className}>\r\n                        Options\r\n                    </div>\r\n                )\r\n            }else{\r\n                return (\r\n                    <div className={className}>\r\n                        {userRole == \"admin\" || userRole == \"professor\"\r\n                        ?\r\n                        (\r\n                            <div className=\"edit\" onClick={() => aboutStudent(student.studentId)}>\r\n                                ABOUT\r\n                            </div>\r\n                        )\r\n                        :\r\n                        null}\r\n    \r\n                        {userRole == \"admin\"\r\n                        ?\r\n                        (\r\n                            <div className=\"delete\" onClick={() => deleteStudent(student.studentId)}>\r\n                                DELETE\r\n                            </div>\r\n                        )\r\n                        :\r\n                        null}\r\n                    </div>\r\n                )\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div key={student.studentId} className=\"student_container\">\r\n\r\n            <div className={className}>\r\n                {student.studentId}\r\n            </div>\r\n            <div className={className}>\r\n                {student.studentFirstName}\r\n            </div>\r\n\r\n            <div className={className}>\r\n                {student.studentLastName}\r\n            </div>\r\n\r\n\r\n            <div className={className}>\r\n                {student.studentEmail}\r\n            </div>\r\n\r\n            <div className={className}>\r\n                {student.studyGroupId}\r\n            </div>\r\n\r\n\r\n            <div className={className}>\r\n                {student.Faculty.facultyName}\r\n            </div>\r\n\r\n            <div className={className}>\r\n                {student.StudyYear.studyYearOrder}\r\n            </div>\r\n\r\n            {renderOptions()}\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Student;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {deleteStudent, getStudents, clearStudent, clearStudents, getFilteredStudents, clearStudentsList} from \"../actions/studentActions\";\r\nimport {countEsentials} from \"../actions/otherActions\";\r\nimport Student from \"../components/Student\";\r\nimport Swal from \"sweetalert2\";\r\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\nclass StudentsList extends Component {\r\n    state = {\r\n        labels: {\r\n                    studentId: \"ID\",\r\n                    studentFirstName: \"First name\",\r\n                    studentLastName: \"Last name\",\r\n                    studentDob: \"DOB\",\r\n                    studentEmail: \"Email\",\r\n                    studyGroupId: \"Study group\",\r\n                    studentAddress: \"Address\",\r\n                    studentIsTaxed: \"Taxed\",\r\n                    StudyYear: {\r\n                        studyYearOrder: \"Year\"\r\n                    },\r\n                    Faculty: {\r\n                        facultyName: \"Faculty\"\r\n                    }\r\n        },\r\n        students: [],\r\n        studentsCount: 0,\r\n        offset: 0,\r\n        limit: 10,\r\n        loaded: false,\r\n        dummy: false,\r\n        navButtons: true,\r\n        keyword: \"\"\r\n    }\r\n\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.dispatch(clearStudents());\r\n        this.props.dispatch(getStudents(this.state.offset, this.state.limit));\r\n        this.props.dispatch(countEsentials());\r\n\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        if(nextProps.others.counts) {\r\n            if(nextProps.students.studentsList) {\r\n                let students = nextProps.students.studentsList.studentsData;\r\n                this.setState({\r\n                    students: students,\r\n                    offset: nextProps.students.studentsList.offset,\r\n                    limit: nextProps.students.studentsList.limit,\r\n                    studentsCount: nextProps.others.counts.studentsCount,\r\n                    loaded: true\r\n                });\r\n            }\r\n            if(nextProps.students.deletedStudent) {\r\n                window.location.reload();\r\n                this.props.dispatch(clearStudent());\r\n            }\r\n            if(nextProps.students.filteredStudentsList) {\r\n                this.setState({\r\n                    students: nextProps.students.filteredStudentsList.studentsData,\r\n                    loaded: true\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    renderStudents = (studentsList) => {\r\n        return studentsList.map(student => {\r\n            return (\r\n                <Student key={student.studentId} student={student} aboutStudent={this.aboutStudent} deleteStudent={this.deleteStudent} type=\"info\" userRole={this.props.users.login.user.userRole}/>\r\n            );\r\n        })\r\n    }\r\n\r\n    renderLabels = (labels) => {\r\n        return <Student student={labels} type=\"label\" userRole={this.props.users.login.user.userRole}/>\r\n    }\r\n\r\n    renderAddStudentButton = () => {\r\n        return (\r\n            <div className=\"add_button\" onClick={() => this.props.history.push(\"/add-student\")}>\r\n                    Add student\r\n            </div>\r\n   \r\n        );\r\n    }\r\n\r\n\r\n    renderNavButtons = () => {\r\n        return (\r\n            <div className=\"list_nav_buttons\">\r\n                <div className=\"prev\" onClick={() => this.loadPrev(this.state.offset, this.state.limit)}>\r\n                    Prev\r\n                </div>\r\n                <div className=\"next\" onClick={() => this.loadNext(this.state.offset, this.state.limit)}>\r\n                    Next\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    aboutStudent = (studentId) => {\r\n        this.props.history.push(`/student/${studentId}`);\r\n    }\r\n\r\n    deleteStudent = (studentId) => {\r\n        Swal.fire({  \r\n            title: 'Are you sure?',  \r\n            text: 'You will the student and all the data asociated with it (marks, presences, etc.)',  \r\n            icon: 'warning',  \r\n            showCancelButton: true,  \r\n            confirmButtonColor: '#3085d6',  \r\n            cancelButtonColor: '#d33',  \r\n            confirmButtonText: 'Yes!'  \r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                this.props.dispatch(deleteStudent(studentId));\r\n            } \r\n        });    \r\n    }\r\n\r\n    loadNext = (offset, limit) => {\r\n        if(offset + limit <= this.state.studentsCount - 1) {\r\n            this.setState({\r\n                loaded: false\r\n            });\r\n            this.props.dispatch(getStudents(offset + limit, limit));\r\n        }\r\n    }\r\n\r\n    loadPrev = (offset, limit) => {\r\n        if(offset - limit >= 0) {\r\n            this.setState({\r\n                loaded: false\r\n            });\r\n            this.props.dispatch(getStudents(offset - limit, limit));\r\n        }\r\n    }\r\n\r\n    updateForm = (formResponse) => {\r\n        let newFormData = {...this.state.formData}\r\n        let newElement = {...newFormData[formResponse.id]};\r\n\r\n        newElement.value = formResponse.event.target.value;\r\n\r\n        newFormData[formResponse.id] = newElement;\r\n        this.setState({\r\n            formData: newFormData\r\n        });\r\n    }\r\n\r\n    renderFindButton = () => {\r\n        return <button className=\"find_button\" onClick={() => {}}>FIND</button>\r\n    }\r\n\r\n    changeHandle = (value) => {\r\n        this.setState({\r\n            keyword: value\r\n        });\r\n\r\n        this.props.dispatch(clearStudentsList());\r\n        if(value != \"\") {\r\n            if(value.length >= 3 && this.state.keyword.length <= value.length) {\r\n                setTimeout(() => { \r\n                    this.props.dispatch(getFilteredStudents(value));\r\n                    this.setState({\r\n                        navButtons: false,\r\n                    });\r\n                }, 500);\r\n            }\r\n        } else {\r\n            this.props.dispatch(getStudents(this.state.offset, this.state.limit));\r\n            this.setState({\r\n                loaded: false,\r\n                navButtons: true\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        if(this.state.loaded == true) {\r\n            return (\r\n                <div className=\"list_container\">\r\n\r\n                    <h1>Students list</h1>\r\n\r\n                    {this.props.users.login.user.userRole == \"admin\" ? this.renderAddStudentButton() : null}\r\n\r\n                    <FontAwesomeIcon id=\"search_icon\" icon={faSearch}/>\r\n                    <input className=\"search_input\" value={this.state.keyword} onChange={(event) => this.changeHandle(event.target.value)} placeholder=\"Enter keyword...\"/>\r\n\r\n                    <div>\r\n\r\n                        {this.state.students.length > 0 ? this.renderLabels(this.state.labels) : <div className=\"message\">No students yet.</div>}\r\n                        {this.state.students.length > 0 ? this.renderStudents(this.state.students) : null}\r\n\r\n                    </div>\r\n\r\n                    {this.state.students.length > 0 && this.state.navButtons ? this.renderNavButtons() : null}\r\n\r\n                </div>\r\n\r\n            );\r\n        }else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        students: state.students,\r\n        others: state.others\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(StudentsList);","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Professor = ({professor, type, aboutProfessor, deleteProfessor, userRole}) => {\r\n\r\n    let className = \"\";\r\n    if(type == \"info\") {\r\n        className = \"student_column_info\";\r\n    }else {\r\n        className = \"student_column_label\";\r\n    }\r\n\r\n    const renderOptions = () => {\r\n        if(className == \"student_column_label\") {\r\n            return (\r\n                <div className={className}>\r\n                    Options\r\n                </div>\r\n            )\r\n        }else {\r\n            return (\r\n                <div className={className}>\r\n                    <div className=\"edit\" onClick={() => aboutProfessor(professor.professorId)}>\r\n                        ABOUT\r\n                    </div>\r\n\r\n                    <div className=\"delete\" onClick={() => deleteProfessor(professor.professorId)}>\r\n                        DELETE\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div key={professor.professorId} className=\"student_container\">\r\n\r\n            <div className={className}>\r\n                {professor.professorId}\r\n            </div>\r\n            <div className={className}>\r\n                {professor.professorFirstName}\r\n            </div>\r\n\r\n            <div className={className}>\r\n                {professor.professorLastName}\r\n            </div>\r\n\r\n            <div className={className}>\r\n                {professor.professorEmail}\r\n            </div>\r\n\r\n            <div className={className}>\r\n                {professor.Department.departmentName}\r\n            </div>\r\n\r\n            {userRole == \"admin\" ? renderOptions() : null}\r\n     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Professor;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfessors, deleteProfessor, clearProfessor, getFilteredProfessors, clearProfessors} from \"../actions/professorActions\";\r\nimport {countEsentials} from \"../actions/otherActions\";\r\nimport Professor from \"../components/Professor\";\r\nimport Swal from \"sweetalert2\";\r\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\nclass ProfessorsList extends Component {\r\n\r\n    state = {\r\n        labels: {\r\n                    professorId: \"ID\",\r\n                    professorFirstName: \"First name\",\r\n                    professorLastName: \"Last name\",\r\n                    professorDob: \"DOB\",\r\n                    professorEmail: \"Email\",\r\n                    professorSalary: \"Study group\",\r\n                    Department: {\r\n                        departmentName: \"Department\"\r\n                    }\r\n        },\r\n        professors: [],\r\n        professorsCount: 0,\r\n        offset: 0,\r\n        limit: 10,\r\n        loaded: false,\r\n        dummy: false,\r\n        keyword: \"\",\r\n        navButtons: true\r\n    }\r\n\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.dispatch(getProfessors(this.state.offset, this.state.limit));\r\n        this.props.dispatch(countEsentials());\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        if(nextProps.others.counts) {\r\n            if(nextProps.professors.professorsList) {\r\n                let professors = nextProps.professors.professorsList.professorsData;\r\n                console.log(professors)\r\n                this.setState({\r\n                    professors: professors,\r\n                    offset: nextProps.professors.professorsList.offset,\r\n                    limit: nextProps.professors.professorsList.limit,\r\n                    professorsCount: nextProps.others.counts.professorsCount,\r\n                    loaded: true\r\n                });\r\n            }\r\n        }\r\n\r\n        if(nextProps.professors.deletedProfessor) {\r\n            window.location.reload();\r\n            this.props.dispatch(clearProfessor());\r\n        }\r\n\r\n        if(nextProps.professors.filteredProfessorsList) {\r\n            this.setState({\r\n                professors: nextProps.professors.filteredProfessorsList.professorsData,\r\n                offset: 0,\r\n                loaded: true\r\n            });\r\n        }\r\n    }\r\n\r\n    renderProfessors = (professorsList) => {\r\n        return professorsList.map(professor => {\r\n            return (\r\n                <Professor key={professor.studentId} professor={professor} aboutProfessor={this.aboutProfessor} deleteProfessor={this.deleteProfessor} type=\"info\" userRole={this.props.users.login.user.userRole}/>\r\n            );\r\n        })\r\n    }\r\n\r\n    renderLabels = (labels) => {\r\n        return <Professor professor={labels} type=\"label\" userRole={this.props.users.login.user.userRole}/>\r\n    }\r\n\r\n    renderAddProfessorButton = () => {\r\n        return (\r\n            <div className=\"add_button\" onClick={() => this.props.history.push(\"/add-professor\")}>\r\n                    Add professor\r\n            </div>\r\n   \r\n        );\r\n    }\r\n\r\n\r\n    renderNavButtons = () => {\r\n        return (\r\n            <div className=\"list_nav_buttons\">\r\n                <div className=\"prev\" onClick={() => this.loadPrev(this.state.offset, this.state.limit)}>\r\n                    Prev\r\n                </div>\r\n                <div className=\"next\" onClick={() => this.loadNext(this.state.offset, this.state.limit)}>\r\n                    Next\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    aboutProfessor = (professorId) => {\r\n        this.props.history.push(`/professor/${professorId}`);\r\n    }\r\n\r\n    deleteProfessor = (professorId) => {\r\n        Swal.fire({  \r\n            title: 'Are you sure?',  \r\n            text: 'You will the professor and all the data asociated with it (courses, exams, etc.)',  \r\n            icon: 'warning',  \r\n            showCancelButton: true,  \r\n            confirmButtonColor: '#3085d6',  \r\n            cancelButtonColor: '#d33',  \r\n            confirmButtonText: 'Yes!'  \r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                this.props.dispatch(deleteProfessor(professorId));\r\n            } \r\n        });    \r\n    }\r\n\r\n    loadNext = (offset, limit) => {\r\n        if(offset + limit <= this.state.professorsCount - 1) {\r\n            this.setState({\r\n                loaded: false\r\n            });\r\n            this.props.dispatch(getProfessors(offset + limit, limit));\r\n        }\r\n    }\r\n\r\n    loadPrev = (offset, limit) => {\r\n        if(offset - limit >= 0) {\r\n            this.setState({\r\n                loaded: false\r\n            });\r\n            this.props.dispatch(getProfessors(offset - limit, limit));\r\n        }\r\n    }\r\n\r\n    changeHandle = (value) => {\r\n        this.setState({\r\n            keyword: value\r\n        });\r\n\r\n        this.props.dispatch(clearProfessors());\r\n        if(value != \"\") {\r\n            if(value.length >= 3 && this.state.keyword.length <= value.length) {\r\n                setTimeout(() => { \r\n                    this.props.dispatch(getFilteredProfessors(value));\r\n                    this.setState({\r\n                        navButtons: false,\r\n                    });\r\n                }, 500);\r\n            }\r\n        } else {\r\n            this.props.dispatch(getProfessors(this.state.offset, this.state.limit));\r\n            this.setState({\r\n                loaded: false,\r\n                navButtons: true\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.state.loaded == true) {\r\n            return (\r\n                <div className=\"list_container\">\r\n\r\n                    <h1>Professors list</h1>\r\n                    \r\n                    {this.props.users.login.user.userRole == \"admin\" ? this.renderAddProfessorButton() : null}\r\n\r\n                    <FontAwesomeIcon id=\"search_icon\" icon={faSearch}/>\r\n                    <input className=\"search_input\" value={this.state.keyword} onChange={(event) => this.changeHandle(event.target.value)} placeholder=\"Enter keyword...\"/>\r\n\r\n                    <div>\r\n\r\n                        {this.state.professors.length > 0 ? this.renderLabels(this.state.labels) : null}\r\n                        {this.state.professors.length > 0 ? this.renderProfessors(this.state.professors) : <div className=\"message\">No professors yet.</div>}\r\n\r\n                    </div>\r\n\r\n                    {this.state.professors.length > 0 && this.state.navButtons ? this.renderNavButtons() : null}\r\n\r\n                </div>\r\n\r\n            );\r\n        }else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        professors: state.professors,\r\n        others: state.others\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProfessorsList);","import React from \"react\";\r\nimport {deleteSubject} from \"../actions/subjectActions\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst Course = ({subject, history, dispatch, userRole}) => {\r\n\r\n    let className = \"\";\r\n\r\n    const aboutSubjectHandle = (subjectId) => {\r\n        history.push(`/subject/${subjectId}`);\r\n    }\r\n\r\n    const deleteSubjectHandle = (subjectId) => {\r\n        Swal.fire({  \r\n            title: 'Are you sure?',  \r\n            text: 'You will the subject and all the data asociated with it (courses, exams, etc.)',  \r\n            icon: 'warning',  \r\n            showCancelButton: true,  \r\n            confirmButtonColor: '#3085d6',  \r\n            cancelButtonColor: '#d33',  \r\n            confirmButtonText: 'Yes!'  \r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              dispatch(deleteSubject(subjectId));\r\n            } \r\n          });\r\n    }\r\n\r\n    const renderOptions = () => {\r\n        return(\r\n            <div className={className}>\r\n                <div className=\"edit\" onClick={() => aboutSubjectHandle(subject.subjectId)}>\r\n                    ABOUT\r\n                </div>\r\n                {userRole == \"admin\"\r\n                ?\r\n                (\r\n                    <div className=\"delete\" onClick={() => deleteSubjectHandle(subject.subjectId)}>\r\n                        DELETE\r\n                    </div>\r\n                )\r\n                :\r\n                null}\r\n\r\n            </div>   \r\n        )\r\n    }\r\n\r\n    return (\r\n        <div key={subject.subjectId} className=\"subject_container\">\r\n\r\n                <h2>\r\n                   {subject.subjectName}\r\n                </h2>\r\n\r\n                <div className={\"credit_score\"}>\r\n                    {`CREDITS: ${subject.subjectCreditScore}`}\r\n                </div>\r\n\r\n                <div className={\"score_distribution\"}>\r\n                    {`THEORY:     ${subject.subjectTheoryMarks}%`}\r\n                </div>\r\n\r\n                <div className={\"score_distribution\"}>\r\n                    {`PRACTICAL:  ${subject.subjectPracticalMarks}%`}\r\n                </div>\r\n\r\n                <div className={\"optional\"}>\r\n                    {subject.subjectIsOptional ? \"Optional\" : \"Mandatory\"}\r\n                </div>\r\n                \r\n            {renderOptions()}\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Course;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {countEsentials} from \"../actions/otherActions\";\r\nimport {clearSubjects, clearSubject, getSubjects, getFilteredSubjects} from \"../actions/subjectActions\";\r\nimport Subject from \"../components/Subject\";\r\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nclass SubjectsList extends Component {\r\n    state = {\r\n        subjects: [],\r\n        subjectsCount: 0,\r\n        offset: 0,\r\n        limit: 6,\r\n        loaded: false,\r\n        keyword: \"\",\r\n        navButtons: true,\r\n        dummy: false\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.dispatch(clearSubjects());\r\n        this.props.dispatch(countEsentials());\r\n        this.props.dispatch(getSubjects(this.state.offset, this.state.limit));\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        console.log(nextProps)\r\n        if(nextProps.others.counts) {\r\n            if(nextProps.others.counts.subjectsCount) {\r\n                if(nextProps.subjects.subjectsList) {\r\n                    let subjects = nextProps.subjects.subjectsList.subjectsData;\r\n                    this.setState({\r\n                        subjects: subjects,\r\n                        offset: nextProps.subjects.subjectsList.offset,\r\n                        limit: nextProps.subjects.subjectsList.limit,\r\n                        subjectsCount: nextProps.others.counts.subjectsCount,\r\n                        loaded: true\r\n                    });\r\n                }   \r\n            }\r\n\r\n            if(nextProps.subjects.deletedSubject) { \r\n                window.location.reload();\r\n                this.props.dispatch(clearSubject());\r\n            }\r\n\r\n            if(nextProps.subjects.filteredSubjectsList) {\r\n                this.setState({\r\n                    subjects: nextProps.subjects.filteredSubjectsList.subjectsData,\r\n                    offset: 0,\r\n                    loaded: true\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    renderSubjects = (subjectsList) => {\r\n        return subjectsList.map(subject => {\r\n            return (\r\n                <Subject key={subject.subjectId} subject={subject} history={this.props.history} dispatch={this.props.dispatch} userRole={this.props.users.login.user.userRole}/>\r\n            );\r\n        })\r\n    }\r\n\r\n\r\n\r\n    renderAddSubjectButton = () => {\r\n        return (\r\n            <div className=\"add_button\" onClick={() => this.props.history.push(\"/add-subject\")}>\r\n                    Add subject\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    renderNavButtons = () => {\r\n        return (\r\n            <div className=\"list_nav_buttons\">\r\n                <div className=\"prev\" onClick={() => this.loadPrev(this.state.offset, this.state.limit)}>\r\n                    Prev\r\n                </div>\r\n                <div className=\"next\" onClick={() => this.loadNext(this.state.offset, this.state.limit)}>\r\n                    Next\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    loadNext = (offset, limit) => {\r\n        if(offset + limit <= this.state.subjectsCount - 1) {\r\n            this.setState({\r\n                loaded: false\r\n            });\r\n            this.props.dispatch(getSubjects(offset + limit, limit));\r\n        }\r\n    }\r\n\r\n    loadPrev = (offset, limit) => {\r\n        if(offset - limit >= 0) {\r\n            this.setState({\r\n                loaded: false\r\n            });\r\n            this.props.dispatch(getSubjects(offset - limit, limit));\r\n        }\r\n    }\r\n\r\n    changeHandle = (value) => {\r\n        this.setState({\r\n            keyword: value\r\n        });\r\n\r\n        this.props.dispatch(clearSubjects());\r\n        if(value != \"\") {\r\n            if(value.length >= 3 && this.state.keyword.length <= value.length) {\r\n                setTimeout(() => { \r\n                    this.props.dispatch(getFilteredSubjects(value));\r\n                    this.setState({\r\n                        navButtons: false,\r\n                    });\r\n                }, 500);\r\n            }\r\n        } else {\r\n            this.props.dispatch(getSubjects(this.state.offset, this.state.limit));\r\n            this.setState({\r\n                navButtons: true,\r\n                loaded: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if(this.state.loaded == true) {\r\n            return (\r\n                <div className=\"list_container\">\r\n\r\n                    <h1>Subjects list</h1>\r\n\r\n                    {this.props.users.login.user.userRole == \"admin\" ? this.renderAddSubjectButton() : null}\r\n\r\n                    <FontAwesomeIcon id=\"search_icon\" icon={faSearch}/>\r\n                    <input className=\"search_input\" value={this.state.keyword} onChange={(event) => this.changeHandle(event.target.value)} placeholder=\"Enter keyword...\"/>\r\n\r\n                    <div>\r\n\r\n                        {this.state.subjects.length > 0 ? this.renderSubjects(this.state.subjects) : <div className=\"message\">No subjects yet.</div>}\r\n\r\n                    </div>\r\n\r\n                    {this.state.subjects.length > 0 && this.state.navButtons ? this.renderNavButtons() : null}\r\n\r\n                </div>\r\n\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        subjects: state.subjects,\r\n        others: state.others\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SubjectsList);","import React from \"react\";\r\nimport {deleteStudyGroup} from \"../actions/studyGroupActions\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst StudyGroup = ({studyGroup, history, dispatch, userRole}) => {\r\n\r\n    let className = \"\";\r\n\r\n    const aboutStudyGroup = (studyGroupId) => {\r\n        history.push(`/studygroup/${studyGroupId}`);\r\n    }\r\n\r\n    const deleteStudyGroupHandle = (studyGroupId) => {\r\n        Swal.fire({  \r\n            title: 'Are you sure?',  \r\n            text: 'You will delete the study group and all the data asociated with it (students, courses, etc.)',  \r\n            icon: 'warning',  \r\n            showCancelButton: true,  \r\n            confirmButtonColor: '#3085d6',  \r\n            cancelButtonColor: '#d33',  \r\n            confirmButtonText: 'Yes!'  \r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              dispatch(deleteStudyGroup(studyGroupId));\r\n            } \r\n          });\r\n    }\r\n\r\n    const renderOptions = () => {\r\n        return(\r\n            <div className={className}>\r\n                <div className=\"edit\" onClick={() => aboutStudyGroup(studyGroup.studyGroupId)}>\r\n                    ABOUT\r\n                </div>\r\n                {userRole == \"admin\"\r\n                ?\r\n                (\r\n                    <div className=\"delete\" onClick={() => deleteStudyGroupHandle(studyGroup.studyGroupId)}>\r\n                        DELETE\r\n                    </div>\r\n                )\r\n                :\r\n                null}\r\n\r\n            </div>   \r\n        )\r\n    }\r\n\r\n    console.log(studyGroup);\r\n    return (\r\n        <div key={studyGroup.studyGroupId} className=\"study_group_container\">\r\n\r\n            <div className=\"left_container\">\r\n\r\n                <div className={className}>\r\n                    Study group no.: \r\n                </div>\r\n\r\n                <div className={className}>\r\n                    Study group year:\r\n                </div>\r\n\r\n                <div className={className}>\r\n                    Study group faculty: \r\n                </div>\r\n\r\n                <div className={className}>\r\n                    Study group description:\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            <div className=\"right_container\">\r\n\r\n                <div className={className}>\r\n                    {studyGroup.studyGroupId}\r\n                </div>\r\n\r\n                <div className={className}>\r\n                    {studyGroup.StudyYear.studyYearOrder}\r\n                </div>\r\n\r\n                <div className={className}>\r\n                    {studyGroup.Faculty.facultyName}\r\n                </div>\r\n\r\n                <div className={className}>\r\n                    {studyGroup.studyGroupDescription}\r\n                </div>\r\n\r\n            </div>\r\n\r\n \r\n\r\n            {renderOptions()}\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudyGroup;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {clearStudyGroups, getStudyGroups, getFilteredStudyGroups} from \"../actions/studyGroupActions\";\r\nimport {countEsentials} from \"../actions/otherActions\";\r\nimport StudyGroup from \"../components/StudyGroup\";\r\nimport {getStudentByEmail, clearStudent} from \"../actions/studentActions\";\r\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\nclass StudyGroupList extends Component {\r\n    state = {\r\n        studyGroups: [],\r\n        studyGroupsCount: 0,\r\n        offset: 0,\r\n        limit: 6,\r\n        loaded: false,\r\n        dummy: false,\r\n        keyword: \"\",\r\n        navButtons: true\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.dispatch(clearStudent())\r\n        this.props.dispatch(clearStudyGroups());\r\n        this.props.dispatch(getStudyGroups(this.state.offset, this.state.limit));\r\n        this.props.dispatch(countEsentials());\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        console.log(nextProps)\r\n        if(nextProps.others.counts) {\r\n            if(nextProps.others.counts.studyGroupsCount) {\r\n                if(nextProps.studyGroups.studyGroupsList) {\r\n                    let studyGroups = nextProps.studyGroups.studyGroupsList.studyGroupsData;\r\n                    this.setState({\r\n                        studyGroups: studyGroups,\r\n                        offset: nextProps.studyGroups.studyGroupsList.offset,\r\n                        limit: nextProps.studyGroups.studyGroupsList.limit,\r\n                        studyGroupsCount: nextProps.others.counts.studyGroupsCount,\r\n                        loaded: true\r\n                    });\r\n                }\r\n            }\r\n            if(nextProps.studyGroups.deletedStudyGroup != null) {\r\n                window.location.reload(false);\r\n            }\r\n\r\n            if(nextProps.studyGroups.filteredStudyGroupsList) {\r\n                this.setState({\r\n                    studyGroups: nextProps.studyGroups.filteredStudyGroupsList.studyGroupsData,\r\n                    offset: 0,\r\n                    loaded: true\r\n                });\r\n            }\r\n        }\r\n\r\n        if(nextProps.students.student) {\r\n            this.props.history.push(`/studygroup/${nextProps.students.student.studyGroupId}`)\r\n        }\r\n    }\r\n\r\n    renderStudyGroups = (studyGroupsList) => {\r\n        return studyGroupsList.map(studyGroup => {\r\n            return (\r\n                <StudyGroup key={studyGroup.studyGroupId} studyGroup={studyGroup} history={this.props.history} dispatch={this.props.dispatch} userRole={this.props.users.login.user.userRole}/>\r\n            );\r\n        })\r\n    }\r\n\r\n\r\n\r\n    renderAddStudyGroupButton = () => {\r\n        return (\r\n            <div className=\"add_button\" onClick={() => this.props.history.push(\"/add-studygroup\")}>\r\n                    Add study group\r\n            </div>\r\n   \r\n        );\r\n    }\r\n\r\n    renderFindMyStudyGroupButton = () => {\r\n        return (\r\n            <button onClick={() => this.redirectToMyStudyGroupHandle(this.props.users.login.user.userEmail)}>GO TO MY STUDY GROUP</button>\r\n        )\r\n    }\r\n\r\n    redirectToMyStudyGroupHandle = (studentEmail) => {\r\n        this.props.dispatch(getStudentByEmail(studentEmail));\r\n    }\r\n\r\n\r\n    renderNavButtons = () => {\r\n        return (\r\n            <div className=\"list_nav_buttons\">\r\n                <div className=\"prev\" onClick={() => this.loadPrev(this.state.offset, this.state.limit)}>\r\n                    Prev\r\n                </div>\r\n                <div className=\"next\" onClick={() => this.loadNext(this.state.offset, this.state.limit)}>\r\n                    Next\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    loadNext = (offset, limit) => {\r\n        if(offset + limit <= this.state.studyGroupsCount - 1) {\r\n            this.setState({\r\n                loaded: false\r\n            });\r\n            this.props.dispatch(getStudyGroups(offset + limit, limit));\r\n        }\r\n    }\r\n\r\n    loadPrev = (offset, limit) => {\r\n        if(offset - limit >= 0) {\r\n            this.setState({\r\n                loaded: false\r\n            });\r\n            this.props.dispatch(getStudyGroups(offset - limit, limit));\r\n        }\r\n    }\r\n\r\n    changeHandle = (value) => {\r\n        this.setState({\r\n            keyword: value\r\n        });\r\n\r\n        this.props.dispatch(clearStudyGroups());\r\n        if(value != \"\") {\r\n            if((value.length >= 3 || !isNaN(value)) && this.state.keyword.length <= value.length) {\r\n                setTimeout(() => { \r\n                    this.props.dispatch(getFilteredStudyGroups(value));\r\n                    this.setState({\r\n                        navButtons: false,\r\n                    });\r\n                }, 500);\r\n            }\r\n        } else {\r\n            this.props.dispatch(getStudyGroups(this.state.offset, this.state.limit));\r\n            this.setState({\r\n                navButtons: true,\r\n                loaded: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if(this.state.loaded == true) {\r\n            return (\r\n                <div className=\"list_container\">\r\n\r\n                    <h1>Study groups list</h1>\r\n\r\n                    {this.props.users.login.user.userRole == \"admin\" ? this.renderAddStudyGroupButton() : null}\r\n\r\n                    {this.props.users.login.user.userRole == \"student\" ? this.renderFindMyStudyGroupButton() : null}\r\n\r\n                    <FontAwesomeIcon id=\"search_icon\" icon={faSearch}/>\r\n                    <input className=\"search_input\" value={this.state.keyword} onChange={(event) => this.changeHandle(event.target.value)} placeholder=\"Enter keyword...\"/>\r\n\r\n                    <div>\r\n\r\n                        {this.state.studyGroups.length > 0 ? this.renderStudyGroups(this.state.studyGroups) : <div className=\"message\">No study groups yet.</div>}\r\n\r\n                    </div>\r\n\r\n                    {this.state.studyGroups.length > 0 && this.state.navButtons ? this.renderNavButtons() : null}\r\n\r\n                </div>\r\n\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        studyGroups: state.studyGroups,\r\n        students: state.students,\r\n        others: state.others\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(StudyGroupList);","\r\nimport React, {Component} from \"react\";\r\nimport {deleteNews} from \"../actions/newsActions\";\r\nimport {firebase} from \"../Firebase\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nclass News extends Component {\r\n\r\n    state = {\r\n        isLoaded: false,\r\n        picturePath: \"\"\r\n    }\r\n\r\n    getImageURL = (fileName) => {\r\n        firebase.storage().ref(\"pictures\").child(fileName).getDownloadURL()\r\n        .then((url) => {\r\n            this.setState({\r\n                isLoaded: true,\r\n                picturePath: url\r\n            })\r\n        })\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getImageURL(this.props.news.newsPicturePath);\r\n    }\r\n\r\n    aboutNewsHandle = (newsId) => {\r\n        this.props.history.push(`/news/${newsId}`);\r\n    }\r\n\r\n    deleteNewsHandle = (newsId) => {\r\n        Swal.fire({  \r\n            title: 'Are you sure?',  \r\n            text: 'You will delete the news and all the data asociated with it.',  \r\n            icon: 'warning',  \r\n            showCancelButton: true,  \r\n            confirmButtonColor: '#3085d6',  \r\n            cancelButtonColor: '#d33',  \r\n            confirmButtonText: 'Yes!'  \r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              this.props.dispatch(deleteNews(newsId));\r\n            } \r\n          });\r\n    }\r\n\r\n    renderOptions = () => {\r\n        return(\r\n            <div>\r\n                <div className=\"edit\" onClick={() => this.aboutNewsHandle(this.props.news.newsId)}>\r\n                    ABOUT\r\n                </div>\r\n                <div className=\"delete\" onClick={() => this.deleteNewsHandle(this.props.news.newsId)}>\r\n                    DELETE\r\n                </div>\r\n            </div>   \r\n        )\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoaded) {\r\n            return (\r\n                <div className=\"card\">\r\n                    <img src={this.state.picturePath}/>\r\n                    <div className=\"container\">\r\n                        <h4><b>{this.props.news.newsTitle}</b></h4>\r\n                        <p>by {this.props.news.newsAuthorName}</p>\r\n                        <p>{this.props.news.updatedAt}</p>\r\n                    </div>\r\n                    {this.renderOptions()}\r\n                </div>\r\n            )  \r\n        }else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n    }\r\n    \r\n    \r\n}\r\n\r\nexport default News;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getNews, clearNews, getFilteredNews, clearNewsList} from \"../actions/newsActions\";\r\nimport {countEsentials} from \"../actions/otherActions\";\r\nimport News from \"../components/News\";\r\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nclass NewsList extends Component {\r\n    state = {\r\n        news: [],\r\n        newsCount: 0,\r\n        offset: 0,\r\n        limit: 8,\r\n        loaded: false,\r\n        dummy: false,\r\n        navButtons: true,\r\n        keyword: \"\"\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.dispatch(getNews(this.state.offset, this.state.limit));\r\n        this.props.dispatch(countEsentials());\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n\r\n        if(nextProps.others.counts) {\r\n            if(nextProps.others.counts.newsCount != null) {\r\n\r\n                if(nextProps.news.newsList) {\r\n                    let news = nextProps.news.newsList.newsData;\r\n                    console.log(news);\r\n                    this.setState({\r\n                        news: news,\r\n                        offset: nextProps.news.newsList.offset,\r\n                        limit: nextProps.news.newsList.limit,\r\n                        newsCount: nextProps.others.counts.newsCount,\r\n                        loaded: true\r\n                    });\r\n                }\r\n            }\r\n\r\n            if(nextProps.news.deletedNews != null) {\r\n                window.location.reload();\r\n            }\r\n\r\n            if(nextProps.news.filteredNewsList) {\r\n                this.setState({\r\n                    news: nextProps.news.filteredNewsList.newsData,\r\n                    offset: 0,\r\n                    loaded: true\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    renderNews = (newsList) => {\r\n        return newsList.map(news => {\r\n            return (\r\n                <News key={news.newsId} history={this.props.history} dispatch={this.props.dispatch} news={news}/>\r\n            );\r\n        })\r\n    }\r\n\r\n\r\n\r\n    renderAddNewsButton = () => {\r\n        return (\r\n            <div className=\"add_button\" onClick={() => this.props.history.push(\"/add-news\")}>\r\n                    Add news\r\n            </div>\r\n   \r\n        );\r\n    }\r\n\r\n\r\n    renderNavButtons = () => {\r\n        return (\r\n            <div className=\"list_nav_buttons\">\r\n                <div className=\"prev\" onClick={() => this.loadPrev(this.state.offset, this.state.limit)}>\r\n                    Prev\r\n                </div>\r\n                <div className=\"next\" onClick={() => this.loadNext(this.state.offset, this.state.limit)}>\r\n                    Next\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    loadNext = (offset, limit) => {\r\n        if(offset + limit <= this.state.newsCount - 1) {\r\n            this.setState({\r\n                loaded: false\r\n            });\r\n            this.props.dispatch(getNews(offset + limit, limit));\r\n        }\r\n    }\r\n\r\n    loadPrev = (offset, limit) => {\r\n        if(offset - limit >= 0) {\r\n            this.setState({\r\n                loaded: false\r\n            });\r\n            this.props.dispatch(getNews(offset - limit, limit));\r\n        }\r\n    }\r\n\r\n    changeHandle = (value) => {\r\n        this.setState({\r\n            keyword: value\r\n        });\r\n\r\n        this.props.dispatch(clearNewsList());\r\n\r\n        if(value != \"\") {\r\n            if(value.length >= 3 && this.state.keyword.length <= value.length) {\r\n                setTimeout(() => { \r\n                    this.props.dispatch(getFilteredNews(value));\r\n                    this.setState({\r\n                        navButtons: false,\r\n                    });\r\n                }, 500);\r\n            }\r\n        } else {\r\n            this.props.dispatch(getNews(this.state.offset, this.state.limit));\r\n            this.setState({\r\n                navButtons: true,\r\n                loaded: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if(this.state.loaded == true) {\r\n            return (\r\n                <div className=\"list_container\">\r\n\r\n                    <h1>News list</h1>\r\n                    \r\n                    {this.renderAddNewsButton()}\r\n\r\n                    <FontAwesomeIcon id=\"search_icon\" icon={faSearch}/>\r\n                    <input className=\"search_input\" value={this.state.keyword} onChange={(event) => this.changeHandle(event.target.value)} placeholder=\"Enter keyword...\"/>\r\n\r\n                    <div>\r\n\r\n                        {this.state.news.length > 0 ? this.renderNews(this.state.news) : <div className=\"message\">No news published yet.</div>}\r\n\r\n                    </div>\r\n\r\n                    {this.state.news.length > 0 && this.state.navButtons ? this.renderNavButtons() : null}\r\n\r\n                </div>\r\n\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        news: state.news,\r\n        others: state.others\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NewsList);","import React from \"react\";\r\nimport {deleteCourse} from \"../actions/coursesActions\";\r\nimport moment from \"moment\";\r\nimport Swal from \"sweetalert2\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Course = ({course, history, dispatch, userRole}) => {\r\n\r\n    let className = \"\";\r\n\r\n    const aboutCourse = (courseId) => {\r\n        history.push(`/course/${courseId}`);\r\n    }\r\n\r\n    const deleteCourseHandle = (courseId) => {\r\n        Swal.fire({  \r\n            title: 'Are you sure?',  \r\n            text: 'You will delete the course and all the data asociated with it (exams, marks, presences, etc.)',  \r\n            icon: 'warning',  \r\n            showCancelButton: true,  \r\n            confirmButtonColor: '#3085d6',  \r\n            cancelButtonColor: '#d33',  \r\n            confirmButtonText: 'Yes!'  \r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              dispatch(deleteCourse(courseId));\r\n            } \r\n          });\r\n    }\r\n\r\n    const renderOptions = () => {\r\n        return(\r\n            <div className={className}>\r\n                <div className=\"edit\" onClick={() => aboutCourse(course.courseId)}>\r\n                    ABOUT\r\n                </div>\r\n                \r\n                {userRole == \"admin\"\r\n                ?\r\n                (\r\n                    <div className=\"delete\" onClick={() => deleteCourseHandle(course.courseId)}>\r\n                        DELETE\r\n                    </div>\r\n                )\r\n                :\r\n                null}\r\n\r\n            </div>   \r\n        )\r\n    }\r\n\r\n    return (\r\n        <div key={course.courseId} className=\"course_container\">\r\n\r\n                <h2>\r\n                   {course.courseName}\r\n                </h2>\r\n\r\n                <div className={\"professor\"}>\r\n                    {`with `}\r\n                    {userRole == \"admin\" ?\r\n                     <Link to={{ \r\n                        pathname:`/professor/${course.professorId}`,\r\n                        state: {fromDashboard: true }}}>\r\n                            {`${course.Professor.professorFirstName} ${course.Professor.professorLastName}`}\r\n                    </Link>\r\n                    :\r\n                    <span>\r\n                       {`${course.Professor.professorFirstName} ${course.Professor.professorLastName}`} \r\n                    </span>}\r\n\r\n                </div>\r\n\r\n                <div className={\"subject\"}>\r\n                    {`teaching `}\r\n                    <Link to={{ \r\n                        pathname:`/subject/${course.subjectId}`,\r\n                        state: {fromDashboard: true }}}>\r\n                            {`${course.Subject.subjectName}`}\r\n                    </Link>\r\n                </div>\r\n\r\n                <div className={\"time\"}>\r\n                    {`at ${moment(course.courseTime).format(\"dddd HH:mm\")}`}\r\n                </div>\r\n\r\n                <div className={\"studygroup\"}>\r\n                    {`for study group no. `}\r\n                    <Link to={{\r\n                        pathname:`/studygroup/${course.studyGroupId}`,\r\n                        state: {fromDashboard: true}}}>\r\n                        {`${course.StudyGroup.studyGroupId}`}\r\n                    </Link>\r\n                </div>\r\n                \r\n\r\n            {renderOptions()}\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Course;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {clearCoursesList, clearCourse, getCourses, getCoursesByStudentEmail, getCoursesByProfessorEmail, getFilteredCourses} from \"../actions/coursesActions\";\r\nimport {countEsentials} from \"../actions/otherActions\";\r\nimport Course from \"../components/Course\";\r\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nclass CoursesList extends Component {\r\n    state = {\r\n        customList: false,\r\n        courses: [],\r\n        coursesCount: 0,\r\n        offset: 0,\r\n        limit: 6,\r\n        loaded: false,\r\n        keyword: \"\",\r\n        navButtons: true,\r\n        dummy: false\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.dispatch(clearCoursesList());\r\n        this.props.dispatch(getCourses(this.state.offset, this.state.limit));\r\n        this.props.dispatch(countEsentials());\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        console.log(nextProps)\r\n        if(nextProps.others.counts) {\r\n            if(nextProps.others.counts) {\r\n                if(nextProps.courses.coursesList) {\r\n                    let courses = nextProps.courses.coursesList.coursesData;\r\n                    this.setState({\r\n                        courses: courses,\r\n                        offset: nextProps.courses.coursesList.offset,\r\n                        limit: nextProps.courses.coursesList.limit,\r\n                        coursesCount: nextProps.others.counts.coursesCount,\r\n                        loaded: true\r\n                    });\r\n                }\r\n                if(nextProps.courses.filteredCoursesList) {\r\n                    this.setState({\r\n                        courses: nextProps.courses.filteredCoursesList,\r\n                        loaded: true\r\n                    })\r\n                }\r\n            }\r\n\r\n            if(nextProps.courses.deletedCourse != null) {\r\n                window.location.reload();\r\n                this.props.dispatch(clearCourse());\r\n            }\r\n\r\n            if(nextProps.courses.keywordFilteredCoursesList) {\r\n                this.setState({\r\n                    courses: nextProps.courses.keywordFilteredCoursesList.coursesData,\r\n                    loaded: true\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    renderCourses = (coursesList) => {\r\n        return coursesList.map(course => {\r\n            return (\r\n                <Course key={course.courseId} course={course} history={this.props.history} dispatch={this.props.dispatch} userRole={this.props.users.login.user.userRole}/>\r\n            );\r\n        });\r\n    }\r\n\r\n\r\n\r\n    renderAddCourseButton = () => {\r\n        return (\r\n            <div className=\"add_button\" onClick={() => this.props.history.push(\"/add-course\")}>\r\n                    Add course\r\n            </div>\r\n   \r\n        );\r\n    }\r\n\r\n\r\n    renderNavButtons = () => {\r\n        return (\r\n            <div className=\"list_nav_buttons\">\r\n                <div className=\"prev\" onClick={() => this.loadPrev(this.state.offset, this.state.limit)}>\r\n                    Prev\r\n                </div>\r\n                <div className=\"next\" onClick={() => this.loadNext(this.state.offset, this.state.limit)}>\r\n                    Next\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    loadNext = (offset, limit) => {\r\n        if(offset + limit <= this.state.coursesCount - 1) {\r\n            this.setState({\r\n                loaded: false\r\n            });\r\n            this.props.dispatch(getCourses(offset + limit, limit));\r\n        }\r\n    }\r\n\r\n    loadPrev = (offset, limit) => {\r\n        if(offset - limit >= 0) {\r\n            this.setState({\r\n                loaded: false\r\n            });\r\n            this.props.dispatch(getCourses(offset - limit, limit));\r\n        }\r\n    }\r\n\r\n    changeHandle = (value) => {\r\n        this.setState({\r\n            keyword: value\r\n        });\r\n\r\n        this.props.dispatch(clearCoursesList());\r\n        if(value != \"\") {\r\n            if(value.length >= 3 && this.state.keyword.length <= value.length) {\r\n                setTimeout(() => { \r\n                    this.props.dispatch(getFilteredCourses(value));\r\n                    this.setState({\r\n                        navButtons: false,\r\n                    });\r\n                }, 500);\r\n            }\r\n        } else {\r\n            this.props.dispatch(getCourses(this.state.offset, this.state.limit));\r\n            this.setState({\r\n                navButtons: true\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    loadAllCoursesHandle = () => {\r\n        this.props.dispatch(clearCoursesList());\r\n        this.props.dispatch(getCourses(this.state.offset, this.state.limit));\r\n        this.setState({\r\n            customList: false,\r\n            loaded: false,\r\n            keyword: \"\"\r\n        })\r\n    }\r\n\r\n    loadProfessorCoursesHandle = (professorEmail) => {\r\n        this.props.dispatch(clearCoursesList());\r\n        this.props.dispatch(getCoursesByProfessorEmail(professorEmail));\r\n        this.setState({\r\n            customList: true,\r\n            loaded: false,\r\n            keyword: \"\"\r\n        });\r\n    }\r\n\r\n    loadStudentCoursesHandle = (studentEmail) => {\r\n        this.props.dispatch(clearCoursesList());\r\n        this.props.dispatch(getCoursesByStudentEmail(studentEmail));\r\n        this.setState({\r\n            customList: true,\r\n            loaded: false,\r\n            keyword: \"\"\r\n        });\r\n    }\r\n\r\n    renderProfessorCoursesButton = () => {\r\n        return !this.state.customList\r\n                ?\r\n                <button onClick={() => this.loadProfessorCoursesHandle(this.props.users.login.user.userEmail)}>GET MY COURSES</button>\r\n                :\r\n                <button onClick={() => this.loadAllCoursesHandle()}>GET ALL COURSES</button>\r\n    }\r\n\r\n    renderStudentCoursesButton = () => {\r\n        return !this.state.customList\r\n                ?\r\n                <button onClick={() => this.loadStudentCoursesHandle(this.props.users.login.user.userEmail)}>GET MY COURSES</button>\r\n                :\r\n                <button onClick={() => this.loadAllCoursesHandle()}>GET ALL COURSES</button>\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if(this.state.loaded == true) {\r\n            return (\r\n                <div className=\"list_container\">\r\n\r\n                    <h1>Courses list</h1>\r\n\r\n\r\n                    {this.props.users.login.user.userRole == \"admin\" ? this.renderAddCourseButton() : null}\r\n\r\n                    {this.props.users.login.user.userRole == \"professor\"  ? this.renderProfessorCoursesButton() : null}\r\n\r\n                    {this.props.users.login.user.userRole == \"student\"  ? this.renderStudentCoursesButton() : null}\r\n\r\n                    <FontAwesomeIcon id=\"search_icon\" icon={faSearch}/>\r\n                    <input className=\"search_input\" value={this.state.keyword} onChange={(event) => this.changeHandle(event.target.value)} placeholder=\"Enter keyword...\"/>\r\n\r\n\r\n                    <div>\r\n\r\n                        {this.state.courses.length > 0 ? this.renderCourses(this.state.courses) : <div className=\"message\">No courses yet</div>}\r\n\r\n                    </div>\r\n\r\n                    {!this.state.customList && this.state.courses.length > 0 && this.state.navButtons ? this.renderNavButtons() : null}\r\n\r\n                </div>\r\n\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        courses: state.courses,\r\n        others: state.others\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CoursesList);","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Exam = ({exam, type, aboutExam, deleteExam, userRole}) => {\r\n\r\n    let className = \"\";\r\n    if(type == \"info\") {\r\n        className = \"student_column_info\";\r\n    }else {\r\n        className = \"student_column_label\";\r\n    }\r\n\r\n    const renderOptions = () => {\r\n        if(className == \"student_column_label\") {\r\n            return (\r\n                <div className={className}>\r\n                    Options\r\n                </div>\r\n            )\r\n        }else {\r\n            return (\r\n                <div className={className}>\r\n                    <div className=\"edit\" onClick={() => aboutExam(exam.examId)}>\r\n                        ABOUT\r\n                    </div>\r\n                    {userRole == \"admin\"\r\n                    ?\r\n                    (\r\n                        <div className=\"delete\" onClick={() => deleteExam(exam.examId)}>\r\n                            DELETE\r\n                        </div>\r\n                    )\r\n                    :\r\n                    null}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div key={exam.examId} className=\"student_container\">\r\n\r\n            <div className={className}>\r\n                {exam.examId}\r\n            </div>\r\n\r\n            <div className={className}>\r\n                {exam.Course.courseName}\r\n            </div>\r\n\r\n            <div className={className}>\r\n                {exam.Course.studyGroupId}\r\n            </div>\r\n\r\n            <div className={className}>\r\n                {exam.examDate == \"Date\" ? exam.examDate : moment(exam.examDate).format(\"DD/MM/YYYY\")}\r\n            </div>\r\n\r\n            <div className={className}>\r\n                {\r\n                exam.examIsOnline == 1 ?\r\n                \"ONLINE\" \r\n                :\r\n                exam.examIsOnline === \"Form\" ?\r\n                    exam.examIsOnline\r\n                    :\r\n                    \"PHYSICAL\"\r\n                }\r\n            </div>\r\n\r\n            {renderOptions()}\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Exam;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getExams, clearExams, clearExam, deleteExam, getExamsByProfessorEmail, getExamsByStudentEmail, getFilteredExams} from \"../actions/examActions\";\r\nimport {countEsentials} from \"../actions/otherActions\";\r\nimport Exam from \"../components/Exam\";\r\nimport Swal from \"sweetalert2\";\r\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\nclass ExamsList extends Component {\r\n    state = {\r\n        customList: false,\r\n        labels: {\r\n                examId: \"ID\",\r\n                Course: {\r\n                    courseName: \"Course\",\r\n                    studyGroupId: \"StudyGroup\"\r\n                },\r\n                examDate: \"Date\",\r\n                examIsOnline: \"Form\"\r\n            },\r\n\r\n        exams: [],\r\n        examsCount: 0,\r\n        offset: 0,\r\n        limit: 10,\r\n        loaded: false,\r\n        dummy: false,\r\n        keyword: \"\",\r\n        navButtons: true\r\n    }\r\n\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.dispatch(clearExams());\r\n        this.props.dispatch(getExams(this.state.offset, this.state.limit));\r\n        this.props.dispatch(countEsentials());\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        if(nextProps.others.counts) {\r\n            if(nextProps.exams.examsList) {\r\n                let exams = nextProps.exams.examsList.examsData;\r\n                this.setState({\r\n                    exams: exams,\r\n                    offset: nextProps.exams.examsList.offset,\r\n                    limit: nextProps.exams.examsList.limit,\r\n                    examsCount: nextProps.others.counts.examsCount,\r\n                    loaded: true\r\n                });\r\n            }\r\n            if(nextProps.exams.filteredExamsList) {\r\n                this.setState({\r\n                    exams: nextProps.exams.filteredExamsList,\r\n                    loaded: true\r\n                })\r\n            }\r\n        }\r\n        if(nextProps.exams.deletedExam) {\r\n            window.location.reload();\r\n            this.props.dispatch(clearExam());\r\n        }\r\n\r\n        if(nextProps.exams.keywordFilteredExamsList) {\r\n            this.setState({\r\n                exams: nextProps.exams.keywordFilteredExamsList.examsData,\r\n                offset: 0,\r\n                loaded: true\r\n            });\r\n        }\r\n    }\r\n\r\n    renderExams = (examsList) => {\r\n        return examsList.map(exam => {\r\n            return (\r\n                <Exam key={exam.examId} exam={exam} aboutExam={this.aboutExam} deleteExam={this.deleteExam} type=\"info\" userRole={this.props.users.login.user.userRole}/>\r\n            );\r\n        });   \r\n    }\r\n\r\n    renderLabels = (labels) => {\r\n        return <Exam exam={labels} type=\"label\" userRole={this.props.users.login.user.userRole}/>\r\n    }\r\n\r\n    renderAddExamButton = () => {\r\n        return (\r\n            <div className=\"add_button\" onClick={() => this.props.history.push(\"/add-exam\")}>\r\n                    Add exam\r\n            </div>\r\n   \r\n        );\r\n    }\r\n\r\n    renderNavButtons = () => {\r\n        return (\r\n            <div className=\"list_nav_buttons\">\r\n                <div className=\"prev\" onClick={() => this.loadPrev(this.state.offset, this.state.limit)}>\r\n                    Prev\r\n                </div>\r\n                <div className=\"next\" onClick={() => this.loadNext(this.state.offset, this.state.limit)}>\r\n                    Next\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    aboutExam = (examId) => {\r\n        this.props.history.push(`/exam/${examId}`);\r\n    }\r\n\r\n    deleteExam = (examId) => {\r\n        Swal.fire({  \r\n            title: 'Are you sure?',  \r\n            text: 'You will the exam and all the data asociated with it.',  \r\n            icon: 'warning',  \r\n            showCancelButton: true,  \r\n            confirmButtonColor: '#3085d6',  \r\n            cancelButtonColor: '#d33',  \r\n            confirmButtonText: 'Yes!'  \r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                this.props.dispatch(deleteExam(examId));\r\n            } \r\n        });    \r\n    }\r\n\r\n    loadNext = (offset, limit) => {\r\n        if(offset + limit <= this.state.examsCount - 1) {\r\n            this.setState({\r\n                loaded: false\r\n            });\r\n            this.props.dispatch(getExams(offset + limit, limit));\r\n        }\r\n    }\r\n\r\n    loadPrev = (offset, limit) => {\r\n        if(offset - limit >= 0) {\r\n            this.setState({\r\n                loaded: false\r\n            });\r\n            this.props.dispatch(getExams(offset - limit, limit));\r\n        }\r\n    }\r\n\r\n    loadAllExamsHandle = () => {\r\n        this.props.dispatch(clearExams());\r\n        this.props.dispatch(getExams(this.state.offset, this.state.limit));\r\n        this.setState({\r\n            customList: false,\r\n            loaded: false,\r\n            keyword: \"\"\r\n        })\r\n    }\r\n\r\n    loadProfessorExamsHandle = (professorEmail) => {\r\n        this.props.dispatch(clearExams());\r\n        this.props.dispatch(getExamsByProfessorEmail(professorEmail));\r\n        this.setState({\r\n            customList: true,\r\n            loaded: false,\r\n            keyword: \"\"\r\n        });\r\n    }\r\n\r\n    loadStudentExamsHandle = (studentEmail) => {\r\n        this.props.dispatch(clearExams());\r\n        this.props.dispatch(getExamsByStudentEmail(studentEmail));\r\n        this.setState({\r\n            customList: true,\r\n            loaded: false,\r\n            keyword: \"\"\r\n        });\r\n    }\r\n\r\n    changeHandle = (value) => {\r\n        this.setState({\r\n            keyword: value\r\n        });\r\n\r\n        this.props.dispatch(clearExams());\r\n\r\n        if(value != \"\") {\r\n            if((value.length >= 3 || !isNaN(value)) && this.state.keyword.length <= value.length) {\r\n                setTimeout(() => { \r\n                    this.props.dispatch(getFilteredExams(value));\r\n                    this.setState({\r\n                        navButtons: false,\r\n                    });\r\n                }, 500);\r\n            }\r\n        } else {\r\n            this.props.dispatch(getExams(this.state.offset, this.state.limit));\r\n            this.setState({\r\n                loaded: false,\r\n                navButtons: true\r\n            });\r\n        }\r\n    }\r\n\r\n    renderProfessorExamsButton = () => {\r\n        return !this.state.customList\r\n                ?\r\n                <button onClick={() => this.loadProfessorExamsHandle(this.props.users.login.user.userEmail)}>GET MY EXAMS</button>\r\n                :\r\n                <button onClick={() => this.loadAllExamsHandle()}>GET ALL EXAMS</button>\r\n    }\r\n\r\n    renderStudentCoursesButton = () => {\r\n        return !this.state.customList\r\n        ?\r\n        <button onClick={() => this.loadStudentExamsHandle(this.props.users.login.user.userEmail)}>GET MY EXAMS</button>\r\n        :\r\n        <button onClick={() => this.loadAllExamsHandle()}>GET ALL EXAMS</button>\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        if(this.state.loaded == true) {\r\n            return (\r\n                <div className=\"list_container\">\r\n\r\n                    <h1>Exams list</h1>\r\n                    \r\n                    {this.props.users.login.user.userRole == \"admin\" ? this.renderAddExamButton() : null}\r\n\r\n                    {this.props.users.login.user.userRole == \"professor\" ? this.renderProfessorExamsButton() : null}\r\n\r\n                    {this.props.users.login.user.userRole == \"student\" ? this.renderStudentCoursesButton() : null}\r\n\r\n                    <FontAwesomeIcon id=\"search_icon\" icon={faSearch}/>\r\n                    <input className=\"search_input\" value={this.state.keyword} onChange={(event) => this.changeHandle(event.target.value)} placeholder=\"Enter keyword...\"/>\r\n\r\n                    <div>\r\n\r\n                        {this.state.exams.length > 0 ? this.renderLabels(this.state.labels) : <div className=\"message\">No exams programmed yet.</div>}\r\n                        {this.state.exams.length > 0 ? this.renderExams(this.state.exams) : null}\r\n\r\n                    </div>\r\n\r\n                    {!this.state.customList && this.state.exams.length > 0 && this.state.navButtons ? this.renderNavButtons() : null}\r\n\r\n                </div>\r\n\r\n            );\r\n        }else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        exams: state.exams,\r\n        others: state.others\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ExamsList);","\r\nimport React from \"react\";\r\nimport {deleteDepartment} from \"../actions/departmentActions\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst Department = ({department, dispatch, history, userRole}) => {\r\n\r\n    const aboutDepartmentHandle = (departmentId) => {\r\n       history.push(`/department/${departmentId}`);\r\n    }\r\n\r\n    const deleteDepartmentHandle = (departmentId) => {\r\n        Swal.fire({  \r\n            title: 'Are you sure?',  \r\n            text: 'You will the delete the department and all the data asociated with it (professors, courses, exams, etc.)',  \r\n            icon: 'warning',  \r\n            showCancelButton: true,  \r\n            confirmButtonColor: '#3085d6',  \r\n            cancelButtonColor: '#d33',  \r\n            confirmButtonText: 'Yes!'  \r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                dispatch(deleteDepartment(departmentId));\r\n            } \r\n        });    \r\n    }\r\n\r\n    const renderOptions = () => {\r\n        return(\r\n            <div>\r\n                <div className=\"edit\" onClick={() => aboutDepartmentHandle(department.departmentId)}>\r\n                    ABOUT\r\n                </div>\r\n                {userRole == \"admin\"\r\n                ?\r\n                (\r\n                    <div className=\"delete\" onClick={() => deleteDepartmentHandle(department.departmentId)}>\r\n                        DELETE\r\n                    </div>\r\n                )\r\n                :\r\n                null}\r\n\r\n            </div>   \r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"department-card\">\r\n            <div className=\"department-container\">\r\n                <h4><b>{department.departmentName}</b></h4>\r\n                <p>{department.Faculty.facultyName}</p>\r\n            </div>\r\n            {renderOptions()}\r\n        </div>\r\n    )    \r\n    \r\n}\r\n\r\nexport default Department;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {clearDepartments, clearDepartment, getDepartments, getFilteredDepartments} from \"../actions/departmentActions\";\r\nimport {countEsentials} from \"../actions/otherActions\";\r\nimport Department from \"../components/Department\";\r\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nclass DepartmentsList extends Component {\r\n    state = {\r\n        departments: [],\r\n        departmentsCount: 0,\r\n        offset: 0,\r\n        limit: 6,\r\n        loaded: false,\r\n        dummy: false,\r\n        keyword: \"\",\r\n        navButtons: true\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.dispatch(clearDepartments());\r\n        this.props.dispatch(getDepartments(this.state.offset, this.state.limit));\r\n        this.props.dispatch(countEsentials());\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        console.log(nextProps)\r\n        if(nextProps.others.counts) {\r\n            if(nextProps.others.counts) {\r\n                if(nextProps.departments.departmentsList) {\r\n                    let departments = nextProps.departments.departmentsList.departmentsData;\r\n                    this.setState({\r\n                        departments: departments,\r\n                        offset: nextProps.departments.departmentsList.offset,\r\n                        limit: nextProps.departments.departmentsList.limit,\r\n                        departmentsCount: nextProps.others.counts.departmentsCount,\r\n                        loaded: true\r\n                    });\r\n                }\r\n            }\r\n\r\n            if(nextProps.departments.deletedDepartment != null) {\r\n                window.location.reload();\r\n                this.props.dispatch(clearDepartment());\r\n            }\r\n\r\n            if(nextProps.departments.filteredDepartmentsList) {\r\n                this.setState({\r\n                    departments: nextProps.departments.filteredDepartmentsList.departmentsData,\r\n                    offset: 0,\r\n                    loaded: true\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    renderDepartments = (departmentsList) => {\r\n        return departmentsList.map(department => {\r\n            return (\r\n                <Department key={department.departmentId} department={department} history={this.props.history} dispatch={this.props.dispatch} userRole={this.props.users.login.user.userRole}/>\r\n            );\r\n        });\r\n    } \r\n\r\n\r\n\r\n\r\n    renderAddDepartmentButton = () => {\r\n        return (\r\n            <div className=\"add_button\" onClick={() => this.props.history.push(\"/add-department\")}>\r\n                    Add department\r\n            </div>\r\n   \r\n        );\r\n    }\r\n\r\n\r\n    renderNavButtons = () => {\r\n        return (\r\n            <div className=\"list_nav_buttons\">\r\n                <div className=\"prev\" onClick={() => this.loadPrev(this.state.offset, this.state.limit)}>\r\n                    Prev\r\n                </div>\r\n                <div className=\"next\" onClick={() => this.loadNext(this.state.offset, this.state.limit)}>\r\n                    Next\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    loadNext = (offset, limit) => {\r\n        if(offset + limit <= this.state.departmentsCount - 1) {\r\n            this.setState({\r\n                loaded: false\r\n            });\r\n            this.props.dispatch(getDepartments(offset + limit, limit));\r\n        }\r\n    }\r\n\r\n    loadPrev = (offset, limit) => {\r\n        if(offset - limit >= 0) {\r\n            this.setState({\r\n                loaded: false\r\n            });\r\n            this.props.dispatch(getDepartments(offset - limit, limit));\r\n        }\r\n    }\r\n\r\n    changeHandle = (value) => {\r\n        this.setState({\r\n            keyword: value\r\n        });\r\n\r\n        this.props.dispatch(clearDepartments());\r\n\r\n        if(value != \"\") {\r\n            if(value.length >= 3 && this.state.keyword.length <= value.length) {\r\n                setTimeout(() => { \r\n                    this.props.dispatch(getFilteredDepartments(value));\r\n                    this.setState({\r\n                        navButtons: false,\r\n                    });\r\n                }, 500);\r\n            }\r\n        } else {\r\n            this.props.dispatch(getDepartments(this.state.offset, this.state.limit));\r\n            this.setState({\r\n                navButtons: true,\r\n                loaded: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if(this.state.loaded == true) {\r\n            return (\r\n                <div className=\"list_container\">\r\n\r\n                    <h1>Departments list</h1>\r\n\r\n                    {this.props.users.login.user.userRole == \"admin\" ? this.renderAddDepartmentButton() : null}\r\n\r\n                    <FontAwesomeIcon id=\"search_icon\" icon={faSearch}/>\r\n                    <input className=\"search_input\" value={this.state.keyword} onChange={(event) => this.changeHandle(event.target.value)} placeholder=\"Enter keyword...\"/>\r\n\r\n                    <div>\r\n\r\n                        {this.state.departments.length > 0 ? this.renderDepartments(this.state.departments) : <div className=\"message\">No departments yet.</div>}\r\n\r\n                    </div>\r\n\r\n                    {this.state.departments.length > 0 && this.state.navButtons ? this.renderNavButtons() : null} \r\n\r\n                </div>\r\n\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        departments: state.departments,\r\n        others: state.others\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(DepartmentsList);","import React, {Component} from \"react\";\r\nimport FormField from \"../components/FormField\";\r\nimport {connect} from \"react-redux\";\r\nimport {clearFaculties, getFaculties} from \"../actions/facultyActions\";\r\nimport {addStudent, clearStudent} from \"../actions/studentActions\";\r\nimport {clearStudyGroups, getStudyGroups} from \"../actions/studyGroupActions\";\r\n\r\nclass AddStudent extends Component {\r\n\r\n    state = {\r\n        error: \"\",\r\n        loading: false,\r\n        formData: {\r\n            studentFirstName: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"studentFirstName\",\r\n                    label: \"First name: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Student first name...\"\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            studentLastName: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"studentLastName\",\r\n                    label: \"Last name: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Student last name...\"\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            studentEmail: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"studentEmail\",\r\n                    label: \"Email: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Student email...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                },\r\n                valid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            studentDob: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"studentDob\",\r\n                    label: \"Date of birth: \",\r\n                    placeholder: \"Student date of birth...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    date: true\r\n                },\r\n                valid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            studentAddress: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"studentAddress\",\r\n                    label: \"Student address: \",\r\n                    placeholder: \"Student address...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            studentPhone: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"studentPhone\",\r\n                    label: \"Student phone: \",\r\n                    placeholder: \"Student phone...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            studentIsTaxed: {\r\n                element: \"select\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"studentIsTaxed\",\r\n                    label: \"Student financing option: \",\r\n                    options: [\r\n                        {\r\n                            id: 0,\r\n                            name: \"taxed\"\r\n                        },\r\n                        {\r\n                            id: 1,\r\n                            name: \"budget\"\r\n                        }\r\n                    ]\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            studyGroupId: {\r\n                element: \"select\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"studyGroupId\",\r\n                    label: \"Study group: \",\r\n                    options: []\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            facultyId: {\r\n                element: \"select\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"facultyId\",\r\n                    label: \"Student faculty: \",\r\n                    options: []\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            }\r\n        }\r\n    };\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.dispatch(clearStudent());\r\n        this.props.dispatch(clearStudyGroups());\r\n        this.props.dispatch(clearFaculties());\r\n        this.props.dispatch(getFaculties());\r\n        this.props.dispatch(getStudyGroups());\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n\r\n        console.log(nextProps);\r\n        let tempFormData = this.state.formData;\r\n        let facultyOptions = [];\r\n        let studyGroupOptions = [];\r\n        if(nextProps.faculties.facultiesList) {\r\n            nextProps.faculties.facultiesList.map((faculty) => {\r\n                facultyOptions.push({\r\n                    id: faculty.facultyId,\r\n                    name: faculty.facultyName\r\n                });\r\n            });\r\n            if(nextProps.studyGroups.studyGroupsList) {\r\n                nextProps.studyGroups.studyGroupsList.studyGroupsData.map((studyGroup) => {\r\n                    studyGroupOptions.push({\r\n                        id: studyGroup.studyGroupId,\r\n                        name: studyGroup.studyGroupId\r\n                    });\r\n                });\r\n            }\r\n            tempFormData.studyGroupId.config.options = studyGroupOptions;\r\n            tempFormData.facultyId.config.options = facultyOptions;\r\n\r\n            this.setState({\r\n                formData: tempFormData\r\n            });\r\n        }\r\n\r\n        if(nextProps.students.student) {\r\n            if(nextProps.students.student.message) {\r\n                this.setState({\r\n                    error: nextProps.students.student.message\r\n                });\r\n            }else {\r\n                this.setState({\r\n                    loading: true\r\n                });\r\n                this.props.dispatch(clearStudent());\r\n                this.props.history.push(\"/students-list\");\r\n            }\r\n        }\r\n    }\r\n\r\n    updateForm = (formResponse) => {\r\n        let newFormData = {...this.state.formData}\r\n        let newElement = {...newFormData[formResponse.id]};\r\n\r\n        newElement.value = formResponse.event.target.value;\r\n\r\n        if(formResponse.isBlurred){\r\n            let isValid = this.validateData(newElement);\r\n            newElement.isValid = isValid[0];\r\n            newElement.validationMessage = isValid[1];\r\n            newElement.isBlurred = formResponse.isBlurred;\r\n        }\r\n\r\n        newFormData[formResponse.id] = newElement;\r\n        this.setState({\r\n            formData: newFormData\r\n        });\r\n    }\r\n\r\n    validateData = (data) => {\r\n\r\n        let error = [true, \"\"];\r\n\r\n        if(data.validation.required) {\r\n            const isValid = data.value.trim() !== \"\" ? true : false;\r\n            const message = `${!isValid ? \"This field is required !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.email) {\r\n            const isValid = /\\S+@\\S+\\.\\S+/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid email address !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.minLength) {\r\n            const isValid = data.value.length >= data.validation.minLength ? true : false;\r\n            const message = `${!isValid ? `This field must be at least ${data.validation.minLength} characters long !` : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.date) {\r\n            const isValid = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid date in DD/MM/YYYY format !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    renderSubmitButton = () => {\r\n        return (\r\n            this.state.loading \r\n            ? \r\n            <div className=\"loading\">\r\n                Loading...\r\n            </div>\r\n            :\r\n            <div>\r\n                <button onClick={(event) => this.submitHandle(event)}>Add student</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    submitHandle = (event) => {\r\n        event.preventDefault();\r\n        let dataToSubmit = {};\r\n        let isFormValid = true;\r\n\r\n\r\n        for(let key in this.state.formData) {\r\n            dataToSubmit[key] = this.state.formData[key].value;\r\n        }\r\n\r\n        for(let key in this.state.formData) {\r\n            isFormValid = isFormValid && this.state.formData[key].isValid && this.state.formData[key].value != \"\" ? true : false;\r\n        }\r\n\r\n        if(isFormValid) {\r\n            document.body.click();\r\n            this.setState({\r\n                error: \"\",\r\n                loading: true\r\n            });\r\n            this.props.dispatch(addStudent(dataToSubmit));\r\n        }else {\r\n            this.setState({\r\n                error: \"Something must have happened...\"\r\n            });\r\n        }\r\n    }\r\n    \r\n    renderError = () => {\r\n        return (\r\n            this.state.error !== \"\"\r\n            ?\r\n            <div className=\"error\">\r\n                {this.state.error}\r\n            </div>\r\n            :\r\n            \"\"\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if(!this.state.loading) {\r\n            return (\r\n                <div className=\"add_container\">\r\n                    \r\n                    <form>\r\n    \r\n                        <h2>Add student</h2>\r\n    \r\n                        <FormField\r\n                            id={\"studentFirstName\"}\r\n                            formData={this.state.formData.studentFirstName}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n                        <FormField\r\n                            id={\"studentLastName\"}\r\n                            formData={this.state.formData.studentLastName}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"studentEmail\"}\r\n                            formData={this.state.formData.studentEmail}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"studentDob\"}\r\n                            formData={this.state.formData.studentDob}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"studentAddress\"}\r\n                            formData={this.state.formData.studentAddress}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"studentPhone\"}\r\n                            formData={this.state.formData.studentPhone}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>             \r\n                            \r\n                        <FormField\r\n                            id={\"studentIsTaxed\"}\r\n                            formData={this.state.formData.studentIsTaxed}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n                        \r\n                        <FormField\r\n                            id={\"studyGroupId\"}\r\n                            formData={this.state.formData.studyGroupId}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n                        \r\n                        <FormField\r\n                            id={\"facultyId\"}\r\n                            formData={this.state.formData.facultyId}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n    \r\n                        {this.renderSubmitButton()}\r\n                        {this.renderError()}\r\n    \r\n                    </form>\r\n                </div>\r\n            );\r\n        }else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        students: state.students,\r\n        faculties: state.faculties,\r\n        studyGroups: state.studyGroups\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddStudent);","import {Component} from \"react\";\r\nimport {getDepartments} from \"../actions/departmentActions\";\r\nimport {addProfessor, clearProfessor} from \"../actions/professorActions\";\r\nimport FormField from \"../components/FormField\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass AddProfessor extends Component {\r\n\r\n    state = {\r\n        error: \"\",\r\n        loading: false,\r\n        formData: {\r\n            professorFirstName: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"professorFirstName\",\r\n                    label: \"First name: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Professor first name...\"\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            professorLastName: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"professorLastName\",\r\n                    label: \"Last name: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Professor last name...\"\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            professorEmail: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"professorEmail\",\r\n                    label: \"Email: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Professor email...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            professorDob: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"professorDob\",\r\n                    label: \"Date of birth: \",\r\n                    placeholder: \"Professor date of birth...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    date: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            professorAddress: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"professorAddress\",\r\n                    label: \"Professor address: \",\r\n                    placeholder: \"Professor address...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            professorPhone: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"professorPhone\",\r\n                    label: \"Professor phone: \",\r\n                    placeholder: \"Professor phone...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            professorSalary: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"professorSalary\",\r\n                    label: \"Professor salary: \",\r\n                    placeholder: \"Professor salary...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            departmentId: {\r\n                element: \"select\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"departmentId\",\r\n                    label: \"Department: \",\r\n                    options: []\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            }\r\n        }\r\n    };\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.dispatch(getDepartments());\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n\r\n        console.log(nextProps);\r\n        let tempFormData = this.state.formData;\r\n        let departmentOptions = [];\r\n        if(nextProps.departments.departmentsList) {\r\n            nextProps.departments.departmentsList.departmentsData.map((department) => {\r\n                departmentOptions.push({\r\n                    id: department.departmentId,\r\n                    name: department.departmentName\r\n                });\r\n            });\r\n            tempFormData.departmentId.config.options = departmentOptions;\r\n\r\n            this.setState({\r\n                formData: tempFormData\r\n            });\r\n        }\r\n\r\n        if(nextProps.professors.professor) {\r\n            if(nextProps.professors.professor.message) {\r\n                this.setState({\r\n                    error: nextProps.professors.professor.message\r\n                });\r\n            }else {\r\n                this.setState({\r\n                    loading: true\r\n                });\r\n                this.props.dispatch(clearProfessor());\r\n                this.props.history.push(\"/professors-list\");\r\n            }\r\n        }\r\n    }\r\n\r\n    updateForm = (formResponse) => {\r\n        let newFormData = {...this.state.formData}\r\n        let newElement = {...newFormData[formResponse.id]};\r\n\r\n        newElement.value = formResponse.event.target.value;\r\n\r\n        if(formResponse.isBlurred){\r\n            let isValid = this.validateData(newElement);\r\n            newElement.isValid = isValid[0];\r\n            newElement.validationMessage = isValid[1];\r\n            newElement.isBlurred = formResponse.isBlurred;\r\n        }\r\n\r\n        newFormData[formResponse.id] = newElement;\r\n        this.setState({\r\n            formData: newFormData\r\n        });\r\n    }\r\n\r\n    validateData = (data) => {\r\n\r\n        let error = [true, \"\"];\r\n\r\n        if(data.validation.required) {\r\n            const isValid = data.value.trim() !== \"\" ? true : false;\r\n            const message = `${!isValid ? \"This field is required !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.email) {\r\n            const isValid = /\\S+@\\S+\\.\\S+/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid email address !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.minLength) {\r\n            const isValid = data.value.length >= data.validation.minLength ? true : false;\r\n            const message = `${!isValid ? `This field must be at least ${data.validation.minLength} characters long !` : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.date) {\r\n            const isValid = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid date in DD/MM/YYYY format !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    renderSubmitButton = () => {\r\n        return (\r\n            this.state.loading \r\n            ? \r\n            <div className=\"loading\">\r\n                Loading...\r\n            </div>\r\n            :\r\n            <div>\r\n                <button onClick={(event) => this.submitHandle(event)}>Add professor</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    submitHandle = (event) => {\r\n        event.preventDefault();\r\n        let dataToSubmit = {};\r\n        let isFormValid = true;\r\n\r\n        for(let key in this.state.formData) {\r\n            dataToSubmit[key] = this.state.formData[key].value;\r\n        }\r\n\r\n        for(let key in this.state.formData) {\r\n            isFormValid = isFormValid && this.state.formData[key].isValid && this.state.formData[key].value != \"\" ? true : false;\r\n        }\r\n\r\n        if(isFormValid) {\r\n            document.body.click();\r\n            this.setState({\r\n                error: \"\",\r\n                loading: true\r\n            });\r\n            this.props.dispatch(addProfessor(dataToSubmit));\r\n        }else {\r\n            this.setState({\r\n                error: \"Something must have happened...\"\r\n            });\r\n        }\r\n    }\r\n    \r\n    renderError = () => {\r\n        return (\r\n            this.state.error !== \"\"\r\n            ?\r\n            <div className=\"error\">\r\n                {this.state.error}\r\n            </div>\r\n            :\r\n            \"\"\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if(!this.state.loading) {\r\n            return (\r\n                <div className=\"add_container\">\r\n                    <form>\r\n    \r\n                        <h2>Add professor</h2>\r\n    \r\n                        <FormField\r\n                            id={\"professorFirstName\"}\r\n                            formData={this.state.formData.professorFirstName}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n                        <FormField\r\n                            id={\"professorLastName\"}\r\n                            formData={this.state.formData.professorLastName}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"professorEmail\"}\r\n                            formData={this.state.formData.professorEmail}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"professorDob\"}\r\n                            formData={this.state.formData.professorDob}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"professorAddress\"}\r\n                            formData={this.state.formData.professorAddress}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"professorPhone\"}\r\n                            formData={this.state.formData.professorPhone}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>             \r\n                            \r\n                        <FormField\r\n                            id={\"professorSalary\"}\r\n                            formData={this.state.formData.professorSalary}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n                        \r\n                        <FormField\r\n                            id={\"departmentId\"}\r\n                            formData={this.state.formData.departmentId}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n    \r\n                        {this.renderSubmitButton()}\r\n                        {this.renderError()}\r\n    \r\n                    </form>\r\n                </div>\r\n            );\r\n        }else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        professors: state.professors,\r\n        departments: state.departments,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddProfessor);","import {Component} from \"react\";\r\nimport {getFaculties} from \"../actions/facultyActions\";\r\nimport {getStudyYears} from \"../actions/studyYearActions\";\r\nimport {addStudyGroup, getLastStudyGroupId, clearLastStudyGroupId, clearStudyGroup} from \"../actions/studyGroupActions\";\r\nimport FormField from \"../components/FormField\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass AddStudyGroup extends Component {\r\n\r\n    state = {\r\n        error: \"\",\r\n        loading: false,\r\n        formData: {\r\n            studyGroupId: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"studyGroupId\",\r\n                    label: \"Study group no.: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Study group number...\"\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            studyGroupDescription: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"studyGroupDescription\",\r\n                    label: \"Description: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Study group description...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            facultyId: {\r\n                element: \"select\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"facultyId\",\r\n                    label: \"Faculty: \",\r\n                    options: []\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            studyYearId: {\r\n                element: \"select\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"studyYearId\",\r\n                    label: \"Study year: \",\r\n                    options: []\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            }\r\n        }\r\n    };\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.dispatch(clearStudyGroup());\r\n        this.props.dispatch(getLastStudyGroupId());\r\n        this.props.dispatch(getFaculties());\r\n        this.props.dispatch(getStudyYears());\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n\r\n        console.log(nextProps);\r\n        let tempFormData = this.state.formData;\r\n        let facultyOptions = [];\r\n        let studyYearOptions = [];\r\n        if(nextProps.studyGroups.lastStudyGroupId != null) {\r\n            if(nextProps.faculties.facultiesList) {\r\n                if(nextProps.studyYears.studyYearsList) {\r\n                    nextProps.faculties.facultiesList.map(faculty => {\r\n                        facultyOptions.push({\r\n                            id: faculty.facultyId,\r\n                            name: faculty.facultyName\r\n                        });\r\n                    });\r\n                    nextProps.studyYears.studyYearsList.map(studyYear => {\r\n                        studyYearOptions.push({\r\n                            id: studyYear.studyYearId,\r\n                            name: studyYear.studyYearOrder\r\n                        });\r\n                    });\r\n\r\n                    tempFormData.facultyId.config.options = facultyOptions;\r\n                    tempFormData.studyYearId.config.options = studyYearOptions;\r\n\r\n                    tempFormData.studyGroupId.value = nextProps.studyGroups.lastStudyGroupId + 1;\r\n                    tempFormData.studyGroupId.valid = true;\r\n                    tempFormData.studyGroupId.isBlurred = true;\r\n                    \r\n                    this.setState({\r\n                        formData: tempFormData\r\n                    });\r\n\r\n                    \r\n                }\r\n            }\r\n        }\r\n\r\n        if(nextProps.studyGroups.studyGroup) {\r\n            if(nextProps.studyGroups.studyGroup.message) {\r\n                this.setState({\r\n                    error: nextProps.studyGroups.studyGroup.message\r\n                });\r\n            }else {\r\n                this.setState({\r\n                    loading: true\r\n                });\r\n                this.props.dispatch(clearLastStudyGroupId());\r\n                this.props.dispatch(clearStudyGroup());\r\n                this.props.history.push(\"/studygroups-list\");\r\n            }\r\n        }\r\n    }\r\n\r\n    updateForm = (formResponse) => {\r\n        let newFormData = {...this.state.formData}\r\n        let newElement = {...newFormData[formResponse.id]};\r\n\r\n        newElement.value = formResponse.event.target.value;\r\n\r\n        if(formResponse.isBlurred){\r\n            let isValid = this.validateData(newElement);\r\n            newElement.isValid = isValid[0];\r\n            newElement.validationMessage = isValid[1];\r\n            newElement.isBlurred = formResponse.isBlurred;\r\n        }\r\n\r\n        newFormData[formResponse.id] = newElement;\r\n        this.setState({\r\n            formData: newFormData\r\n        });\r\n    }\r\n\r\n    validateData = (data) => {\r\n\r\n        let error = [true, \"\"];\r\n\r\n        if(data.validation.required) {\r\n            const isValid = data.value.trim() !== \"\" ? true : false;\r\n            const message = `${!isValid ? \"This field is required !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.email) {\r\n            const isValid = /\\S+@\\S+\\.\\S+/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid email address !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.minLength) {\r\n            const isValid = data.value.length >= data.validation.minLength ? true : false;\r\n            const message = `${!isValid ? `This field must be at least ${data.validation.minLength} characters long !` : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.date) {\r\n            const isValid = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid date in DD/MM/YYYY format !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    renderSubmitButton = () => {\r\n        return (\r\n            this.state.loading \r\n            ? \r\n            <div className=\"loading\">\r\n                Loading...\r\n            </div>\r\n            :\r\n            <div>\r\n                <button onClick={(event) => this.submitHandle(event)}>Add study group</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    submitHandle = (event) => {\r\n        event.preventDefault();\r\n        let dataToSubmit = {};\r\n        let isFormValid = true;\r\n\r\n        for(let key in this.state.formData) {\r\n            dataToSubmit[key] = this.state.formData[key].value;\r\n        }\r\n\r\n        for(let key in this.state.formData) {\r\n            if(key == \"studyGroupId\") {\r\n                isFormValid = true\r\n            } else {\r\n                isFormValid = isFormValid && this.state.formData[key].isValid ? true : false;\r\n            }\r\n        }\r\n\r\n        if(isFormValid) {\r\n            document.body.click();\r\n            this.setState({\r\n                error: \"\",\r\n                loading: true\r\n            });\r\n            this.props.dispatch(addStudyGroup(dataToSubmit));\r\n        }else {\r\n            this.setState({\r\n                error: \"Something must have happened...\"\r\n            });\r\n        }\r\n    }\r\n    \r\n    renderError = () => {\r\n        return (\r\n            this.state.error !== \"\"\r\n            ?\r\n            <div className=\"error\">\r\n                {this.state.error}\r\n            </div>\r\n            :\r\n            \"\"\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if(!this.state.loading) {\r\n            return (\r\n                <div className=\"add_container\">\r\n                    <form>\r\n    \r\n                        <h2>Add study group</h2>\r\n    \r\n                        <FormField\r\n                            id={\"studyGroupId\"}\r\n                            formData={this.state.formData.studyGroupId}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"studyGroupDescription\"}\r\n                            formData={this.state.formData.studyGroupDescription}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"facultyId\"}\r\n                            formData={this.state.formData.facultyId}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"studyYearId\"}\r\n                            formData={this.state.formData.studyYearId}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n    \r\n                        {this.renderSubmitButton()}\r\n                        {this.renderError()}\r\n    \r\n                    </form>\r\n                </div>\r\n            );\r\n        }else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        studyGroups: state.studyGroups,\r\n        faculties: state.faculties,\r\n        studyYears: state.studyYears\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddStudyGroup);","import {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {addCourse, clearCourse} from \"../actions/coursesActions\";\r\nimport {getProfessors, clearProfessors} from \"../actions/professorActions\";\r\nimport {getStudyGroups, clearStudyGroups} from \"../actions/studyGroupActions\";\r\nimport {getSubjects, clearSubjects} from \"../actions/subjectActions\";\r\nimport FormField from \"../components/FormField\";\r\n\r\nclass AddCourse extends Component {\r\n\r\n    state = {\r\n        error: \"\",\r\n        loading: false,\r\n        formData: {\r\n            courseName: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"course_name\",\r\n                    label: \"Course name: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Course name...\"\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            courseTime: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"course_time\",\r\n                    label: \"Course time: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Day of the week, HH:MM...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            courseDescription: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"course_description\",\r\n                    label: \"Description: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Course description...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 8\r\n                },\r\n                valid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            studyGroupId: {\r\n                element: \"select\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"study_group_id\",\r\n                    label: \"Study group: \",\r\n                    options: []\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            subjectId: {\r\n                element: \"select\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"subject_id\",\r\n                    label: \"Subject: \",\r\n                    options: []\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            professorId: {\r\n                element: \"select\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"professor_id\",\r\n                    label: \"Professor: \",\r\n                    options: []\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            }\r\n        }\r\n    };\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.dispatch(clearCourse());\r\n        this.props.dispatch(clearStudyGroups());\r\n        this.props.dispatch(clearSubjects());\r\n        this.props.dispatch(clearProfessors());\r\n\r\n        this.props.dispatch(getStudyGroups());\r\n        this.props.dispatch(getSubjects());\r\n        this.props.dispatch(getProfessors());\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n\r\n        console.log(nextProps);\r\n        let tempFormData = this.state.formData;\r\n        let studyGroupOptions = [];\r\n        let subjectOptions = [];\r\n        let professorOptions = [];\r\n        if(nextProps.studyGroups.studyGroupsList) {\r\n            if(nextProps.subjects.subjectsList) {\r\n                if(nextProps.professors.professorsList) {\r\n\r\n                    nextProps.studyGroups.studyGroupsList.studyGroupsData.map((studyGroup) => {\r\n                        studyGroupOptions.push({\r\n                            id: studyGroup.studyGroupId,\r\n                            name: studyGroup.studyGroupId\r\n                        });\r\n                    });\r\n                    nextProps.subjects.subjectsList.subjectsData.map((subject) => {\r\n                        subjectOptions.push({\r\n                            id: subject.subjectId,\r\n                            name: subject.subjectName\r\n                        });\r\n                    });\r\n                    nextProps.professors.professorsList.professorsData.map((professor) => {\r\n                        professorOptions.push({\r\n                            id: professor.professorId,\r\n                            name: `${professor.professorFirstName} ${professor.professorLastName}`\r\n                        });\r\n                    });\r\n\r\n                    tempFormData.studyGroupId.config.options = studyGroupOptions;\r\n                    tempFormData.subjectId.config.options = subjectOptions;\r\n                    tempFormData.professorId.config.options = professorOptions;\r\n        \r\n                    this.setState({\r\n                        formData: tempFormData\r\n                    });\r\n                }\r\n            }  \r\n        }\r\n\r\n        if(nextProps.courses.course) {\r\n            if(nextProps.courses.course.message) {\r\n                this.setState({\r\n                    error: nextProps.courses.course.message\r\n                });\r\n            }else {\r\n                this.setState({\r\n                    loading: true\r\n                });\r\n                this.props.dispatch(clearCourse());\r\n                this.props.history.push(\"/courses-list\");\r\n            }\r\n        }\r\n    }\r\n\r\n    updateForm = (formResponse) => {\r\n        let newFormData = {...this.state.formData}\r\n        let newElement = {...newFormData[formResponse.id]};\r\n\r\n        newElement.value = formResponse.event.target.value;\r\n\r\n        if(formResponse.isBlurred){\r\n            let isValid = this.validateData(newElement);\r\n            newElement.isValid = isValid[0];\r\n            newElement.validationMessage = isValid[1];\r\n            newElement.isBlurred = formResponse.isBlurred;\r\n        }\r\n\r\n        newFormData[formResponse.id] = newElement;\r\n        this.setState({\r\n            formData: newFormData\r\n        });\r\n    }\r\n\r\n    validateData = (data) => {\r\n\r\n        let error = [true, \"\"];\r\n\r\n        if(data.validation.required) {\r\n            const isValid = data.value.trim() !== \"\" ? true : false;\r\n            const message = `${!isValid ? \"This field is required !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.email) {\r\n            const isValid = /\\S+@\\S+\\.\\S+/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid email address !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.minLength) {\r\n            const isValid = data.value.length >= data.validation.minLength ? true : false;\r\n            const message = `${!isValid ? `This field must be at least ${data.validation.minLength} characters long !` : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.date) {\r\n            const isValid = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid date in DD/MM/YYYY format !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    renderSubmitButton = () => {\r\n        return (\r\n            this.state.loading \r\n            ? \r\n            <div className=\"loading\">\r\n                Loading...\r\n            </div>\r\n            :\r\n            <div>\r\n                <button onClick={(event) => this.submitHandle(event)}>Add course</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    submitHandle = (event) => {\r\n        event.preventDefault();\r\n        let dataToSubmit = {};\r\n        let isFormValid = true;\r\n\r\n        for(let key in this.state.formData) {\r\n            dataToSubmit[key] = this.state.formData[key].value;\r\n        }\r\n\r\n        for(let key in this.state.formData) {\r\n            isFormValid = isFormValid && this.state.formData[key].isValid ? true : false;\r\n        }\r\n\r\n        if(isFormValid) {\r\n            document.body.click();\r\n            this.setState({\r\n                error: \"\",\r\n                loading: true\r\n            });\r\n            this.props.dispatch(addCourse(dataToSubmit));\r\n        }else {\r\n            this.setState({\r\n                error: \"Something must have happened...\"\r\n            });\r\n        }\r\n    }\r\n    \r\n    renderError = () => {\r\n        return (\r\n            this.state.error !== \"\"\r\n            ?\r\n            <div className=\"error\">\r\n                {this.state.error}\r\n            </div>\r\n            :\r\n            \"\"\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if(!this.state.loading) {\r\n            return (\r\n                <div className=\"add_container\">\r\n                    \r\n                    <form>\r\n    \r\n                        <h2>Add course</h2>\r\n    \r\n                        <FormField\r\n                            id={\"courseName\"}\r\n                            formData={this.state.formData.courseName}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n                        <FormField\r\n                            id={\"courseTime\"}\r\n                            formData={this.state.formData.courseTime}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"courseDescription\"}\r\n                            formData={this.state.formData.courseDescription}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"studyGroupId\"}\r\n                            formData={this.state.formData.studyGroupId}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"subjectId\"}\r\n                            formData={this.state.formData.subjectId}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"professorId\"}\r\n                            formData={this.state.formData.professorId}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>             \r\n                                \r\n                        {this.renderSubmitButton()}\r\n                        {this.renderError()}\r\n    \r\n                    </form>\r\n                </div>\r\n            );\r\n        }else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        courses: state.courses,\r\n        studyGroups: state.studyGroups,\r\n        subjects: state.subjects,\r\n        professors: state.professors\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddCourse);","import React, {Component} from \"react\";\r\nimport {firebase} from \"../Firebase\";\r\nimport FileUploader from \"react-firebase-file-uploader\";\r\n\r\n\r\nclass Uploader extends Component {\r\n    state = {\r\n        fileName: \"\",\r\n        isUploading: false,\r\n        progress: 0,\r\n        fileUrl: \"\"\r\n    };\r\n\r\n    uploadStartHandle = () => {\r\n        this.setState({\r\n            isUploading: true,\r\n            progress: 0\r\n        })\r\n    }\r\n\r\n    uploadErrorHandle = (error) => {\r\n        this.setState({\r\n            isUploading: false,\r\n        });\r\n        console.log(error);\r\n    }\r\n\r\n    uploadSuccessHandle = (fileName) => {\r\n        console.log(fileName);\r\n        this.setState({\r\n            fileName: fileName,\r\n            progress: 100,\r\n            isUploading: false\r\n        });\r\n        firebase.storage().ref(`${this.props.referencedStoragePath}`)\r\n        .child(fileName).getDownloadURL()\r\n        .then((url) => {\r\n            this.setState({\r\n                fileUrl: url\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n        \r\n        this.props.storeFileName(fileName);\r\n\r\n    }\r\n\r\n    progressHandle = (progress) => {\r\n        this.setState({\r\n            progress: progress\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <FileUploader\r\n                    accept={`${this.props.acceptedFormat}`}\r\n                    name={`${this.props.name}`}\r\n                    randomizeFilename\r\n                    storageRef={firebase.storage().ref(`${this.props.referencedStoragePath}`)}\r\n                    onUploadStart={this.uploadStartHandle}\r\n                    onUploadError={this.uploadErrorHandle}\r\n                    onUploadSuccess={this.uploadSuccessHandle}\r\n                    onProgress={this.progressHandle}/>\r\n                {this.state.isUploading \r\n                ? \r\n                <p>Progress: {this.state.progress}%</p> \r\n                : \r\n                null}\r\n                {this.state.fileUrl !== \"\"\r\n                ? \r\n                <img src={this.state.fileUrl}/> \r\n                : \r\n                null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Uploader;","import React, {Component} from \"react\";\r\nimport FormField from \"../components/FormField\";\r\nimport {Editor} from \"react-draft-wysiwyg\";\r\nimport {EditorState} from \"draft-js\";\r\nimport {stateToHTML} from \"draft-js-export-html\";\r\nimport Uploader from \"../components/Uploader\";\r\nimport {addNews, clearNews} from \"../actions/newsActions\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nclass AddNews extends Component {\r\n\r\n    state = {\r\n        editorState: EditorState.createEmpty(),\r\n        error: \"\",\r\n        loaded: true,\r\n        formData: {\r\n            newsAuthorName: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    label: \"Author name:\",\r\n                    name: \"newsAuthorName\",\r\n                    type: \"text\",\r\n                    placeholder: \"Enter your name...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            newsTitle: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    label: \"News title:\",\r\n                    name: \"title_input\",\r\n                    type: \"text\",\r\n                    placeholder: \"Enter the title...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            newsText: {\r\n                element: \"text-editor\",\r\n                value: \"\",\r\n                validation : {\r\n                    required: true\r\n                },\r\n                isValid: false\r\n            },\r\n            newsPicturePath: {\r\n                element: \"file-uploader\",\r\n                value: \"\",\r\n                validation : {\r\n                    required: true\r\n                },\r\n                isValid: false   \r\n            }\r\n        }\r\n    };\r\n\r\n    componentWillMount() {\r\n        this.props.dispatch(clearNews());\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.news.news) {\r\n            if(nextProps.news.news.message) {\r\n                this.setState({\r\n                    error: nextProps.news.news.message,\r\n                    loaded: true\r\n                });\r\n            } else {\r\n                this.props.history.push(\"/news-list\");\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    updateForm = (formResponse, content = \"\") => {\r\n        let newFormData = {...this.state.formData}\r\n        let newElement = {...newFormData[formResponse.id]};\r\n\r\n        if(content === \"\"){\r\n            newElement.value = formResponse.event.target.value;\r\n        }else {\r\n            newElement.value = content;\r\n        }\r\n\r\n        if(formResponse.isBlurred || !formResponse.isBlurred){\r\n            let isValid = this.validateData(newElement);\r\n            newElement.isValid = isValid[0];\r\n            newElement.validationMessage = isValid[1];\r\n            newElement.isBlurred = formResponse.isBlurred;\r\n        }\r\n\r\n        newFormData[formResponse.id] = newElement;\r\n        this.setState({\r\n            formData: newFormData\r\n        });\r\n    }\r\n\r\n    validateData = (data) => {\r\n        let error = [true, \"\"];\r\n\r\n        if(data.validation.required) {\r\n            const isValid = data.value.trim() !== \"\" ? true : false;\r\n            const message = `${!isValid ? \"This field is required !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    submitHandle = (event) => {\r\n        event.preventDefault();\r\n\r\n        let dataToSubmit = {};\r\n        let isFormValid = true;\r\n\r\n        for(let key in this.state.formData) {\r\n            dataToSubmit[key] = this.state.formData[key].value;\r\n        }\r\n\r\n        for(let key in this.state.formData) {\r\n            isFormValid = this.state.formData[key].isValid && isFormValid ? true : false;\r\n        }\r\n\r\n        if(isFormValid) {\r\n            this.setState({\r\n                loaded: false,\r\n                error: \"\"\r\n            });\r\n            this.props.dispatch(addNews(dataToSubmit));\r\n        }else {\r\n            console.log(\"There was an error !\");\r\n            this.setState({\r\n                error: \"Something went wrong !\"\r\n            });\r\n        }\r\n    }\r\n\r\n    renderSubmitButton = () => {\r\n        return (\r\n            this.state.isLoading \r\n            ? \r\n            <div>\r\n                Loading...\r\n            </div>\r\n            :\r\n            <div>\r\n                <button type=\"submit\">Add news</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderError = () => {\r\n        return (\r\n            this.state.error !== \"\" \r\n            ?\r\n            <div className=\"error\">\r\n                {this.state.error}\r\n            </div>\r\n            :\r\n            \"\"\r\n        );\r\n    }\r\n\r\n    editorStateHandle = (editorState) => {\r\n\r\n        let contentState = editorState.getCurrentContent();\r\n\r\n        let html = stateToHTML(contentState);\r\n\r\n        this.updateForm({id: \"newsText\"}, html);\r\n\r\n        this.setState({\r\n            editorState: editorState\r\n        });\r\n    }\r\n\r\n\r\n    storeFileName = (fileName) => {\r\n        this.updateForm({id: \"newsPicturePath\"}, fileName);\r\n    }\r\n\r\n    render() {\r\n\r\n        if(this.state.loaded) {\r\n            return (\r\n                <div className=\"add_news_container\">\r\n                    <form onSubmit={this.submitHandle}>\r\n                        <h2>Add news</h2>\r\n        \r\n                        <FormField\r\n                            id={\"newsAuthorName\"}\r\n                            formData={this.state.formData.newsAuthorName}\r\n                            changeHandle={(newFormData) => this.updateForm(newFormData)}/>\r\n        \r\n                        <FormField\r\n                            id={\"newsTitle\"}\r\n                            formData={this.state.formData.newsTitle}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n                        <Editor\r\n                            editorState={this.state.editorState}\r\n                            wrapperClassName=\"editor_wrapper\"\r\n                            editorClassName=\"editor\"\r\n                            onEditorStateChange={(editorState) => {this.editorStateHandle(editorState)}}/>\r\n                \r\n                        <Uploader name=\"image\" acceptedFormat=\"image/*\" referencedStoragePath=\"pictures\" storeFileName={(fileName) => this.storeFileName(fileName)}/>\r\n        \r\n                        {this.renderSubmitButton()}\r\n                        {this.renderError()}\r\n                    </form>\r\n                    \r\n                </div>\r\n            );\r\n        }else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n\r\n        \r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        news: state.news\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddNews);\r\n\r\n","import {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {addExam, clearExam} from \"../actions/examActions\";\r\nimport {getCourses, clearCoursesList} from \"../actions/coursesActions\";\r\nimport FormField from \"../components/FormField\";\r\n\r\nclass AddExam extends Component {\r\n\r\n    state = {\r\n        error: \"\",\r\n        loading: false,\r\n        courses: [],\r\n        formData: {\r\n            courseId: {\r\n                element: \"select\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"course_id\",\r\n                    label: \"Course: \",\r\n                    options: []\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            examDescription: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"exam_description\",\r\n                    label: \"Exam description: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Exam description...\"\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            examDate: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"exam_date\",\r\n                    label: \"Exam date: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Exam date, DD/MM/YYYY...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    date: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            examIsOnline: {\r\n                element: \"select\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"exam_is_online\",\r\n                    label: \"Exam type: \",\r\n                    options: [\r\n                        {\r\n                            id: 0,\r\n                            name: \"physical\"\r\n                        },\r\n                        {\r\n                            id: 1,\r\n                            name: \"online\"\r\n                        }\r\n                    ]\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n        }\r\n    };\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.dispatch(clearExam());\r\n        this.props.dispatch(clearCoursesList());\r\n        this.props.dispatch(getCourses());\r\n\r\n        let tempFormData = this.state.formData;\r\n        tempFormData.courseId.config.disabled = this.props.users.login.user.userRole == \"professor\" ?  true : null;\r\n\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n\r\n        console.log(nextProps);\r\n        let tempFormData = this.state.formData;\r\n        let courseOptions = [];\r\n\r\n        if(nextProps.courses.coursesList) {\r\n            \r\n\r\n            nextProps.courses.coursesList.coursesData.map((course) => {\r\n                courseOptions.push({\r\n                    id: course.courseId,\r\n                    name: `${course.courseName} with ${course.Professor.professorFirstName} ${course.Professor.professorLastName} - group no. ${course.studyGroupId}`\r\n                });\r\n            });\r\n\r\n\r\n            tempFormData.courseId.config.options = courseOptions;\r\n            \r\n            if(this.props.match.params.courseId) {\r\n                tempFormData.courseId.defaultValue = this.props.match.params.courseId;\r\n                tempFormData.courseId.value = this.props.match.params.courseId;\r\n                tempFormData.courseId.isValid = true;\r\n\r\n            }\r\n\r\n\r\n            this.setState({\r\n                courses: nextProps.courses.coursesList.coursesData,\r\n                formData: tempFormData\r\n            });\r\n        \r\n        }\r\n\r\n        if(nextProps.exams.exam) {\r\n            if(nextProps.exams.exam.message) {\r\n                this.setState({\r\n                    loading: false,\r\n                    error: nextProps.exams.exam.message\r\n                });\r\n            }else {\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n                if(this.props.match.params.courseId) {\r\n                    this.props.history.push(`/course/${this.props.match.params.courseId}`);\r\n                }else {\r\n                    this.props.history.push(\"/exams-list\");\r\n                }\r\n                this.props.dispatch(clearExam());\r\n            }\r\n        }\r\n    }\r\n\r\n    updateForm = (formResponse) => {\r\n        let newFormData = {...this.state.formData}\r\n        let newElement = {...newFormData[formResponse.id]};\r\n\r\n        newElement.value = formResponse.event.target.value;\r\n\r\n        if(formResponse.isBlurred){\r\n            let isValid = this.validateData(newElement);\r\n            newElement.isValid = isValid[0];\r\n            newElement.validationMessage = isValid[1];\r\n            newElement.isBlurred = formResponse.isBlurred;\r\n        }\r\n\r\n        newFormData[formResponse.id] = newElement;\r\n        this.setState({\r\n            formData: newFormData\r\n        });\r\n    }\r\n\r\n    validateData = (data) => {\r\n\r\n        let error = [true, \"\"];\r\n\r\n        if(data.validation.required) {\r\n            const isValid = data.value.trim() !== \"\" ? true : false;\r\n            const message = `${!isValid ? \"This field is required !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.email) {\r\n            const isValid = /\\S+@\\S+\\.\\S+/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid email address !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.minLength) {\r\n            const isValid = data.value.length >= data.validation.minLength ? true : false;\r\n            const message = `${!isValid ? `This field must be at least ${data.validation.minLength} characters long !` : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.date) {\r\n            const isValid = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid date in DD/MM/YYYY format !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    renderSubmitButton = () => {\r\n        return (\r\n            this.state.loading \r\n            ? \r\n            <div className=\"loading\">\r\n                Loading...\r\n            </div>\r\n            :\r\n            <div>\r\n                <button onClick={(event) => this.submitHandle(event)}>Add exam</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    submitHandle = (event) => {\r\n        event.preventDefault();\r\n        let dataToSubmit = {};\r\n        let isFormValid = true;\r\n\r\n        for(let key in this.state.formData) {\r\n            dataToSubmit[key] = this.state.formData[key].value;\r\n        }\r\n\r\n        for(let key in this.state.formData) {\r\n            isFormValid = isFormValid && this.state.formData[key].isValid ? true : false;\r\n        }\r\n\r\n        if(isFormValid) {\r\n            document.body.click();\r\n\r\n            console.log(dataToSubmit);\r\n            if(this.props.users.login.user.userRole == \"admin\") {\r\n                this.props.dispatch(addExam(dataToSubmit));\r\n                this.setState({\r\n                    error: \"\",\r\n                    loading: true\r\n                });\r\n            } else {\r\n                if(this.props.users.login.user.userRole == \"professor\") {\r\n                    let course = this.state.courses.find(course => course.courseId == dataToSubmit.courseId)\r\n                    if(course.Professor.professorEmail == this.props.users.login.user.userEmail) {\r\n                        this.props.dispatch(addExam(dataToSubmit));\r\n                        this.setState({\r\n                            error: \"\",\r\n                            loading: true\r\n                        });\r\n                    } else {\r\n                        this.setState({\r\n                            error: \"You do not have permission\",\r\n                        });\r\n                    }\r\n                }else {\r\n                    this.setState({\r\n                        error: \"You do not have permission\"\r\n                    })\r\n                }\r\n            }\r\n\r\n        }else {\r\n            this.setState({\r\n                error: \"Something must have happened...\"\r\n            });\r\n        }\r\n    }\r\n    \r\n    renderError = () => {\r\n        return (\r\n            this.state.error !== \"\"\r\n            ?\r\n            <div className=\"error\">\r\n                {this.state.error}\r\n            </div>\r\n            :\r\n            \"\"\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if(!this.state.loading) {\r\n            return (\r\n                <div className=\"add_container\">\r\n                    \r\n                    <form>\r\n    \r\n                        <h2>Add exam</h2>\r\n    \r\n                        <FormField\r\n                            id={\"courseId\"}\r\n                            formData={this.state.formData.courseId}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n                        <FormField\r\n                            id={\"examDescription\"}\r\n                            formData={this.state.formData.examDescription}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"examDate\"}\r\n                            formData={this.state.formData.examDate}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"examIsOnline\"}\r\n                            formData={this.state.formData.examIsOnline}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                                \r\n                        {this.renderSubmitButton()}\r\n                        {this.renderError()}\r\n    \r\n                    </form>\r\n                </div>\r\n            );\r\n        }else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        courses: state.courses,\r\n        exams: state.exams\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddExam);","import {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {addSubject, clearSubject} from \"../actions/subjectActions\";\r\nimport FormField from \"../components/FormField\";\r\n\r\nclass AddSubject extends Component {\r\n\r\n    state = {\r\n        error: \"\",\r\n        loading: false,\r\n        formData: {\r\n            subjectName: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"subject_name\",\r\n                    label: \"Subject name: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Subject name...\"\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            subjectTheoryMarks: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"subject_theory_marks\",\r\n                    label: \"Theory marks: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Theory marks...\"\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            subjectPracticalMarks: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"subject_practical_marks\",\r\n                    label: \"Practical marks: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Practical marks...\"\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            subjectCreditScore: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"subject_credit_score\",\r\n                    label: \"Credit score: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Credit score...\"\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            subjectDescription: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"subject_description\",\r\n                    label: \"Subject description: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Subject description...\"\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            subjectIsOptional: {\r\n                element: \"select\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"subject_is_optional\",\r\n                    label: \"Subject type: \",\r\n                    options: [\r\n                        {\r\n                            id: 0,\r\n                            name: \"Optional\"\r\n                        },\r\n                        {\r\n                            id: 1,\r\n                            name: \"Mandatory\"\r\n                        }\r\n                    ]\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n        }\r\n    };\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.dispatch(clearSubject());\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n\r\n        if(nextProps.subjects.subject) {\r\n            if(nextProps.subjects.subject.message) {\r\n                this.setState({\r\n                    loading: false,\r\n                    error: nextProps.subjects.subject.message\r\n                });\r\n            }else {\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n                this.props.history.push(\"/subjects-list\");\r\n                this.props.dispatch(clearSubject());\r\n            }\r\n        }\r\n    }\r\n\r\n    updateForm = (formResponse) => {\r\n        let newFormData = {...this.state.formData}\r\n        let newElement = {...newFormData[formResponse.id]};\r\n\r\n        newElement.value = formResponse.event.target.value;\r\n\r\n        if(formResponse.isBlurred){\r\n            let isValid = this.validateData(newElement);\r\n            newElement.isValid = isValid[0];\r\n            newElement.validationMessage = isValid[1];\r\n            newElement.isBlurred = formResponse.isBlurred;\r\n        }\r\n\r\n        newFormData[formResponse.id] = newElement;\r\n        this.setState({\r\n            formData: newFormData\r\n        });\r\n    }\r\n\r\n    validateData = (data) => {\r\n\r\n        let error = [true, \"\"];\r\n\r\n        if(data.validation.required) {\r\n            const isValid = data.value.trim() !== \"\" ? true : false;\r\n            const message = `${!isValid ? \"This field is required !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.email) {\r\n            const isValid = /\\S+@\\S+\\.\\S+/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid email address !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.minLength) {\r\n            const isValid = data.value.length >= data.validation.minLength ? true : false;\r\n            const message = `${!isValid ? `This field must be at least ${data.validation.minLength} characters long !` : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.date) {\r\n            const isValid = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid date in DD/MM/YYYY format !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    renderSubmitButton = () => {\r\n        return (\r\n            this.state.loading \r\n            ? \r\n            <div className=\"loading\">\r\n                Loading...\r\n            </div>\r\n            :\r\n            <div>\r\n                <button onClick={(event) => this.submitHandle(event)}>Add subject</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    submitHandle = (event) => {\r\n        event.preventDefault();\r\n        let dataToSubmit = {};\r\n        let isFormValid = true;\r\n\r\n        for(let key in this.state.formData) {\r\n            dataToSubmit[key] = this.state.formData[key].value;\r\n        }\r\n\r\n        for(let key in this.state.formData) {\r\n            isFormValid = isFormValid && this.state.formData[key].isValid ? true : false;\r\n        }\r\n\r\n        if(parseInt(dataToSubmit.subjectTheoryMarks) + parseInt(dataToSubmit.subjectPracticalMarks) != 100) {\r\n            isFormValid = false;\r\n            this.setState({\r\n                error: \"The sum of the theory marks and practical marks must equal 100\"\r\n            });\r\n        } else {\r\n            if(isFormValid) {\r\n                document.body.click();\r\n    \r\n                console.log(dataToSubmit);\r\n                this.props.dispatch(addSubject(dataToSubmit));\r\n                this.setState({\r\n                    error: \"\",\r\n                    loading: true\r\n                });\r\n            }else {\r\n                this.setState({\r\n                    error: \"Something must have happened...\"\r\n                });\r\n            }\r\n        }\r\n    }\r\n    \r\n    renderError = () => {\r\n        return (\r\n            this.state.error !== \"\"\r\n            ?\r\n            <div className=\"error\">\r\n                {this.state.error}\r\n            </div>\r\n            :\r\n            \"\"\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if(!this.state.loading) {\r\n            return (\r\n                <div className=\"add_container\">\r\n                    \r\n                    <form>\r\n    \r\n                        <h2>Add subject</h2>\r\n    \r\n                        <FormField\r\n                            id={\"subjectName\"}\r\n                            formData={this.state.formData.subjectName}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n                        \r\n                        <FormField\r\n                            id={\"subjectDescription\"}\r\n                            formData={this.state.formData.subjectDescription}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"subjectTheoryMarks\"}\r\n                            formData={this.state.formData.subjectTheoryMarks}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"subjectPracticalMarks\"}\r\n                            formData={this.state.formData.subjectPracticalMarks}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n                        \r\n                        <FormField\r\n                            id={\"subjectCreditScore\"}\r\n                            formData={this.state.formData.subjectCreditScore}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"subjectIsOptional\"}\r\n                            formData={this.state.formData.subjectIsOptional}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                                \r\n                        {this.renderSubmitButton()}\r\n                        {this.renderError()}\r\n    \r\n                    </form>\r\n                </div>\r\n            );\r\n        }else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        subjects: state.subjects\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddSubject);","import {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getFaculties, clearFaculties} from \"../actions/facultyActions\";\r\nimport {addDepartment, clearDepartment} from \"../actions/departmentActions\";\r\nimport FormField from \"../components/FormField\";\r\n\r\nclass AddDepartment extends Component {\r\n\r\n    state = {\r\n        error: \"\",\r\n        loading: false,\r\n        formData: {\r\n            departmentName: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"department_name\",\r\n                    label: \"Department name: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Department name...\"\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            departmentDescription: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"department_description\",\r\n                    label: \"Department description: \",\r\n                    type: \"text\",\r\n                    placeholder: \"Department description...\"\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            facultyId: {\r\n                element: \"select\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"faculty_id\",\r\n                    label: \"Faculty: \",\r\n                    options: []\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            }\r\n        }\r\n    };\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.dispatch(clearDepartment());\r\n        this.props.dispatch(clearFaculties());\r\n        this.props.dispatch(getFaculties());\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n\r\n        console.log(nextProps);\r\n        let tempFormData = this.state.formData;\r\n        let facultyOptions = [];\r\n\r\n        if(nextProps.faculties.facultiesList) {\r\n        \r\n            nextProps.faculties.facultiesList.map((faculty) => {\r\n                facultyOptions.push({\r\n                    id: faculty.facultyId,\r\n                    name: faculty.facultyName\r\n                });\r\n            });\r\n\r\n\r\n            tempFormData.facultyId.config.options = facultyOptions;\r\n    \r\n            this.setState({\r\n                formData: tempFormData\r\n            });\r\n        \r\n        }\r\n\r\n        if(nextProps.departments.department) {\r\n            if(nextProps.departments.department.message) {\r\n                this.setState({\r\n                    loading: false,\r\n                    error: nextProps.departments.department.message\r\n                });\r\n            }else {\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n                this.props.history.push(\"/departments-list\");\r\n                this.props.dispatch(clearDepartment());\r\n            }\r\n        }\r\n    }\r\n\r\n    updateForm = (formResponse) => {\r\n        let newFormData = {...this.state.formData}\r\n        let newElement = {...newFormData[formResponse.id]};\r\n\r\n        newElement.value = formResponse.event.target.value;\r\n\r\n        if(formResponse.isBlurred){\r\n            let isValid = this.validateData(newElement);\r\n            newElement.isValid = isValid[0];\r\n            newElement.validationMessage = isValid[1];\r\n            newElement.isBlurred = formResponse.isBlurred;\r\n        }\r\n\r\n        newFormData[formResponse.id] = newElement;\r\n        this.setState({\r\n            formData: newFormData\r\n        });\r\n    }\r\n\r\n    validateData = (data) => {\r\n\r\n        let error = [true, \"\"];\r\n\r\n        if(data.validation.required) {\r\n            const isValid = data.value.trim() !== \"\" ? true : false;\r\n            const message = `${!isValid ? \"This field is required !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.email) {\r\n            const isValid = /\\S+@\\S+\\.\\S+/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid email address !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.minLength) {\r\n            const isValid = data.value.length >= data.validation.minLength ? true : false;\r\n            const message = `${!isValid ? `This field must be at least ${data.validation.minLength} characters long !` : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.date) {\r\n            const isValid = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid date in DD/MM/YYYY format !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    renderSubmitButton = () => {\r\n        return (\r\n            this.state.loading \r\n            ? \r\n            <div className=\"loading\">\r\n                Loading...\r\n            </div>\r\n            :\r\n            <div>\r\n                <button onClick={(event) => this.submitHandle(event)}>Add department</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    submitHandle = (event) => {\r\n        event.preventDefault();\r\n        let dataToSubmit = {};\r\n        let isFormValid = true;\r\n\r\n        for(let key in this.state.formData) {\r\n            dataToSubmit[key] = this.state.formData[key].value;\r\n        }\r\n\r\n        for(let key in this.state.formData) {\r\n            isFormValid = isFormValid && this.state.formData[key].isValid ? true : false;\r\n        }\r\n\r\n        if(isFormValid) {\r\n            document.body.click();\r\n\r\n            console.log(dataToSubmit);\r\n            this.props.dispatch(addDepartment(dataToSubmit));\r\n            this.setState({\r\n                error: \"\",\r\n                loading: true\r\n            });\r\n        }else {\r\n            this.setState({\r\n                error: \"Something must have happened...\"\r\n            });\r\n        }\r\n    }\r\n    \r\n    renderError = () => {\r\n        return (\r\n            this.state.error !== \"\"\r\n            ?\r\n            <div className=\"error\">\r\n                {this.state.error}\r\n            </div>\r\n            :\r\n            \"\"\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if(!this.state.loading) {\r\n            return (\r\n                <div className=\"add_container\">\r\n                    \r\n                    <form>\r\n    \r\n                        <h2>Add department</h2>\r\n    \r\n                        <FormField\r\n                            id={\"departmentName\"}\r\n                            formData={this.state.formData.departmentName}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n                        <FormField\r\n                            id={\"departmentDescription\"}\r\n                            formData={this.state.formData.departmentDescription}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"facultyId\"}\r\n                            formData={this.state.formData.facultyId}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                                \r\n                        {this.renderSubmitButton()}\r\n                        {this.renderError()}\r\n    \r\n                    </form>\r\n                </div>\r\n            );\r\n        }else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        departments: state.departments,\r\n        faculties: state.faculties\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddDepartment);","import React, {Component} from \"react\";\r\nimport FormField from \"../components/FormField\";\r\nimport {connect} from \"react-redux\";\r\nimport {clearUpdatedUser, updateUser, logoutUser} from \"../actions/userActions\";\r\n\r\nclass Profile extends Component {\r\n\r\n    state = {\r\n        error: \"\",\r\n        loading: true,\r\n        user: {},\r\n        formData: {\r\n\r\n            userEmail: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"user_email\",\r\n                    label: \"User email: \",\r\n                    type: \"text\",\r\n                    placeholder: \"User email...\"\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n    \r\n            userRole: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    disabled: true,\r\n                    name: \"user_role\",\r\n                    label: \"User role: \",\r\n                    type: \"text\",\r\n                    placeholder: \"User role...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n\r\n            userPassword: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"user_password\",\r\n                    label: \"New password: \",\r\n                    type: \"password\",\r\n                    placeholder: \"New password...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            userPasswordConfirm: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    name: \"user_password_confirm\",\r\n                    label: \"Confirm new password: \",\r\n                    type: \"password\",\r\n                    placeholder: \"Confirm new password...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    passwordConfirm: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            }\r\n        }\r\n    };\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.dispatch(clearUpdatedUser());\r\n        let userInfo = this.state.formData;\r\n\r\n        userInfo.userEmail.value = this.props.users.login.user.userEmail;\r\n        userInfo.userEmail.isValid = true;\r\n        userInfo.userRole.value = this.props.users.login.user.userRole;\r\n        userInfo.userRole.isValid = true;\r\n\r\n        this.setState({\r\n            formData: userInfo,\r\n            user: this.props.users.login.user,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        if(nextProps.users.updatedUser) {\r\n            console.log(nextProps);\r\n            this.props.dispatch(logoutUser(this.props.history));\r\n        }\r\n        \r\n    }\r\n\r\n    updateForm = (formResponse) => {\r\n        let newFormData = {...this.state.formData}\r\n        let newElement = {...newFormData[formResponse.id]};\r\n\r\n        newElement.value = formResponse.event.target.value;\r\n\r\n        if(formResponse.isBlurred){\r\n            let isValid = this.validateData(newElement);\r\n            newElement.isValid = isValid[0];\r\n            newElement.validationMessage = isValid[1];\r\n            newElement.isBlurred = formResponse.isBlurred;\r\n        }\r\n\r\n        newFormData[formResponse.id] = newElement;\r\n        this.setState({\r\n            formData: newFormData\r\n        });\r\n    }\r\n\r\n    validateData = (data) => {\r\n\r\n        let error = [true, \"\"];\r\n\r\n        if(data.validation.required) {\r\n            const isValid = data.value.trim() !== \"\" ? true : false;\r\n            const message = `${!isValid ? \"This field is required !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.email) {\r\n            const isValid = /\\S+@\\S+\\.\\S+/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid email address !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.minLength) {\r\n            const isValid = data.value.length >= data.validation.minLength ? true : false;\r\n            const message = `${!isValid ? `This field must be at least ${data.validation.minLength} characters long !` : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.date) {\r\n            const isValid = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/.test(data.value);\r\n            const message = `${!isValid ? \"This field must be a valid date in DD/MM/YYYY format !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n\r\n        if(data.validation.passwordConfirm) {\r\n            const isValid = data.value == this.state.formData.userPassword.value ? true : false;\r\n            const message =`${!isValid ? `The passwords do not match !` : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    renderSubmitButton = () => {\r\n        return (\r\n            this.state.loading \r\n            ? \r\n            <div className=\"loading\">\r\n                Loading...\r\n            </div>\r\n            :\r\n            <div>\r\n                <button onClick={(event) => this.submitHandle(event)}>Change password</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    submitHandle = (event) => {\r\n        event.preventDefault();\r\n        let dataToSubmit = {};\r\n        let isFormValid = true;\r\n\r\n\r\n        for(let key in this.state.formData) {\r\n            dataToSubmit[key] = this.state.formData[key].value;\r\n        }\r\n\r\n        for(let key in this.state.formData) {\r\n            isFormValid = isFormValid && this.state.formData[key].isValid && this.state.formData[key].value != \"\" ? true : false;\r\n        }\r\n\r\n        if(isFormValid) {\r\n            document.body.click();\r\n            this.setState({\r\n                error: \"\"\r\n            });\r\n            console.log(dataToSubmit);\r\n            this.props.dispatch(updateUser(this.state.user.userId, {\r\n                userPassword: dataToSubmit.userPassword\r\n            }));\r\n        }else {\r\n            this.setState({\r\n                error: \"Something must have happened...\"\r\n            });\r\n        }\r\n    }\r\n    \r\n    renderError = () => {\r\n        return (\r\n            this.state.error !== \"\"\r\n            ?\r\n            <div className=\"error\">\r\n                {this.state.error}\r\n            </div>\r\n            :\r\n            \"\"\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if(!this.state.loading) {\r\n            return (\r\n                <div className=\"add_container\">\r\n                    \r\n                    <form>\r\n    \r\n                        <h1 id=\"profile_title\">User profile</h1>\r\n    \r\n                        <FormField\r\n                            id={\"userEmail\"}\r\n                            formData={this.state.formData.userEmail}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n                        <FormField\r\n                            id={\"userRole\"}\r\n                            formData={this.state.formData.userRole}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"userPassword\"}\r\n                            formData={this.state.formData.userPassword}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n                        <FormField\r\n                            id={\"userPasswordConfirm\"}\r\n                            formData={this.state.formData.userPasswordConfirm}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n\r\n    \r\n                        {this.renderSubmitButton()}\r\n                        {this.renderError()}\r\n    \r\n                    </form>\r\n                </div>\r\n            );\r\n        }else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Profile);","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStudentByEmail, clearStudent} from \"../actions/studentActions\";\r\n\r\nclass StudentOverview extends Component {\r\n    \r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.dispatch(clearStudent());\r\n        this.props.dispatch(getStudentByEmail(this.props.users.login.user.userEmail));\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        console.log(nextProps);\r\n        if(nextProps.students.student) {\r\n            this.props.history.push(`/student/${nextProps.students.student.studentId}`)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div/>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        students: state.students\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(StudentOverview);","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfessorByEmail, clearProfessor} from \"../actions/professorActions\";\r\n\r\nclass ProfessorOverview extends Component {\r\n    \r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.dispatch(clearProfessor());\r\n        this.props.dispatch(getProfessorByEmail(this.props.users.login.user.userEmail));\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        console.log(nextProps);\r\n        if(nextProps.professors.professor) {\r\n            this.props.history.push(`/professor/${nextProps.professors.professor.professorId}`)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div/>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        professors: state.professors\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProfessorOverview);","import axios from \"axios\";\r\n\r\n\r\nexport function getDocuments(offset=0, limit=9999) {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getDocuments?offset=${offset}&limit=${limit}`)\r\n        .then(documentsData => {\r\n            documentsData = documentsData.data;\r\n            const payload = {\r\n                documentsData,\r\n                offset,\r\n                limit\r\n    \r\n            };\r\n            dispatch({\r\n                type: \"DOCUMENTS_LIST\",\r\n                payload: payload\r\n            });\r\n\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function getFilteredDocuments(keyword = \"\") {\r\n    return(dispatch) => {\r\n        axios.get(`/api/getFilteredDocuments?keyword=${keyword}`)\r\n        .then(documentsData => {\r\n            documentsData = documentsData.data;\r\n            const payload = {\r\n                documentsData,\r\n                keyword\r\n            };\r\n            dispatch({\r\n                type: \"FILTERED_DOCUMENTS_LIST\",\r\n                payload: payload\r\n            });\r\n\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n\r\nexport function getDocument(documentId) {\r\n    const request = axios.get(`/api/getDocument/${documentId}`)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n        console.log(error);\r\n    });\r\n\r\n    return {\r\n        type: \"GET_DOCUMENT\",\r\n        payload: request\r\n    }\r\n}\r\n\r\n\r\nexport function sendDocument(userId, document) {\r\n    const request = axios.post(`/api/sendDocument`, {\r\n        documentTitle: document.documentTitle,\r\n        documentDescription: document.documentDescription,\r\n        documentStoragePath: document.documentStoragePath,\r\n        userId: userId\r\n    }).then(response => response.data)\r\n    .catch(error => {\r\n        console.log(error);\r\n    });\r\n    return {\r\n        type: \"SEND_DOCUMENT\",\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function deleteDocument(documentId) {\r\n    const request = axios.delete(`/api/deleteDocument/${documentId}`)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n        console.log(error);\r\n    });\r\n    return {\r\n        type: \"DELETE_DOCUMENT\",\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function clearDocument() {\r\n    return {\r\n        type: \"CLEAR_DOCUMENT\",\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport function clearDocuments() {\r\n    return {\r\n        type: \"CLEAR_DOCUMENTS_LIST\",\r\n        payload: null\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport FormField from \"../components/FormField\";\r\nimport Uploader from \"../components/Uploader\";\r\nimport {connect} from \"react-redux\";\r\nimport {clearDocument, sendDocument} from \"../actions/documentActions\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nclass SendDocument extends Component {\r\n\r\n    state = {\r\n        error: \"\",\r\n        loaded: true,\r\n        formData: {\r\n            documentTitle: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    label: \"Document title: \",\r\n                    name: \"document_title_input\",\r\n                    type: \"text\",\r\n                    placeholder: \"Enter your document title...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            documentDescription: {\r\n                element: \"input\",\r\n                value: \"\",\r\n                config: {\r\n                    label: \"Document description:\",\r\n                    name: \"document_description_input\",\r\n                    type: \"text\",\r\n                    placeholder: \"Enter the doc description...\"\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\"\r\n            },\r\n            documentStoragePath: {\r\n                element: \"file-uploader\",\r\n                value: \"\",\r\n                validation : {\r\n                    required: true\r\n                },\r\n                isValid: false,\r\n                isBlurred: false,\r\n                validationMessage: \"\" \r\n            }\r\n        }\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.documents.document) {\r\n            this.props.dispatch(clearDocument());\r\n            this.setState({\r\n                loaded: true,\r\n            })\r\n            Swal.fire({  \r\n                icon: \"succes\",  \r\n                title: \"Done\",  \r\n                text: \"Your file was sent to the administration !\",  \r\n              });\r\n            this.props.history.push(\"/\");\r\n        }\r\n    }\r\n\r\n\r\n    updateForm = (formResponse, content = \"\") => {\r\n        let newFormData = {...this.state.formData}\r\n        let newElement = {...newFormData[formResponse.id]};\r\n\r\n        if(content === \"\"){\r\n            newElement.value = formResponse.event.target.value;\r\n        }else {\r\n            newElement.value = content;\r\n        }\r\n\r\n        if(formResponse.isBlurred || !formResponse.isBlurred){\r\n            let isValid = this.validateData(newElement);\r\n            newElement.isValid = isValid[0];\r\n            newElement.validationMessage = isValid[1];\r\n            newElement.isBlurred = formResponse.isBlurred;\r\n        }\r\n\r\n        newFormData[formResponse.id] = newElement;\r\n        this.setState({\r\n            formData: newFormData\r\n        });\r\n    }\r\n\r\n    validateData = (data) => {\r\n        let error = [true, \"\"];\r\n\r\n        if(data.validation.required) {\r\n            const isValid = data.value.trim() !== \"\" ? true : false;\r\n            const message = `${!isValid ? \"This field is required !\" : \"\"}`;\r\n            error = !isValid ? [isValid, message] : error;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    submitHandle = (event) => {\r\n        event.preventDefault();\r\n\r\n        let dataToSubmit = {};\r\n        let isFormValid = true;\r\n\r\n        for(let key in this.state.formData) {\r\n            dataToSubmit[key] = this.state.formData[key].value;\r\n        }\r\n\r\n        for(let key in this.state.formData) {\r\n            isFormValid = this.state.formData[key].isValid && isFormValid ? true : false;\r\n        }\r\n\r\n\r\n        if(isFormValid) {\r\n            this.setState({\r\n                loaded: false,\r\n                error: \"\"\r\n            });\r\n            console.log(dataToSubmit);\r\n            this.props.dispatch(sendDocument(this.props.users.login.user.userId, dataToSubmit));\r\n        }else {\r\n            console.log(\"There was an error !\");\r\n            this.setState({\r\n                error: \"Something went wrong !\"\r\n            });\r\n        }\r\n    }\r\n\r\n    renderSubmitButton = () => {\r\n        return (\r\n            this.state.isLoading \r\n            ? \r\n            <div>\r\n                Loading...\r\n            </div>\r\n            :\r\n            <div>\r\n                <button type=\"submit\">SEND</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderError = () => {\r\n        return (\r\n            this.state.error !== \"\" \r\n            ?\r\n            <div className=\"error\">\r\n                {this.state.error}\r\n            </div>\r\n            :\r\n            \"\"\r\n        );\r\n    }\r\n\r\n\r\n    storeFileName = (fileName) => {\r\n        this.updateForm({id: \"documentStoragePath\"}, fileName);\r\n    }\r\n\r\n    render() {\r\n\r\n        if(this.state.loaded) {\r\n            return (\r\n                <div className=\"send_document_container\">\r\n                    <form onSubmit={this.submitHandle}>\r\n                        <h1>Send document to administration</h1>\r\n        \r\n                        <FormField\r\n                            id={\"documentTitle\"}\r\n                            formData={this.state.formData.documentTitle}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n        \r\n                        <FormField\r\n                            id={\"documentDescription\"}\r\n                            formData={this.state.formData.documentDescription}\r\n                            changeHandle={(formResponse) => this.updateForm(formResponse)}/>\r\n                        <h3>Attach a document: </h3>\r\n                        <Uploader name=\"document\" acceptedFormat=\".doc,.docx,application/pdf\" referencedStoragePath=\"documents\" storeFileName={(fileName) => this.storeFileName(fileName)}/>\r\n        \r\n                        {this.renderSubmitButton()}\r\n                        {this.renderError()}\r\n                    </form>\r\n                    \r\n                </div>\r\n            );\r\n        }else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n\r\n        \r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        documents: state.documents\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SendDocument);\r\n\r\n","\r\nimport React, {Component} from \"react\";\r\nimport {deleteDocument} from \"../actions/documentActions\";\r\nimport Swal from \"sweetalert2\";\r\nimport {firebase} from \"../Firebase\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nclass Document extends Component  {\r\n\r\n    state = {\r\n        isLoaded: false,\r\n        documentPath: \"\",\r\n        document: {}\r\n    }\r\n\r\n    getDocumentURL = (fileName) => {\r\n        firebase.storage().ref(\"documents\").child(fileName).getDownloadURL()\r\n        .then((url) => {\r\n            this.setState({\r\n                isLoaded: true,\r\n                documentPath: url,\r\n                document: this.props.document\r\n            })\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getDocumentURL(this.props.document.documentStoragePath);\r\n    }\r\n\r\n    deleteDepartmentHandle = (documentId) => {\r\n        Swal.fire({  \r\n            title: \"Are you sure?\",  \r\n            text: \"You will the delete the document permanently\",  \r\n            icon: \"warning\",  \r\n            showCancelButton: true,  \r\n            confirmButtonColor: \"#3085d6\",  \r\n            cancelButtonColor: \"#d33\",  \r\n            confirmButtonText: \"Yes!\"  \r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                this.props.dispatch(deleteDocument(documentId));\r\n                firebase.storage().ref(\"documents\").child(this.state.document.documentStoragePath).delete()\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })\r\n            } \r\n        });    \r\n    }\r\n\r\n    openDocumentHandle = () => {\r\n        var link = document.createElement(\"a\");\r\n        link.href = this.state.documentPath;\r\n        link.target = \"_blank\";\r\n        link.download = this.state.document.documentStoragePath;\r\n        link.click();\r\n    }\r\n\r\n    renderOptions = () => {\r\n        return (\r\n            <div className=\"options\">\r\n\r\n                <div className=\"document_open\" onClick={() => this.openDocumentHandle()}>\r\n                    OPEN\r\n                </div>\r\n            \r\n                <div className=\"document_delete\" onClick={() => this.deleteDepartmentHandle(this.state.document.documentId)}>\r\n                    DELETE\r\n                </div>\r\n\r\n            </div>   \r\n        )\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isLoaded) {\r\n            return (\r\n                <div className=\"document\">\r\n                    <a id=\"doc_download_link\" href={this.state.documentPath} download hidden>{this.state.document.documentStoragePath}</a>\r\n                    <h2>\r\n                        {this.state.document.documentTitle}\r\n                        <div className=\"document_sender\">\r\n                            {`Sent from ${this.state.document.User.userEmail}`}\r\n                        </div>\r\n                        <div className=\"document_message\">\r\n                            {this.state.document.documentDescription}\r\n                        </div>\r\n    \r\n                    </h2>\r\n    \r\n                    {this.renderOptions()}\r\n                </div>\r\n            )\r\n        } else {\r\n            return <div className=\"loader\"/>\r\n        }\r\n        \r\n    }    \r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        documents: state.documents,\r\n        others: state.others\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Document);","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {clearDocuments, clearDocument, getDocuments, getFilteredDocuments} from \"../actions/documentActions\";\r\nimport {countEsentials} from \"../actions/otherActions\";\r\nimport Document from \"../components/Document\";\r\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nclass DocumentsList extends Component {\r\n    state = {\r\n        documents: [],\r\n        documentsCount: 0,\r\n        offset: 0,\r\n        limit: 5,\r\n        loaded: false,\r\n        dummy: false,\r\n        navButtons: true,\r\n        keyword: \"\"\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.dispatch(clearDocuments());\r\n        this.props.dispatch(getDocuments(this.state.offset, this.state.limit));\r\n        this.props.dispatch(countEsentials());\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        if(nextProps.others.counts) {\r\n            if(nextProps.documents.documentsList) {\r\n                let documents = nextProps.documents.documentsList.documentsData;\r\n                this.setState({\r\n                    documents: documents,\r\n                    offset: nextProps.documents.documentsList.offset,\r\n                    limit: nextProps.documents.documentsList.limit,\r\n                    documentsCount: nextProps.others.counts.documentsCount,\r\n                    loaded: true\r\n                });\r\n            }\r\n        }\r\n\r\n        if(nextProps.documents.deletedDocument != null) {\r\n            window.location.reload();\r\n            this.props.dispatch(clearDocument());\r\n        }\r\n\r\n        if(nextProps.documents.filteredDocumentsList) {\r\n            this.setState({\r\n                documents: nextProps.documents.filteredDocumentsList.documentsData,\r\n                offset: 0,\r\n                loaded: true\r\n            })\r\n        }\r\n    }\r\n\r\n    renderDocuments = (documentsList) => {\r\n        return documentsList.map(document => {\r\n            return (\r\n                <Document key={document.documentId} document={document} userRole={this.props.users.login.user.userRole}/>\r\n            );\r\n        });\r\n    }\r\n\r\n\r\n    renderNavButtons = () => {\r\n        return (\r\n            <div className=\"list_nav_buttons\">\r\n                <div className=\"prev\" onClick={() => this.loadPrev(this.state.offset, this.state.limit)}>\r\n                    Prev\r\n                </div>\r\n                <div className=\"next\" onClick={() => this.loadNext(this.state.offset, this.state.limit)}>\r\n                    Next\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    loadNext = (offset, limit) => {\r\n        if(offset + limit <= this.state.documentsCount - 1) {\r\n            this.setState({\r\n                loaded: false\r\n            });\r\n            this.props.dispatch(getDocuments(offset + limit, limit));\r\n        }\r\n    }\r\n\r\n    loadPrev = (offset, limit) => {\r\n        if(offset - limit >= 0) {\r\n            this.setState({\r\n                loaded: false\r\n            });\r\n            this.props.dispatch(getDocuments(offset - limit, limit));\r\n        }\r\n    }\r\n\r\n    changeHandle = (value) => {\r\n        this.setState({\r\n            keyword: value\r\n        });\r\n\r\n        this.props.dispatch(clearDocuments());\r\n        if(value != \"\") {\r\n            if(value.length >= 3 && this.state.keyword.length <= value.length) {\r\n                setTimeout(() => { \r\n                    this.props.dispatch(getFilteredDocuments(value));\r\n                    this.setState({\r\n                        navButtons: false,\r\n                    });\r\n                }, 500);\r\n            }\r\n        } else {\r\n            this.props.dispatch(getDocuments(this.state.offset, this.state.limit));\r\n            this.setState({\r\n                navButtons: true,\r\n                loaded: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if(this.state.loaded == true) {\r\n            return (\r\n                <div className=\"list_container\">\r\n\r\n                    <h1>Documents list</h1>\r\n\r\n                    <FontAwesomeIcon id=\"search_icon\" icon={faSearch}/>\r\n                    <input className=\"search_input\" value={this.state.keyword} onChange={(event) => this.changeHandle(event.target.value)} placeholder=\"Enter keyword...\"/>\r\n\r\n                    <div>\r\n\r\n                        {this.state.documents.length > 0 ? this.renderDocuments(this.state.documents) : <div className=\"message\">No documents received yet.</div>}\r\n\r\n                    </div>\r\n\r\n                    {this.state.documents.length > 0 && this.state.navButtons ? this.renderNavButtons() : null}\r\n\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        documents: state.documents,\r\n        others: state.others\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(DocumentsList);","import React, {Component} from \"react\";\r\nimport {getProfessorByEmail, clearProfessor} from \"../actions/professorActions\";\r\nimport {getStudentByEmail, clearStudent} from \"../actions/studentActions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass ChatMessage extends Component {\r\n\r\n    state = {\r\n        userName: \"\",\r\n        loaded: false,\r\n        message: {}\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.dispatch(clearProfessor());\r\n        this.props.dispatch(clearStudent());\r\n\r\n        this.setState({\r\n            message: this.props.message\r\n        });\r\n\r\n        if(this.props.message.user.userId == this.props.users.login.user.userId) {\r\n            this.setState({\r\n                userName: \"Me\",\r\n                loaded: true            \r\n            });\r\n        }else {\r\n            if(this.props.message.user.userRole == \"admin\") {\r\n                this.setState({\r\n                    userName: \"ADMIN\",\r\n                    loaded: true                \r\n                });\r\n            }else if(this.props.message.user.userRole == \"professor\") {\r\n                this.props.dispatch(getProfessorByEmail(this.props.message.user.userEmail));\r\n            }else if(this.props.message.user.userRole == \"student\") {\r\n                this.props.dispatch(getStudentByEmail(this.props.message.user.userEmail));\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.dispatch(clearProfessor());\r\n        this.props.dispatch(clearStudent());\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        if(nextProps.students.student && this.props.message.user.userRole == \"student\") {\r\n            if(nextProps.message.user.userEmail == nextProps.students.student.studentEmail) {\r\n                this.setState({\r\n                    userName: `${nextProps.students.student.studentFirstName} ${nextProps.students.student.studentLastName}`,\r\n                    loaded: true\r\n                });\r\n            }   \r\n        } else if(nextProps.professors.professor && this.props.message.user.userRole == \"professor\") {\r\n            if(nextProps.message.user.userEmail == nextProps.professors.professor.professorEmail) {\r\n                this.setState({\r\n                    userName: `${nextProps.professors.professor.professorFirstName} ${nextProps.professors.professor.professorLastName}`,\r\n                    loaded: true\r\n                }); \r\n            }\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        if(this.state.loaded) {\r\n            return (\r\n                <div className={this.props.message.user.userId == this.props.currentUserId ? \"sent_message\" : \"received_message\"}>\r\n                    <p><section id=\"chat_message_username\">{`${this.state.userName}:`}</section> {`${this.props.message.text}`}</p>\r\n                </div>\r\n            )  \r\n        } else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        users: state.users,\r\n        students: state.students,\r\n        professors: state.professors\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ChatMessage);\r\n","import {useState, useRef} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {firebase} from \"../Firebase\";\r\nimport {useCollectionData} from \"react-firebase-hooks/firestore\";\r\nimport ChatMessage from \"../components/ChatMessage\";\r\n\r\n\r\nconst Chat = (props) => {\r\n\r\n    const dummy = useRef();\r\n\r\n    const messagesReference = firebase.firestore().collection(\"messages\");\r\n    \r\n    const messagesQuery = messagesReference.orderBy(\"createdAt\").limitToLast(25);\r\n\r\n    const [messages] = useCollectionData(messagesQuery, {idField: \"id\"});\r\n\r\n    const [formValue, setFormValue] = useState();\r\n\r\n    const sendMessage = (event) => {\r\n        event.preventDefault();\r\n\r\n        messagesReference.add({\r\n            text: formValue,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n            user: props.users.login.user\r\n        });\r\n\r\n        setFormValue(\"\");\r\n        dummy.current.scrollIntoView({behavior: \"smooth\"});\r\n    }\r\n\r\n    console.log(props);\r\n    return (\r\n        <div className=\"chat_container\">\r\n            <h1>Academic chat room</h1>\r\n            <main>\r\n                {messages && messages.map(message =>\r\n                    <ChatMessage key={message.id} message={message}/>\r\n                )}\r\n\r\n                <span ref={dummy}></span>\r\n            </main>\r\n\r\n            \r\n\r\n            <form onSubmit={sendMessage}>\r\n                <input value={formValue} onChange={(event) => setFormValue(event.target.value)} placeholder=\"Write your message...\"/>\r\n\r\n                <button type=\"submit\" disabled={!formValue}>SEND</button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        users: state.users\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Chat);","import React, {Component} from \"react\";\r\nimport {firebase} from \"../Firebase\";\r\nimport {getNews, clearNewsList} from \"../actions/newsActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Slick from \"react-slick\";\r\nimport moment from \"moment\";\r\n\r\n\r\nclass NewsSlider extends Component {\r\n\r\n    state = {\r\n        news: [],\r\n        isLoaded: false,\r\n        settings: {\r\n            dots: true,\r\n            infinite: false,\r\n            arrows: false,\r\n            speed: 500,\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1,\r\n        }\r\n    };\r\n\r\n\r\n    componentWillMount() {\r\n        this.props.dispatch(clearNewsList());\r\n        this.props.dispatch(getNews());\r\n    }\r\n\r\n    getImageURL = (item, callback) => {\r\n        firebase.storage().ref(\"pictures\").child(item.newsPicturePath).getDownloadURL()\r\n        .then((url) => {\r\n            item.src = url;\r\n            callback();                 \r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.news.newsList) {\r\n            let news = nextProps.news.newsList.newsData;\r\n            let asyncRequests = news.map((item, index) => {\r\n                return new Promise((resolve) => {\r\n                    this.getImageURL(item, resolve);\r\n                });\r\n            })\r\n\r\n            Promise.all(asyncRequests).then(() => {\r\n                this.setState({\r\n                    news: news,\r\n                    isLoaded: true\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    renderSliderOptions = (news) => {\r\n        console.log(news);\r\n        return news.map((item, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <div className=\"featured_item\">\r\n                        <div \r\n                            className=\"featured_image\"\r\n                            style={{\r\n                                background: `url(\"${item.src}\")`\r\n                            }}>\r\n                            <Link to={`news/${item.newsId}`}>\r\n                                <div className=\"featured_caption\">\r\n                                    {item.newsTitle}\r\n                                </div>\r\n\r\n                                <div className=\"featured_date\">\r\n                                    {moment(item.updatedAt).format(\"DD-MM-YYYY\")}\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state);\r\n        if(this.state.isLoaded) {\r\n            return (\r\n                <div className=\"slider\">\r\n                    <Slick {...this.state.settings}>\r\n                        {this.renderSliderOptions(this.state.news)}\r\n                    </Slick>\r\n                </div>\r\n\r\n\r\n            );\r\n        }else {\r\n            return (\r\n                <div className=\"loader\"/>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        news: state.news,\r\n        others: state.others\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NewsSlider);","import {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {countEsentials} from \"../actions/otherActions\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faChalkboardTeacher, faUserGraduate, faBook, faUniversity} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Statistics extends Component {\r\n\r\n    state = {\r\n        done: false\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.dispatch(countEsentials());\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        console.log(nextProps);\r\n\r\n        const subjectsCount = nextProps.others.counts.subjectsCount;\r\n        const professorsCount = nextProps.others.counts.professorsCount;\r\n        const studentsCount = nextProps.others.counts.studentsCount;\r\n        const departmentsCount = nextProps.others.counts.departmentsCount;\r\n        this.setState({\r\n            containers: [\r\n                {\r\n                    className: \"subjects\",\r\n                    path: \"/subjects-list\",\r\n                    icon: faBook,\r\n                    text: `Subjects: ${subjectsCount}`\r\n                },\r\n                {\r\n                    className: \"professors\",\r\n                    path: \"/professors-list\",\r\n                    icon: faChalkboardTeacher,\r\n                    text: `Professors: ${professorsCount}`\r\n                },\r\n                {\r\n                    className: \"students\",\r\n                    path: \"/students-list\",\r\n                    icon: faUserGraduate,\r\n                    text: `Students: ${studentsCount}`\r\n                },\r\n                {\r\n                    className: \"departments\",\r\n                    path: \"/departments-list\",\r\n                    icon: faUniversity,\r\n                    text: `Departments: ${departmentsCount}`\r\n                }\r\n                \r\n            ],\r\n            done: true\r\n        })\r\n    }\r\n\r\n    generateContainers = (containers) => {\r\n        return containers.map((container, index) => {\r\n            return (\r\n                <div key={index} className={container.className}>\r\n                    <Link to={container.path} style={{\r\n                        marginBottom: \"10px\",\r\n                    }}>\r\n                        <FontAwesomeIcon icon={container.icon} style={{\r\n                            display: \"block\",\r\n                            margin: \"1.25vw auto\",\r\n                            fontSize: \"6vw\"\r\n                        }}/>\r\n                        {container.text}\r\n                    </Link>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    \r\n    render() {\r\n        if(this.state.done === true) {\r\n            return (\r\n\r\n                <div className=\"admin_dashboard\">\r\n\r\n                    <h2>Summary of academics: </h2>\r\n                    \r\n                    <div className=\"count_container\">\r\n                        \r\n                        {this.generateContainers(this.state.containers)}\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            );\r\n        }else {\r\n            return (\r\n                <div className=\"loading\"/>\r\n            );\r\n        }\r\n    }      \r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        users: state.users,\r\n        others: state.others\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Statistics);","import NewsSlider from \"../components/NewsSlider\";\r\nimport React from \"react\";\r\nimport Statistics from \"../components/Statistics\";\r\n\r\nconst Dashboard = () => {\r\n\r\n    return (\r\n        <div class=\"dashboard\">\r\n            <NewsSlider\r\n                type=\"featured\"\r\n                start={0}\r\n                amount={4}\r\n                settings={{\r\n                    dots: false\r\n                }}\r\n            />\r\n            <Statistics/>\r\n        \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Dashboard;","import SignIn from \"./screens/SignIn\";\r\nimport SignOut from \"./screens/SignOut\";\r\n\r\nimport AboutStudent from \"./screens/AboutStudent\";\r\nimport AboutProfessor from \"./screens/AboutProfessor\";\r\nimport AboutStudyGroup from \"./screens/AboutStudyGroup\";\r\nimport AboutCourse from \"./screens/AboutCourse\";\r\nimport AboutNews from \"./screens/AboutNews\";\r\nimport AboutExam from \"./screens/AboutExam\";\r\nimport AboutSubject from \"./screens/AboutSubject\";\r\nimport AboutDepartment from \"./screens/AboutDepartment\";\r\n\r\nimport StudentsList from \"./screens/StudentsList\";\r\nimport ProfessorsList from \"./screens/ProfessorsList\";\r\nimport SubjectsList from \"./screens/SubjectsList\";\r\nimport StudyGroupsList from \"./screens/StudyGroupsList\";\r\nimport NewsList from \"./screens/NewsList\";\r\nimport CoursesList from \"./screens/CoursesList\";\r\nimport ExamsList from \"./screens/ExamsList\";\r\nimport DepartmentsList from \"./screens/DepartmentsList\";\r\n\r\n\r\nimport AddStudent from \"./screens/AddStudent\";\r\nimport AddProfessor from \"./screens/AddProfessor\";\r\nimport AddStudyGroup from \"./screens/AddStudyGroup\";\r\nimport AddCourse from \"./screens/AddCourse\";\r\nimport AddNews from \"./screens/AddNews\";\r\nimport AddExam from \"./screens/AddExam\";\r\nimport AddSubject from \"./screens/AddSubject\";\r\nimport AddDepartment from \"./screens/AddDepartment\";\r\nimport Profile from \"./screens/Profile\";\r\n\r\nimport StudentOverview from \"./screens/StudentOverview\";\r\nimport ProfessorOverview from \"./screens/ProfessorOverview\";\r\n\r\nimport SendDocument from \"./screens/SendDocument\";\r\nimport DocumentsList from \"./screens/DocumentsList\";\r\n\r\nimport Chat from \"./screens/Chat\";\r\nimport Dashboard from \"./screens/Dashboard\";\r\n\r\n\r\n\r\nconst roles = {admin: \"admin\", professor: \"professor\", student: \"student\"};\r\n\r\nexport const permissionsConfig = [\r\n    {\r\n        component: Dashboard,\r\n        path: \"/\",\r\n        title: \"Dashboard\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin,\r\n            roles.professor,\r\n            roles.student\r\n        ]\r\n    },\r\n    {\r\n        component: DocumentsList,\r\n        path: \"/documents-list\",\r\n        title: \"Documents list\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin\r\n        ]\r\n    },\r\n    {\r\n        component: SendDocument,\r\n        path: \"/send-document\",\r\n        title: \"Send document\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.professor,\r\n            roles.student\r\n        ]\r\n    },\r\n    {\r\n        component: SignIn,\r\n        path: \"/login\",\r\n        title: \"Login\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin,\r\n            roles.professor,\r\n            roles.student\r\n        ]\r\n    },\r\n    {\r\n        component: SignOut,\r\n        path: \"/logout\",\r\n        title: \"Logout\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin,\r\n            roles.professor,\r\n            roles.student\r\n        ]\r\n    },\r\n    {\r\n        component: StudentsList,\r\n        path: \"/students-list\",\r\n        title: \"Students list\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin,\r\n            roles.professor,\r\n            roles.student\r\n        ]\r\n    },\r\n    {\r\n        component: AddStudent,\r\n        path: \"/add-student\",\r\n        title: \"Add student\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin\r\n        ]\r\n    },\r\n    {\r\n        component: AboutStudent,\r\n        path: \"/student/:id\",\r\n        title: \"About student\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin,\r\n            roles.professor,\r\n            roles.student\r\n        ]\r\n    },\r\n    {\r\n        component: ProfessorsList,\r\n        path: \"/professors-list\",\r\n        title: \"Professors list\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin,\r\n            roles.professor\r\n        ]\r\n    },\r\n    {\r\n        component: AboutProfessor,\r\n        path: \"/professor/:id\",\r\n        title: \"About professor\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin,\r\n            roles.professor\r\n        ]\r\n    },\r\n    {\r\n        component: AddProfessor,\r\n        path: \"/add-professor\",\r\n        title: \"Add professor\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin\r\n        ]\r\n    },\r\n    {\r\n        component: StudyGroupsList,\r\n        path: \"/studygroups-list\",\r\n        title: \"Study groups list\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin,\r\n            roles.professor,\r\n            roles.student\r\n        ]\r\n    },\r\n    {\r\n        component: AddStudyGroup,\r\n        path: \"/add-studygroup\",\r\n        title: \"Add study group\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin\r\n        ]\r\n    },\r\n    {\r\n        component: AboutStudyGroup,\r\n        path: \"/studygroup/:id\",\r\n        title: \"About study group\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin,\r\n            roles.professor,\r\n            roles.student\r\n        ]\r\n    },\r\n    {\r\n        component: AddCourse,\r\n        path: \"/add-course\",\r\n        title: \"Add Course\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin\r\n        ]\r\n    },\r\n    {\r\n        component: AboutCourse,\r\n        path: \"/course/:id\",\r\n        title: \"About course\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin,\r\n            roles.professor,\r\n            roles.student\r\n        ]\r\n    },\r\n    {\r\n        component: CoursesList,\r\n        path: \"/courses-list\",\r\n        title: \"Courses list\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin,\r\n            roles.professor,\r\n            roles.student\r\n        ]\r\n    },\r\n    {\r\n        component: ExamsList,\r\n        path: \"/exams-list\",\r\n        title: \"Exams list\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin,\r\n            roles.professor,\r\n            roles.student\r\n        ]\r\n    },\r\n    {\r\n        component: AddExam,\r\n        path: \"/add-exam/:courseId\",\r\n        title: \"Add exam with course id\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin,\r\n            roles.professor\r\n        ]\r\n    },\r\n    {\r\n        component: AddExam,\r\n        path: \"/add-exam\",\r\n        title: \"Add exam without course id\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin\r\n        ]\r\n    },\r\n    {\r\n        component: AboutExam,\r\n        path: \"/exam/:id\",\r\n        title: \"About exam\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin,\r\n            roles.professor,\r\n            roles.student\r\n        ]\r\n    },\r\n    {\r\n        component: SubjectsList,\r\n        path: \"/subjects-list\",\r\n        title: \"Subjects list\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin,\r\n            roles.professor,\r\n            roles.student\r\n        ]\r\n    },\r\n    {\r\n        component: AddSubject,\r\n        path: \"/add-subject\",\r\n        title: \"Add subject\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin\r\n        ]\r\n    },\r\n    {\r\n        component: AboutSubject,\r\n        path: \"/subject/:id\",\r\n        title: \"About subject\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin,\r\n            roles.professor,\r\n            roles.student\r\n        ]\r\n    },\r\n    {\r\n        component: NewsList,\r\n        path: \"/news-list\",\r\n        title: \"News list\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin\r\n        ]\r\n    },\r\n    {\r\n        component: AboutNews,\r\n        path: \"/news/:id\",\r\n        title: \"About news\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin,\r\n            roles.professor,\r\n            roles.student\r\n        ]\r\n    },\r\n    {\r\n        component: AddNews,\r\n        path: \"/add-news\",\r\n        title: \"Add news\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin\r\n        ]\r\n    },\r\n    {\r\n        component: AddDepartment,\r\n        path: \"/add-department\",\r\n        title: \"Add department\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin\r\n        ]\r\n    },\r\n    {\r\n        component: AboutDepartment,\r\n        path: \"/department/:id\",\r\n        title: \"About department\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin,\r\n            roles.professor\r\n        ]\r\n    },\r\n    {\r\n        component: DepartmentsList,\r\n        path: \"/departments-list\",\r\n        title: \"Departments list\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin,\r\n            roles.professor\r\n        ]\r\n    },\r\n    {\r\n        component: Profile,\r\n        path: \"/profile\",\r\n        title: \"Profile\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin,\r\n            roles.professor,\r\n            roles.student\r\n        ]\r\n    },\r\n    {\r\n        component: StudentOverview,\r\n        path: \"/student-overview\",\r\n        title: \"Student overview\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.student\r\n        ]\r\n    },\r\n    {\r\n        component: ProfessorOverview,\r\n        path: \"/professor-overview\",\r\n        title: \"Professor overview\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.professor\r\n        ]\r\n    },\r\n    {\r\n        component: Chat,\r\n        path: \"/chat\",\r\n        title: \"Room chat\",\r\n        exact: true,\r\n        permissions: [\r\n            roles.admin,\r\n            roles.professor,\r\n            roles.student\r\n        ]\r\n    }\r\n];","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {authUser} from \"../actions/userActions\";\r\nimport {permissionsConfig} from \"../permissionsConfig\";\r\n\r\nexport default function Auth(WantedComponent, requiresAuth) {\r\n\r\n    class AuthCheck extends Component {\r\n        \r\n        state = {\r\n            loading: true,\r\n        }\r\n\r\n        UNSAFE_componentWillMount() {\r\n            this.props.dispatch(authUser());\r\n        }\r\n\r\n        UNSAFE_componentWillReceiveProps(nextProps) {\r\n            //if not authenticated and different from the special logout scenario which erases user data from redux state\r\n            if(!nextProps.users.login.isAuth && !nextProps.users.login.type !== \"logout\") {\r\n                if(requiresAuth === true) {\r\n                    this.props.history.push(\"/login\");\r\n                }\r\n            }\r\n\r\n            //if authenticated\r\n            if(nextProps.users.login.user) {\r\n                const currentRoute = permissionsConfig.find(route => {\r\n                    //if route exists\r\n                    if(route.path === this.props.match.path) {\r\n                        return true;\r\n                    }\r\n                });\r\n                if(currentRoute !== null) {\r\n                    let k  = 0;\r\n                    currentRoute.permissions.forEach(permission => {\r\n                        if(permission !== nextProps.users.login.user.userRole) {\r\n                            k++\r\n                        }\r\n                    });\r\n                    //if k is equal to the size of the array it means the user does not pose permission to access that route\r\n                    //on the other hand, if it is different, he's allowed to proceed\r\n                    if(k === currentRoute.permissions.length) {\r\n                        console.log(nextProps);\r\n                        this.props.history.push(\"/not-found\");\r\n                    }else {\r\n                        this.setState({\r\n                            loading: false\r\n                        });\r\n                    }\r\n                }  \r\n            }else {\r\n                this.setState({\r\n                    loading: false\r\n                })\r\n            }                    \r\n        }\r\n\r\n        render() {\r\n            if(this.state.loading) {\r\n                return <div className=\"loading\"/>;\r\n            }else {\r\n                return (\r\n                    <WantedComponent {...this.props}/>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    function mapStateToProps(state) {\r\n        return {\r\n            users: state.users\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(AuthCheck);\r\n}\r\n\r\n","import {Component} from \"react\";\r\n\r\n\r\nclass NotFound extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"not_found\">\r\n                NOT FOUND\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;","import React from \"react\";\r\nimport {Switch, Route} from \"react-router-dom\";\r\nimport Layout from \"./high_order_components/Layout\";\r\nimport Auth from \"./high_order_components/Auth\";\r\nimport Login from \"./screens/SignIn\";\r\nimport Dashboard from \"./screens/Dashboard\";\r\nimport Logout from \"./screens/SignOut\";\r\nimport StudentList from \"./screens/StudentsList\";\r\nimport ProfessorsList from \"./screens/ProfessorsList\";\r\nimport AddStudent from \"./screens/AddStudent\";\r\nimport NotFound from \"./screens/NotFound\";\r\nimport AboutStudent from \"./screens/AboutStudent\";\r\nimport AddProfessor from \"./screens/AddProfessor\";\r\nimport AboutProfessor from \"./screens/AboutProfessor\";\r\nimport StudyGroupsList from \"./screens/StudyGroupsList\";\r\nimport AddStudyGroup from \"./screens/AddStudyGroup\";\r\nimport AboutStudyGroup from \"./screens/AboutStudyGroup\";\r\nimport CoursesList from \"./screens/CoursesList\";\r\nimport AddCourse from \"./screens/AddCourse\";\r\nimport AboutCourse from \"./screens/AboutCourse\";\r\nimport AddPresenceSheet from \"./screens/AddPresenceSheet\";\r\nimport AddNews from \"./screens/AddNews\";\r\nimport NewsList from \"./screens/NewsList\";\r\nimport AboutNews from \"./screens/AboutNews\";\r\nimport AddExam from \"./screens/AddExam\";\r\nimport AboutExam from \"./screens/AboutExam\";\r\nimport ExamsList from \"./screens/ExamsList\";\r\nimport AddSubject from \"./screens/AddSubject\";\r\nimport SubjectsList from \"./screens/SubjectsList\";\r\nimport AboutSubject from \"./screens/AboutSubject\";\r\nimport AddDepartment from \"./screens/AddDepartment\";\r\nimport AboutDepartment from \"./screens/AboutDepartment\";\r\nimport DepartmentsList from \"./screens/DepartmentsList\";\r\nimport Profile from \"./screens/Profile\";\r\nimport StudentOverview from \"./screens/StudentOverview\";\r\nimport DocumentsList from \"./screens/DocumentsList\";\r\nimport SendDocument from \"./screens/SendDocument\";\r\nimport ProfessorOverview from \"./screens/ProfessorOverview\";\r\nimport Chat from \"./screens/Chat\";\r\n\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Layout>\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={Auth(Dashboard, false)}/>\r\n                    <Route path=\"/login\" exact component={Auth(Login, false)}/>\r\n                    <Route path=\"/logout\" exact component={Auth(Logout, true)}/>\r\n                    <Route path=\"/dashboard\" exact component={Auth(Dashboard, true)}/>\r\n                    <Route path=\"/students-list\" exact component={Auth(StudentList, true)}/>\r\n                    <Route path=\"/professors-list\" exact component={Auth(ProfessorsList, true)}/>\r\n                    <Route path=\"/add-student\" exact component={Auth(AddStudent, true)}/>\r\n                    <Route path=\"/student/:id\" exact component={Auth(AboutStudent, true)}/>\r\n                    <Route path=\"/not-found\" exact component={NotFound}/>\r\n                    <Route path=\"/add-professor\" exact component={Auth(AddProfessor, true)}/>\r\n                    <Route path=\"/professor/:id\" exact component={Auth(AboutProfessor, true)}/>\r\n                    <Route path=\"/studygroups-list\" exact component={Auth(StudyGroupsList, true)}/>\r\n                    <Route path=\"/add-studygroup\" exact component={Auth(AddStudyGroup, true)}/>\r\n                    <Route path=\"/studygroup/:id\" exact component={Auth(AboutStudyGroup, true)}/>\r\n                    <Route path=\"/courses-list\" exact component={Auth(CoursesList, true)}/>\r\n                    <Route path=\"/add-course\" exact component={Auth(AddCourse, true)}/>\r\n                    <Route path=\"/course/:id\" exact component={Auth(AboutCourse, true)}/>\r\n                    <Route path=\"/add-presencesheet/:id\" exact component={Auth(AddPresenceSheet, true)}/>\r\n                    <Route path=\"/add-news\" exact component={Auth(AddNews, true)}/>\r\n                    <Route path=\"/news-list\" exact component={Auth(NewsList, true)}/>\r\n                    <Route path=\"/news/:id\" exact component={Auth(AboutNews, true)}/>\r\n                    <Route path=\"/add-exam/:courseId\" exact component={Auth(AddExam, true)}/>\r\n                    <Route path=\"/add-exam\" exact component={Auth(AddExam, true)}/>\r\n                    <Route path=\"/exam/:id\" exact component={Auth(AboutExam, true)}/>\r\n                    <Route path=\"/exams-list\" exact component={Auth(ExamsList, true)}/>\r\n                    <Route path=\"/add-subject\" exact component={Auth(AddSubject, true)}/>\r\n                    <Route path=\"/subjects-list\" exact component={Auth(SubjectsList, true)}/>\r\n                    <Route path=\"/subject/:id\" exact component={Auth(AboutSubject, true)}/>\r\n                    <Route path=\"/add-department\" exact component={Auth(AddDepartment, true)}/>\r\n                    <Route path=\"/departments-list\" exact component={Auth(DepartmentsList, true)}/>\r\n                    <Route path=\"/department/:id\" exact component={Auth(AboutDepartment, true)}/>\r\n                    <Route path=\"/profile\" exact component={Auth(Profile, true)}/>\r\n                    <Route path=\"/student-overview\" exact component={Auth(StudentOverview, true)}/>\r\n                    <Route path=\"/professor-overview\" exact component={Auth(ProfessorOverview, true)}/>\r\n                    <Route path=\"/documents-list\" exact component={Auth(DocumentsList, true)}/>\r\n                    <Route path=\"/send-document\" exact component={Auth(SendDocument, true)}/>\r\n                    <Route path=\"/chat\" exact component={Auth(Chat, true)}/>\r\n                    <Route component={NotFound}/>\r\n                </Switch>\r\n        </Layout>\r\n\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import {combineReducers} from \"redux\";\r\nimport users from \"./userReducers\";\r\nimport others from \"./otherReducers\";\r\nimport students from \"./studentReducers\";\r\nimport professors from \"./professorReducers\";\r\nimport faculties from \"./facultyReducers\";\r\nimport studyGroups from \"./studyGroupReducers\";\r\nimport studyYears from \"./studyYearReducers\";\r\nimport departments from \"./departmentReducers\";\r\nimport courses from \"./courseReducers\";\r\nimport subjects from \"./subjectsReducers\";\r\nimport presenceSheets from \"./presenceSheetReducers\";\r\nimport marks from \"./markReducers\";\r\nimport news from \"./newsReducers\";\r\nimport exams from \"./examReducers\";\r\nimport documents from \"./documentReducers\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    users,\r\n    students,\r\n    professors,\r\n    faculties,\r\n    studyGroups,\r\n    studyYears,\r\n    departments,\r\n    courses,\r\n    subjects,\r\n    presenceSheets,\r\n    marks,\r\n    news,\r\n    exams,\r\n    documents,\r\n    others\r\n});\r\n\r\nexport default rootReducer;","export default function users(state = {}, action) {\r\n    switch(action.type) {\r\n        case \"USER_LOGIN\":\r\n            return {...state, login: action.payload};\r\n        case \"USER_AUTH\":\r\n            return {...state, login: action.payload};\r\n        case \"USER_LOGOUT\":\r\n            return {...state, login: {type: \"logout\", ...action.payload}};\r\n        case \"UPDATE_USER\":\r\n            return {...state, updatedUser: action.payload};\r\n        case \"CLEAR_UPDATED_USER\":\r\n            return {...state, updatedUser: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","export default function students(state = {}, action) {\r\n    switch(action.type) {\r\n        case \"STUDENTS_LIST\":\r\n            return {...state, studentsList: action.payload};\r\n        case \"FILTERED_STUDENTS_LIST\": \r\n            return {...state, filteredStudentsList: action.payload};\r\n        case \"ADD_STUDENT\":\r\n            return {...state, student: action.payload};\r\n        case \"UPDATE_STUDENT\":\r\n            return {...state, updatedStudent: action.payload};\r\n        case \"CLEAR_STUDENT\":\r\n            return {...state, student: action.payload, updatedStudent: action.payload, deletedStudent: action.payload};\r\n        case \"GENERATE_STUDY_GROUPS\":\r\n            return {...state, generatedStudyGroups: action.payload};\r\n        case \"GET_STUDENT\":\r\n            return {...state, student: action.payload};\r\n        case \"CLEAR_STUDENTS_LIST\":\r\n            return {...state, studentsList: action.payload, filteredStudentsList: action.payload};\r\n        case \"DELETE_STUDENT\":\r\n            return {...state, deletedStudent: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export default function professors(state = {}, action) {\r\n    switch(action.type) {\r\n        case \"PROFESSORS_LIST\":\r\n            return {...state, professorsList: action.payload};\r\n        case \"FILTERED_PROFESSORS_LIST\":\r\n            return {...state, filteredProfessorsList: action.payload};\r\n        case \"ADD_PROFESSOR\":\r\n            return {...state, professor: action.payload};\r\n        case \"UPDATE_PROFESSOR\":\r\n            return {...state, updatedProfessor: action.payload};\r\n        case \"CLEAR_PROFESSOR\":\r\n            return {...state, professor: action.payload, updatedProfessor: action.payload, deletedProfessor: action.payload};\r\n        case \"CLEAR_PROFESSORS\":\r\n            return {...state, professorsList: action.payload, filteredProfessorsList: action.payload};\r\n        case \"GET_PROFESSOR\":\r\n            return {...state, professor: action.payload};\r\n        case \"DELETE_PROFESSOR\":\r\n            return {...state, deletedProfessor: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export default function faculties(state = {}, action) {\r\n    switch(action.type) {\r\n        case \"FACULTIES_LIST\":\r\n            return {...state, facultiesList: action.payload};\r\n        case \"CLEAR_FACULTIES\":\r\n            return {...state, facultiesList: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export default function studyGroups(state = {}, action) {\r\n    switch(action.type) {\r\n        case \"STUDY_GROUPS_LIST\":\r\n            return {...state, studyGroupsList: action.payload};\r\n        case \"FILTERED_STUDY_GROUPS_LIST\": \r\n            return {...state, filteredStudyGroupsList: action.payload};\r\n        case \"ADD_STUDY_GROUP\":\r\n            return {...state, studyGroup: action.payload};\r\n        case \"STUDY_GROUPS_MATCHED\":\r\n            return {...state, studyGroupsList: action.payload};\r\n        case \"GET_STUDY_GROUP\":\r\n            return {...state, studyGroup: action.payload};\r\n        case \"UPDATE_STUDY_GROUP\":\r\n            return {...state, updatedStudyGroup: action.payload};\r\n        case \"LAST_STUDY_GROUP_ID\":\r\n            return {...state, lastStudyGroupId: action.payload};\r\n        case \"CLEAR_LAST_STUDY_GROUP_ID\":\r\n            return {...state, lastStudyGroupId: action.payload};\r\n        case \"CLEAR_STUDY_GROUP\":\r\n            return {...state, studyGroup: action.payload, updatedStudyGroup: action.payload, deletedStudyGroup: action.payload};\r\n        case \"CLEAR_STUDY_GROUPS\":\r\n            return {...state, studyGroupsList: action.payload, filteredStudyGroupsList: action.payload};\r\n        case \"DELETE_STUDY_GROUP\":\r\n            return {...state, deletedStudyGroup: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","export default function studyYears(state = {}, action) {\r\n    switch(action.type) {\r\n        case \"STUDY_YEARS_LIST\":\r\n            return {...state, studyYearsList: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export default function departments(state = {}, action) {\r\n    switch(action.type) {\r\n        case \"DEPARTMENTS_LIST\":\r\n            return {...state, departmentsList: action.payload};\r\n        case \"FILTERED_DEPARTMENTS_LIST\": \r\n            return {...state, filteredDepartmentsList: action.payload};\r\n        case \"GET_DEPARTMENT\":\r\n            return {...state, department: action.payload};\r\n        case \"ADD_DEPARTMENT\":\r\n            return {...state, department: action.payload};\r\n        case \"UPDATE_DEPARTMENT\":\r\n            return {...state, updatedDepartment: action.payload};\r\n        case \"DELETE_DEPARTMENT\":\r\n            return {...state, deletedDepartment: action.payload};\r\n        case \"CLEAR_DEPARTMENT\":\r\n            return {...state, department: action.payload, updatedDepartment: action.payload, deletedDepartment: action.payload}\r\n        case \"CLEAR_DEPARTMENTS_LIST\":\r\n            return {...state, departmentsList: action.payload, filteredDepartmentsList: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export default function courses(state = {}, action) {\r\n    switch(action.type) {\r\n        case \"ADD_COURSE\":\r\n            return {...state, course: action.payload};\r\n        case \"COURSES_LIST\":\r\n            return {...state, coursesList: action.payload};\r\n        case \"KEYWORD_FILTERED_COURSES_LIST\":\r\n            return {...state, keywordFilteredCoursesList: action.payload}\r\n        case \"FILTERED_COURSES_LIST\":\r\n            return {...state, filteredCoursesList: action.payload};\r\n        case \"GET_COURSE\":\r\n            return {...state, course: action.payload};\r\n        case \"UPDATE_COURSE\":\r\n            return {...state, updatedCourse: action.payload};\r\n        case \"DELETE_COURSE\":\r\n            return {...state, deletedCourse: action.payload};\r\n        case \"CLEAR_COURSE\":\r\n            return {...state, course: action.payload, updatedCourse: action.payload, deletedCourse: action.payload}\r\n\r\n        case \"CLEAR_COURSES_LIST\":\r\n            return {...state, coursesList: action.payload, filteredCoursesList: action.payload, keywordFilteredCoursesList: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export default function subjects(state = {}, action) {\r\n    switch(action.type) {\r\n        case \"SUBJECTS_LIST\":\r\n            return {...state, subjectsList: action.payload};\r\n        case \"FILTERED_SUBJECTS_LIST\": \r\n            return {...state, filteredSubjectsList: action.payload};\r\n        case \"ADD_SUBJECT\":\r\n            return {...state, subject: action.payload};\r\n        case \"GET_SUBJECT\":\r\n            return {...state, subject: action.payload};\r\n        case \"UPDATE_SUBJECT\":\r\n            return {...state, updatedSubject: action.payload};\r\n        case \"DELETE_SUBJECT\":\r\n            return {...state, deletedSubject: action.payload};\r\n        case \"CLEAR_SUBJECT\":\r\n            return {...state, subject: action.payload, updatedSubject: action.payload, deletedSubject: action.payload};\r\n        case \"CLEAR_SUBJECTS\":\r\n            return {...state, subjectsList: action.payload, filteredSubjectsList: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","export default function presenceSheets(state = {}, action) {\r\n    switch(action.type) {\r\n        case \"PRESENCES_LIST\":\r\n            return {...state, presencesList: action.payload};\r\n        case \"PRESENCE_SHEETS_LIST\":\r\n            return {...state, presenceSheetsList: action.payload}\r\n        case \"ADD_PRESENCE_SHEET\":\r\n            return {...state, presenceSheet: action.payload};\r\n        case \"UPDATE_PRESENCE\":\r\n            return {...state, updatedPresence: action.payload};\r\n        case \"DELETE_PRESENCE_SHEET\":\r\n            return {...state, deletedPresenceSheet: action.payload};\r\n        case \"CLEAR_PRESENCE_SHEET\":\r\n            return {...state, presenceSheet: action.payload, deletedPresenceSheet: action.payload};\r\n        case \"CLEAR_PRESENCES\":\r\n            return {...state, presencesList: action.payload}\r\n        case \"CLEAR_PRESENCE\":\r\n            return {...state, updatedPresence: action.payload}\r\n        case \"CLEAR_PRESENCE_SHEETS_LIST\":\r\n            return {...state, presenceSheetsList: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export default function marks(state = {}, action) {\r\n    switch(action.type) {\r\n        case \"MARKS_LIST\":\r\n            return {...state, marksList: action.payload};\r\n        case \"UPDATE_MARK\":\r\n            return {...state, updatedMark: action.payload};\r\n        case \"CLEAR_MARK\":\r\n            return {...state, updatedMark: action.payload};\r\n        case \"CLEAR_MARKS_LIST\":\r\n            return {...state, marksList: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export default function news(state = {}, action) {\r\n    switch(action.type) {\r\n        case \"ADD_NEWS\":\r\n            return {...state, news: action.payload};\r\n        case \"NEWS_LIST\":\r\n            return {...state, newsList: action.payload};\r\n        case \"FILTERED_NEWS_LIST\":\r\n            return {...state, filteredNewsList: action.payload};\r\n        case \"GET_NEWS\":\r\n            return {...state, news: action.payload};\r\n        case \"UPDATE_NEWS\":\r\n            return {...state, updatedNews: action.payload};\r\n        case \"DELETE_NEWS\":\r\n            return {...state, deletedNews: action.payload};\r\n        case \"CLEAR_NEWS_LIST\": \r\n            return {...state, newsList: action.payload, filteredNewsList: action.payload};\r\n        case \"CLEAR_NEWS\":\r\n            return {...state, news: action.payload, updatedNews: action.payload, deletedNews: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export default function exams(state = {}, action) {\r\n    switch(action.type) {\r\n        case \"ADD_EXAM\":\r\n            return {...state, exam: action.payload};\r\n        case \"EXAMS_LIST\":\r\n            return {...state, examsList: action.payload};\r\n        case \"FILTERED_EXAMS_LIST\":\r\n            return {...state, filteredExamsList: action.payload};\r\n        case \"KEYWORD_FILTERED_EXAMS_LIST\":\r\n            return {...state, keywordFilteredExamsList: action.payload};\r\n        case \"GET_EXAM\":\r\n            return {...state, exam: action.payload};\r\n        case \"UPDATE_EXAM\":\r\n            return {...state, updatedExam: action.payload};\r\n        case \"DELETE_EXAM\":\r\n            return {...state, deletedExam: action.payload};\r\n        case \"CLEAR_EXAM\":\r\n            return {...state, exam: action.payload, updatedExam: action.payload, deletedExam: action.payload};\r\n        case \"CLEAR_EXAMS_LIST\":\r\n            return {...state, examsList: action.payload, filteredExamsList: action.payload, keywordFilteredExamsList: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export default function documents(state = {}, action) {\r\n    switch(action.type) {\r\n        case \"DOCUMENTS_LIST\":\r\n            return {...state, documentsList: action.payload};\r\n        case \"FILTERED_DOCUMENTS_LIST\":\r\n            return {...state, filteredDocumentsList: action.payload};\r\n        case \"GET_DOCUMENT\":\r\n            return {...state, document: action.payload};\r\n        case \"SEND_DOCUMENT\":\r\n            return {...state, document: action.payload};\r\n        case \"DELETE_DOCUMENT\":\r\n            return {...state, deletedDocument: action.payload};\r\n        case \"CLEAR_DOCUMENTS_LIST\":\r\n            return {...state, documentsList: action.payload, filteredDocumentsList: action.payload}\r\n        case \"CLEAR_DOCUMENT\":\r\n            return {...state, document: action.payload, deletedDocument: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nexport default function others(state = {}, action) {\r\n    switch(action.type) {\r\n        case \"COUNT_ESENTIALS\":\r\n            return {...state, counts: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {createStore, applyMiddleware} from \"redux\";\nimport promiseMiddleware from \"redux-promise\";\nimport ReduxThunk from \"redux-thunk\";\nimport Routes from \"./Routes\";\nimport reducers from \"./reducers/reducers\";\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n  <Provider store={createStoreWithMiddleware(reducers)}>\n    <BrowserRouter>\n      <Routes/>\n    </BrowserRouter>\n  </Provider>\n  ,document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}